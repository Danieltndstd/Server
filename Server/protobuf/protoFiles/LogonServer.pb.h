// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LogonServer.proto

#ifndef PROTOBUF_LogonServer_2eproto__INCLUDED
#define PROTOBUF_LogonServer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace LogonServer {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_LogonServer_2eproto();
void protobuf_AssignDesc_LogonServer_2eproto();
void protobuf_ShutdownFile_LogonServer_2eproto();

class PROTO_CESHI;
class PROTO_RegisterAccounts;
class PROTO_LogonAccountsBCode;
class PROTO_RegisterAccountsBCode;
class PROTO_LogonVisitor;
class PROTO_RegisterMobile;
class PROTO_LogonSuccessBCode;
class PROTO_LogonFinish;
class PROTO_OperateResult;
class PROTO_ModifyLogonPass;
class PROTO_ModifyNickName;
class PROTO_ModifyResult;
class PROTO_UserSaveScore;
class PROTO_UserTakeScore;
class PROTO_QueryInsureInfo;
class PROTO_UserInsureSuccess;
class PROTO_UserInsureFailure;
class PROTO_GetDialInfo;
class PROTO_GetDailInfoResult;
class PROTO_RotateDailAward;
class PROTO_RotateDailAwardInfo;
class PROTO_GetUserSignIn;
class PROTO_SetUserSignIn;
class PROTO_GetSignInResult;
class PROTO_ChickBindBank;
class PROTO_GP_BindBankCard;
class PROTO_ChickBindZFB;
class PROTO_BindZFB;
class PROTO_BindBankInfo;
class PROTO_BindZFBInfo;
class PROTO_RequestMail;
class PROTO_ReadDeleteMail;
class ProtoRequestMail;
class PROTO_RequestMailToal;
class PROTO_ReadDeleteMailToal;

// ===================================================================

class PROTO_CESHI : public ::google::protobuf::MessageLite {
 public:
  PROTO_CESHI();
  virtual ~PROTO_CESHI();

  PROTO_CESHI(const PROTO_CESHI& from);

  inline PROTO_CESHI& operator=(const PROTO_CESHI& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_CESHI& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_CESHI* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_CESHI* other);

  // implements Message ----------------------------------------------

  PROTO_CESHI* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_CESHI& from);
  void MergeFrom(const PROTO_CESHI& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 bUserID = 1;
  inline bool has_buserid() const;
  inline void clear_buserid();
  static const int kBUserIDFieldNumber = 1;
  inline ::google::protobuf::int64 buserid() const;
  inline void set_buserid(::google::protobuf::int64 value);

  // required int32 cbPlayStatus = 2;
  inline bool has_cbplaystatus() const;
  inline void clear_cbplaystatus();
  static const int kCbPlayStatusFieldNumber = 2;
  inline ::google::protobuf::int32 cbplaystatus() const;
  inline void set_cbplaystatus(::google::protobuf::int32 value);

  // required int32 cbMaxCall = 3;
  inline bool has_cbmaxcall() const;
  inline void clear_cbmaxcall();
  static const int kCbMaxCallFieldNumber = 3;
  inline ::google::protobuf::int32 cbmaxcall() const;
  inline void set_cbmaxcall(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_CESHI)
 private:
  inline void set_has_buserid();
  inline void clear_has_buserid();
  inline void set_has_cbplaystatus();
  inline void clear_has_cbplaystatus();
  inline void set_has_cbmaxcall();
  inline void clear_has_cbmaxcall();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 buserid_;
  ::google::protobuf::int32 cbplaystatus_;
  ::google::protobuf::int32 cbmaxcall_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_CESHI* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_RegisterAccounts : public ::google::protobuf::MessageLite {
 public:
  PROTO_RegisterAccounts();
  virtual ~PROTO_RegisterAccounts();

  PROTO_RegisterAccounts(const PROTO_RegisterAccounts& from);

  inline PROTO_RegisterAccounts& operator=(const PROTO_RegisterAccounts& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_RegisterAccounts& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_RegisterAccounts* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_RegisterAccounts* other);

  // implements Message ----------------------------------------------

  PROTO_RegisterAccounts* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_RegisterAccounts& from);
  void MergeFrom(const PROTO_RegisterAccounts& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 cbGender = 1;
  inline bool has_cbgender() const;
  inline void clear_cbgender();
  static const int kCbGenderFieldNumber = 1;
  inline ::google::protobuf::int64 cbgender() const;
  inline void set_cbgender(::google::protobuf::int64 value);

  // required string szAccounts = 2;
  inline bool has_szaccounts() const;
  inline void clear_szaccounts();
  static const int kSzAccountsFieldNumber = 2;
  inline const ::std::string& szaccounts() const;
  inline void set_szaccounts(const ::std::string& value);
  inline void set_szaccounts(const char* value);
  inline void set_szaccounts(const char* value, size_t size);
  inline ::std::string* mutable_szaccounts();
  inline ::std::string* release_szaccounts();
  inline void set_allocated_szaccounts(::std::string* szaccounts);

  // required string szNickName = 3;
  inline bool has_sznickname() const;
  inline void clear_sznickname();
  static const int kSzNickNameFieldNumber = 3;
  inline const ::std::string& sznickname() const;
  inline void set_sznickname(const ::std::string& value);
  inline void set_sznickname(const char* value);
  inline void set_sznickname(const char* value, size_t size);
  inline ::std::string* mutable_sznickname();
  inline ::std::string* release_sznickname();
  inline void set_allocated_sznickname(::std::string* sznickname);

  // required string szLogonPass = 4;
  inline bool has_szlogonpass() const;
  inline void clear_szlogonpass();
  static const int kSzLogonPassFieldNumber = 4;
  inline const ::std::string& szlogonpass() const;
  inline void set_szlogonpass(const ::std::string& value);
  inline void set_szlogonpass(const char* value);
  inline void set_szlogonpass(const char* value, size_t size);
  inline ::std::string* mutable_szlogonpass();
  inline ::std::string* release_szlogonpass();
  inline void set_allocated_szlogonpass(::std::string* szlogonpass);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_RegisterAccounts)
 private:
  inline void set_has_cbgender();
  inline void clear_has_cbgender();
  inline void set_has_szaccounts();
  inline void clear_has_szaccounts();
  inline void set_has_sznickname();
  inline void clear_has_sznickname();
  inline void set_has_szlogonpass();
  inline void clear_has_szlogonpass();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 cbgender_;
  ::std::string* szaccounts_;
  ::std::string* sznickname_;
  ::std::string* szlogonpass_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_RegisterAccounts* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_LogonAccountsBCode : public ::google::protobuf::MessageLite {
 public:
  PROTO_LogonAccountsBCode();
  virtual ~PROTO_LogonAccountsBCode();

  PROTO_LogonAccountsBCode(const PROTO_LogonAccountsBCode& from);

  inline PROTO_LogonAccountsBCode& operator=(const PROTO_LogonAccountsBCode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_LogonAccountsBCode& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_LogonAccountsBCode* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_LogonAccountsBCode* other);

  // implements Message ----------------------------------------------

  PROTO_LogonAccountsBCode* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_LogonAccountsBCode& from);
  void MergeFrom(const PROTO_LogonAccountsBCode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwPlazaVersion = 1;
  inline bool has_dwplazaversion() const;
  inline void clear_dwplazaversion();
  static const int kDwPlazaVersionFieldNumber = 1;
  inline ::google::protobuf::int64 dwplazaversion() const;
  inline void set_dwplazaversion(::google::protobuf::int64 value);

  // required int32 cbDeviceType = 2;
  inline bool has_cbdevicetype() const;
  inline void clear_cbdevicetype();
  static const int kCbDeviceTypeFieldNumber = 2;
  inline ::google::protobuf::int32 cbdevicetype() const;
  inline void set_cbdevicetype(::google::protobuf::int32 value);

  // required string szPassword = 3;
  inline bool has_szpassword() const;
  inline void clear_szpassword();
  static const int kSzPasswordFieldNumber = 3;
  inline const ::std::string& szpassword() const;
  inline void set_szpassword(const ::std::string& value);
  inline void set_szpassword(const char* value);
  inline void set_szpassword(const char* value, size_t size);
  inline ::std::string* mutable_szpassword();
  inline ::std::string* release_szpassword();
  inline void set_allocated_szpassword(::std::string* szpassword);

  // required string szAccounts = 4;
  inline bool has_szaccounts() const;
  inline void clear_szaccounts();
  static const int kSzAccountsFieldNumber = 4;
  inline const ::std::string& szaccounts() const;
  inline void set_szaccounts(const ::std::string& value);
  inline void set_szaccounts(const char* value);
  inline void set_szaccounts(const char* value, size_t size);
  inline ::std::string* mutable_szaccounts();
  inline ::std::string* release_szaccounts();
  inline void set_allocated_szaccounts(::std::string* szaccounts);

  // required string szMachineID = 5;
  inline bool has_szmachineid() const;
  inline void clear_szmachineid();
  static const int kSzMachineIDFieldNumber = 5;
  inline const ::std::string& szmachineid() const;
  inline void set_szmachineid(const ::std::string& value);
  inline void set_szmachineid(const char* value);
  inline void set_szmachineid(const char* value, size_t size);
  inline ::std::string* mutable_szmachineid();
  inline ::std::string* release_szmachineid();
  inline void set_allocated_szmachineid(::std::string* szmachineid);

  // required string szMobilePhone = 6;
  inline bool has_szmobilephone() const;
  inline void clear_szmobilephone();
  static const int kSzMobilePhoneFieldNumber = 6;
  inline const ::std::string& szmobilephone() const;
  inline void set_szmobilephone(const ::std::string& value);
  inline void set_szmobilephone(const char* value);
  inline void set_szmobilephone(const char* value, size_t size);
  inline ::std::string* mutable_szmobilephone();
  inline ::std::string* release_szmobilephone();
  inline void set_allocated_szmobilephone(::std::string* szmobilephone);

  // required int64 dwInviteID = 7;
  inline bool has_dwinviteid() const;
  inline void clear_dwinviteid();
  static const int kDwInviteIDFieldNumber = 7;
  inline ::google::protobuf::int64 dwinviteid() const;
  inline void set_dwinviteid(::google::protobuf::int64 value);

  // required int64 dwSortID = 8;
  inline bool has_dwsortid() const;
  inline void clear_dwsortid();
  static const int kDwSortIDFieldNumber = 8;
  inline ::google::protobuf::int64 dwsortid() const;
  inline void set_dwsortid(::google::protobuf::int64 value);

  // required int64 dwLogonType = 9;
  inline bool has_dwlogontype() const;
  inline void clear_dwlogontype();
  static const int kDwLogonTypeFieldNumber = 9;
  inline ::google::protobuf::int64 dwlogontype() const;
  inline void set_dwlogontype(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_LogonAccountsBCode)
 private:
  inline void set_has_dwplazaversion();
  inline void clear_has_dwplazaversion();
  inline void set_has_cbdevicetype();
  inline void clear_has_cbdevicetype();
  inline void set_has_szpassword();
  inline void clear_has_szpassword();
  inline void set_has_szaccounts();
  inline void clear_has_szaccounts();
  inline void set_has_szmachineid();
  inline void clear_has_szmachineid();
  inline void set_has_szmobilephone();
  inline void clear_has_szmobilephone();
  inline void set_has_dwinviteid();
  inline void clear_has_dwinviteid();
  inline void set_has_dwsortid();
  inline void clear_has_dwsortid();
  inline void set_has_dwlogontype();
  inline void clear_has_dwlogontype();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwplazaversion_;
  ::std::string* szpassword_;
  ::std::string* szaccounts_;
  ::std::string* szmachineid_;
  ::std::string* szmobilephone_;
  ::google::protobuf::int64 dwinviteid_;
  ::google::protobuf::int64 dwsortid_;
  ::google::protobuf::int64 dwlogontype_;
  ::google::protobuf::int32 cbdevicetype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_LogonAccountsBCode* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_RegisterAccountsBCode : public ::google::protobuf::MessageLite {
 public:
  PROTO_RegisterAccountsBCode();
  virtual ~PROTO_RegisterAccountsBCode();

  PROTO_RegisterAccountsBCode(const PROTO_RegisterAccountsBCode& from);

  inline PROTO_RegisterAccountsBCode& operator=(const PROTO_RegisterAccountsBCode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_RegisterAccountsBCode& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_RegisterAccountsBCode* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_RegisterAccountsBCode* other);

  // implements Message ----------------------------------------------

  PROTO_RegisterAccountsBCode* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_RegisterAccountsBCode& from);
  void MergeFrom(const PROTO_RegisterAccountsBCode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 cbDeviceType = 1;
  inline bool has_cbdevicetype() const;
  inline void clear_cbdevicetype();
  static const int kCbDeviceTypeFieldNumber = 1;
  inline ::google::protobuf::int32 cbdevicetype() const;
  inline void set_cbdevicetype(::google::protobuf::int32 value);

  // required string szLogonPass = 2;
  inline bool has_szlogonpass() const;
  inline void clear_szlogonpass();
  static const int kSzLogonPassFieldNumber = 2;
  inline const ::std::string& szlogonpass() const;
  inline void set_szlogonpass(const ::std::string& value);
  inline void set_szlogonpass(const char* value);
  inline void set_szlogonpass(const char* value, size_t size);
  inline ::std::string* mutable_szlogonpass();
  inline ::std::string* release_szlogonpass();
  inline void set_allocated_szlogonpass(::std::string* szlogonpass);

  // required string szInsurePass = 3;
  inline bool has_szinsurepass() const;
  inline void clear_szinsurepass();
  static const int kSzInsurePassFieldNumber = 3;
  inline const ::std::string& szinsurepass() const;
  inline void set_szinsurepass(const ::std::string& value);
  inline void set_szinsurepass(const char* value);
  inline void set_szinsurepass(const char* value, size_t size);
  inline ::std::string* mutable_szinsurepass();
  inline ::std::string* release_szinsurepass();
  inline void set_allocated_szinsurepass(::std::string* szinsurepass);

  // required int64 wFaceID = 4;
  inline bool has_wfaceid() const;
  inline void clear_wfaceid();
  static const int kWFaceIDFieldNumber = 4;
  inline ::google::protobuf::int64 wfaceid() const;
  inline void set_wfaceid(::google::protobuf::int64 value);

  // required int32 cbGender = 5;
  inline bool has_cbgender() const;
  inline void clear_cbgender();
  static const int kCbGenderFieldNumber = 5;
  inline ::google::protobuf::int32 cbgender() const;
  inline void set_cbgender(::google::protobuf::int32 value);

  // required string szAccounts = 6;
  inline bool has_szaccounts() const;
  inline void clear_szaccounts();
  static const int kSzAccountsFieldNumber = 6;
  inline const ::std::string& szaccounts() const;
  inline void set_szaccounts(const ::std::string& value);
  inline void set_szaccounts(const char* value);
  inline void set_szaccounts(const char* value, size_t size);
  inline ::std::string* mutable_szaccounts();
  inline ::std::string* release_szaccounts();
  inline void set_allocated_szaccounts(::std::string* szaccounts);

  // required string szNickName = 7;
  inline bool has_sznickname() const;
  inline void clear_sznickname();
  static const int kSzNickNameFieldNumber = 7;
  inline const ::std::string& sznickname() const;
  inline void set_sznickname(const ::std::string& value);
  inline void set_sznickname(const char* value);
  inline void set_sznickname(const char* value, size_t size);
  inline ::std::string* mutable_sznickname();
  inline ::std::string* release_sznickname();
  inline void set_allocated_sznickname(::std::string* sznickname);

  // required string szMachineID = 8;
  inline bool has_szmachineid() const;
  inline void clear_szmachineid();
  static const int kSzMachineIDFieldNumber = 8;
  inline const ::std::string& szmachineid() const;
  inline void set_szmachineid(const ::std::string& value);
  inline void set_szmachineid(const char* value);
  inline void set_szmachineid(const char* value, size_t size);
  inline ::std::string* mutable_szmachineid();
  inline ::std::string* release_szmachineid();
  inline void set_allocated_szmachineid(::std::string* szmachineid);

  // required string szMobilePhone = 9;
  inline bool has_szmobilephone() const;
  inline void clear_szmobilephone();
  static const int kSzMobilePhoneFieldNumber = 9;
  inline const ::std::string& szmobilephone() const;
  inline void set_szmobilephone(const ::std::string& value);
  inline void set_szmobilephone(const char* value);
  inline void set_szmobilephone(const char* value, size_t size);
  inline ::std::string* mutable_szmobilephone();
  inline ::std::string* release_szmobilephone();
  inline void set_allocated_szmobilephone(::std::string* szmobilephone);

  // required int64 dwSpreaderID = 10;
  inline bool has_dwspreaderid() const;
  inline void clear_dwspreaderid();
  static const int kDwSpreaderIDFieldNumber = 10;
  inline ::google::protobuf::int64 dwspreaderid() const;
  inline void set_dwspreaderid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_RegisterAccountsBCode)
 private:
  inline void set_has_cbdevicetype();
  inline void clear_has_cbdevicetype();
  inline void set_has_szlogonpass();
  inline void clear_has_szlogonpass();
  inline void set_has_szinsurepass();
  inline void clear_has_szinsurepass();
  inline void set_has_wfaceid();
  inline void clear_has_wfaceid();
  inline void set_has_cbgender();
  inline void clear_has_cbgender();
  inline void set_has_szaccounts();
  inline void clear_has_szaccounts();
  inline void set_has_sznickname();
  inline void clear_has_sznickname();
  inline void set_has_szmachineid();
  inline void clear_has_szmachineid();
  inline void set_has_szmobilephone();
  inline void clear_has_szmobilephone();
  inline void set_has_dwspreaderid();
  inline void clear_has_dwspreaderid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* szlogonpass_;
  ::std::string* szinsurepass_;
  ::google::protobuf::int32 cbdevicetype_;
  ::google::protobuf::int32 cbgender_;
  ::google::protobuf::int64 wfaceid_;
  ::std::string* szaccounts_;
  ::std::string* sznickname_;
  ::std::string* szmachineid_;
  ::std::string* szmobilephone_;
  ::google::protobuf::int64 dwspreaderid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_RegisterAccountsBCode* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_LogonVisitor : public ::google::protobuf::MessageLite {
 public:
  PROTO_LogonVisitor();
  virtual ~PROTO_LogonVisitor();

  PROTO_LogonVisitor(const PROTO_LogonVisitor& from);

  inline PROTO_LogonVisitor& operator=(const PROTO_LogonVisitor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_LogonVisitor& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_LogonVisitor* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_LogonVisitor* other);

  // implements Message ----------------------------------------------

  PROTO_LogonVisitor* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_LogonVisitor& from);
  void MergeFrom(const PROTO_LogonVisitor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwPlazaVersion = 1;
  inline bool has_dwplazaversion() const;
  inline void clear_dwplazaversion();
  static const int kDwPlazaVersionFieldNumber = 1;
  inline ::google::protobuf::int64 dwplazaversion() const;
  inline void set_dwplazaversion(::google::protobuf::int64 value);

  // required int64 cbDeviceType = 2;
  inline bool has_cbdevicetype() const;
  inline void clear_cbdevicetype();
  static const int kCbDeviceTypeFieldNumber = 2;
  inline ::google::protobuf::int64 cbdevicetype() const;
  inline void set_cbdevicetype(::google::protobuf::int64 value);

  // required string szMachineID = 3;
  inline bool has_szmachineid() const;
  inline void clear_szmachineid();
  static const int kSzMachineIDFieldNumber = 3;
  inline const ::std::string& szmachineid() const;
  inline void set_szmachineid(const ::std::string& value);
  inline void set_szmachineid(const char* value);
  inline void set_szmachineid(const char* value, size_t size);
  inline ::std::string* mutable_szmachineid();
  inline ::std::string* release_szmachineid();
  inline void set_allocated_szmachineid(::std::string* szmachineid);

  // required string szSpreader = 4;
  inline bool has_szspreader() const;
  inline void clear_szspreader();
  static const int kSzSpreaderFieldNumber = 4;
  inline const ::std::string& szspreader() const;
  inline void set_szspreader(const ::std::string& value);
  inline void set_szspreader(const char* value);
  inline void set_szspreader(const char* value, size_t size);
  inline ::std::string* mutable_szspreader();
  inline ::std::string* release_szspreader();
  inline void set_allocated_szspreader(::std::string* szspreader);

  // required int64 dwInviteID = 5;
  inline bool has_dwinviteid() const;
  inline void clear_dwinviteid();
  static const int kDwInviteIDFieldNumber = 5;
  inline ::google::protobuf::int64 dwinviteid() const;
  inline void set_dwinviteid(::google::protobuf::int64 value);

  // required int64 dwSortID = 6;
  inline bool has_dwsortid() const;
  inline void clear_dwsortid();
  static const int kDwSortIDFieldNumber = 6;
  inline ::google::protobuf::int64 dwsortid() const;
  inline void set_dwsortid(::google::protobuf::int64 value);

  // required int64 dwLogonType = 7;
  inline bool has_dwlogontype() const;
  inline void clear_dwlogontype();
  static const int kDwLogonTypeFieldNumber = 7;
  inline ::google::protobuf::int64 dwlogontype() const;
  inline void set_dwlogontype(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_LogonVisitor)
 private:
  inline void set_has_dwplazaversion();
  inline void clear_has_dwplazaversion();
  inline void set_has_cbdevicetype();
  inline void clear_has_cbdevicetype();
  inline void set_has_szmachineid();
  inline void clear_has_szmachineid();
  inline void set_has_szspreader();
  inline void clear_has_szspreader();
  inline void set_has_dwinviteid();
  inline void clear_has_dwinviteid();
  inline void set_has_dwsortid();
  inline void clear_has_dwsortid();
  inline void set_has_dwlogontype();
  inline void clear_has_dwlogontype();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwplazaversion_;
  ::google::protobuf::int64 cbdevicetype_;
  ::std::string* szmachineid_;
  ::std::string* szspreader_;
  ::google::protobuf::int64 dwinviteid_;
  ::google::protobuf::int64 dwsortid_;
  ::google::protobuf::int64 dwlogontype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_LogonVisitor* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_RegisterMobile : public ::google::protobuf::MessageLite {
 public:
  PROTO_RegisterMobile();
  virtual ~PROTO_RegisterMobile();

  PROTO_RegisterMobile(const PROTO_RegisterMobile& from);

  inline PROTO_RegisterMobile& operator=(const PROTO_RegisterMobile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_RegisterMobile& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_RegisterMobile* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_RegisterMobile* other);

  // implements Message ----------------------------------------------

  PROTO_RegisterMobile* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_RegisterMobile& from);
  void MergeFrom(const PROTO_RegisterMobile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string szMobilePhone = 1;
  inline bool has_szmobilephone() const;
  inline void clear_szmobilephone();
  static const int kSzMobilePhoneFieldNumber = 1;
  inline const ::std::string& szmobilephone() const;
  inline void set_szmobilephone(const ::std::string& value);
  inline void set_szmobilephone(const char* value);
  inline void set_szmobilephone(const char* value, size_t size);
  inline ::std::string* mutable_szmobilephone();
  inline ::std::string* release_szmobilephone();
  inline void set_allocated_szmobilephone(::std::string* szmobilephone);

  // required string szLogonPass = 2;
  inline bool has_szlogonpass() const;
  inline void clear_szlogonpass();
  static const int kSzLogonPassFieldNumber = 2;
  inline const ::std::string& szlogonpass() const;
  inline void set_szlogonpass(const ::std::string& value);
  inline void set_szlogonpass(const char* value);
  inline void set_szlogonpass(const char* value, size_t size);
  inline ::std::string* mutable_szlogonpass();
  inline ::std::string* release_szlogonpass();
  inline void set_allocated_szlogonpass(::std::string* szlogonpass);

  // required string szMachineID = 3;
  inline bool has_szmachineid() const;
  inline void clear_szmachineid();
  static const int kSzMachineIDFieldNumber = 3;
  inline const ::std::string& szmachineid() const;
  inline void set_szmachineid(const ::std::string& value);
  inline void set_szmachineid(const char* value);
  inline void set_szmachineid(const char* value, size_t size);
  inline ::std::string* mutable_szmachineid();
  inline ::std::string* release_szmachineid();
  inline void set_allocated_szmachineid(::std::string* szmachineid);

  // required string szVerificationCode = 4;
  inline bool has_szverificationcode() const;
  inline void clear_szverificationcode();
  static const int kSzVerificationCodeFieldNumber = 4;
  inline const ::std::string& szverificationcode() const;
  inline void set_szverificationcode(const ::std::string& value);
  inline void set_szverificationcode(const char* value);
  inline void set_szverificationcode(const char* value, size_t size);
  inline ::std::string* mutable_szverificationcode();
  inline ::std::string* release_szverificationcode();
  inline void set_allocated_szverificationcode(::std::string* szverificationcode);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_RegisterMobile)
 private:
  inline void set_has_szmobilephone();
  inline void clear_has_szmobilephone();
  inline void set_has_szlogonpass();
  inline void clear_has_szlogonpass();
  inline void set_has_szmachineid();
  inline void clear_has_szmachineid();
  inline void set_has_szverificationcode();
  inline void clear_has_szverificationcode();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* szmobilephone_;
  ::std::string* szlogonpass_;
  ::std::string* szmachineid_;
  ::std::string* szverificationcode_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_RegisterMobile* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_LogonSuccessBCode : public ::google::protobuf::MessageLite {
 public:
  PROTO_LogonSuccessBCode();
  virtual ~PROTO_LogonSuccessBCode();

  PROTO_LogonSuccessBCode(const PROTO_LogonSuccessBCode& from);

  inline PROTO_LogonSuccessBCode& operator=(const PROTO_LogonSuccessBCode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_LogonSuccessBCode& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_LogonSuccessBCode* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_LogonSuccessBCode* other);

  // implements Message ----------------------------------------------

  PROTO_LogonSuccessBCode* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_LogonSuccessBCode& from);
  void MergeFrom(const PROTO_LogonSuccessBCode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 wFaceID = 1;
  inline bool has_wfaceid() const;
  inline void clear_wfaceid();
  static const int kWFaceIDFieldNumber = 1;
  inline ::google::protobuf::int64 wfaceid() const;
  inline void set_wfaceid(::google::protobuf::int64 value);

  // required int32 cbGender = 2;
  inline bool has_cbgender() const;
  inline void clear_cbgender();
  static const int kCbGenderFieldNumber = 2;
  inline ::google::protobuf::int32 cbgender() const;
  inline void set_cbgender(::google::protobuf::int32 value);

  // required int64 dwUserID = 3;
  inline bool has_dwuserid() const;
  inline void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 3;
  inline ::google::protobuf::int64 dwuserid() const;
  inline void set_dwuserid(::google::protobuf::int64 value);

  // required int64 dwGameID = 4;
  inline bool has_dwgameid() const;
  inline void clear_dwgameid();
  static const int kDwGameIDFieldNumber = 4;
  inline ::google::protobuf::int64 dwgameid() const;
  inline void set_dwgameid(::google::protobuf::int64 value);

  // required int64 dwExperience = 5;
  inline bool has_dwexperience() const;
  inline void clear_dwexperience();
  static const int kDwExperienceFieldNumber = 5;
  inline ::google::protobuf::int64 dwexperience() const;
  inline void set_dwexperience(::google::protobuf::int64 value);

  // required int32 cbMemberOrder = 6;
  inline bool has_cbmemberorder() const;
  inline void clear_cbmemberorder();
  static const int kCbMemberOrderFieldNumber = 6;
  inline ::google::protobuf::int32 cbmemberorder() const;
  inline void set_cbmemberorder(::google::protobuf::int32 value);

  // required int64 dwUserMedal = 7;
  inline bool has_dwusermedal() const;
  inline void clear_dwusermedal();
  static const int kDwUserMedalFieldNumber = 7;
  inline ::google::protobuf::int64 dwusermedal() const;
  inline void set_dwusermedal(::google::protobuf::int64 value);

  // required int64 lUserScore = 8;
  inline bool has_luserscore() const;
  inline void clear_luserscore();
  static const int kLUserScoreFieldNumber = 8;
  inline ::google::protobuf::int64 luserscore() const;
  inline void set_luserscore(::google::protobuf::int64 value);

  // required int64 lUserInsure = 9;
  inline bool has_luserinsure() const;
  inline void clear_luserinsure();
  static const int kLUserInsureFieldNumber = 9;
  inline ::google::protobuf::int64 luserinsure() const;
  inline void set_luserinsure(::google::protobuf::int64 value);

  // required int64 dwInoutIndex = 10;
  inline bool has_dwinoutindex() const;
  inline void clear_dwinoutindex();
  static const int kDwInoutIndexFieldNumber = 10;
  inline ::google::protobuf::int64 dwinoutindex() const;
  inline void set_dwinoutindex(::google::protobuf::int64 value);

  // required int64 lRevenue = 11;
  inline bool has_lrevenue() const;
  inline void clear_lrevenue();
  static const int kLRevenueFieldNumber = 11;
  inline ::google::protobuf::int64 lrevenue() const;
  inline void set_lrevenue(::google::protobuf::int64 value);

  // required int64 lLobbyLV = 12;
  inline bool has_llobbylv() const;
  inline void clear_llobbylv();
  static const int kLLobbyLVFieldNumber = 12;
  inline ::google::protobuf::int64 llobbylv() const;
  inline void set_llobbylv(::google::protobuf::int64 value);

  // required int32 cbVisitorClient = 13;
  inline bool has_cbvisitorclient() const;
  inline void clear_cbvisitorclient();
  static const int kCbVisitorClientFieldNumber = 13;
  inline ::google::protobuf::int32 cbvisitorclient() const;
  inline void set_cbvisitorclient(::google::protobuf::int32 value);

  // required string szNickName = 14;
  inline bool has_sznickname() const;
  inline void clear_sznickname();
  static const int kSzNickNameFieldNumber = 14;
  inline const ::std::string& sznickname() const;
  inline void set_sznickname(const ::std::string& value);
  inline void set_sznickname(const char* value);
  inline void set_sznickname(const char* value, size_t size);
  inline ::std::string* mutable_sznickname();
  inline ::std::string* release_sznickname();
  inline void set_allocated_sznickname(::std::string* sznickname);

  // required string szAccounts = 15;
  inline bool has_szaccounts() const;
  inline void clear_szaccounts();
  static const int kSzAccountsFieldNumber = 15;
  inline const ::std::string& szaccounts() const;
  inline void set_szaccounts(const ::std::string& value);
  inline void set_szaccounts(const char* value);
  inline void set_szaccounts(const char* value, size_t size);
  inline ::std::string* mutable_szaccounts();
  inline ::std::string* release_szaccounts();
  inline void set_allocated_szaccounts(::std::string* szaccounts);

  // required string szUnderWrite = 16;
  inline bool has_szunderwrite() const;
  inline void clear_szunderwrite();
  static const int kSzUnderWriteFieldNumber = 16;
  inline const ::std::string& szunderwrite() const;
  inline void set_szunderwrite(const ::std::string& value);
  inline void set_szunderwrite(const char* value);
  inline void set_szunderwrite(const char* value, size_t size);
  inline ::std::string* mutable_szunderwrite();
  inline ::std::string* release_szunderwrite();
  inline void set_allocated_szunderwrite(::std::string* szunderwrite);

  // required int64 dwServerID = 17;
  inline bool has_dwserverid() const;
  inline void clear_dwserverid();
  static const int kDwServerIDFieldNumber = 17;
  inline ::google::protobuf::int64 dwserverid() const;
  inline void set_dwserverid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_LogonSuccessBCode)
 private:
  inline void set_has_wfaceid();
  inline void clear_has_wfaceid();
  inline void set_has_cbgender();
  inline void clear_has_cbgender();
  inline void set_has_dwuserid();
  inline void clear_has_dwuserid();
  inline void set_has_dwgameid();
  inline void clear_has_dwgameid();
  inline void set_has_dwexperience();
  inline void clear_has_dwexperience();
  inline void set_has_cbmemberorder();
  inline void clear_has_cbmemberorder();
  inline void set_has_dwusermedal();
  inline void clear_has_dwusermedal();
  inline void set_has_luserscore();
  inline void clear_has_luserscore();
  inline void set_has_luserinsure();
  inline void clear_has_luserinsure();
  inline void set_has_dwinoutindex();
  inline void clear_has_dwinoutindex();
  inline void set_has_lrevenue();
  inline void clear_has_lrevenue();
  inline void set_has_llobbylv();
  inline void clear_has_llobbylv();
  inline void set_has_cbvisitorclient();
  inline void clear_has_cbvisitorclient();
  inline void set_has_sznickname();
  inline void clear_has_sznickname();
  inline void set_has_szaccounts();
  inline void clear_has_szaccounts();
  inline void set_has_szunderwrite();
  inline void clear_has_szunderwrite();
  inline void set_has_dwserverid();
  inline void clear_has_dwserverid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 wfaceid_;
  ::google::protobuf::int64 dwuserid_;
  ::google::protobuf::int64 dwgameid_;
  ::google::protobuf::int32 cbgender_;
  ::google::protobuf::int32 cbmemberorder_;
  ::google::protobuf::int64 dwexperience_;
  ::google::protobuf::int64 dwusermedal_;
  ::google::protobuf::int64 luserscore_;
  ::google::protobuf::int64 luserinsure_;
  ::google::protobuf::int64 dwinoutindex_;
  ::google::protobuf::int64 lrevenue_;
  ::google::protobuf::int64 llobbylv_;
  ::std::string* sznickname_;
  ::std::string* szaccounts_;
  ::std::string* szunderwrite_;
  ::google::protobuf::int64 dwserverid_;
  ::google::protobuf::int32 cbvisitorclient_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_LogonSuccessBCode* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_LogonFinish : public ::google::protobuf::MessageLite {
 public:
  PROTO_LogonFinish();
  virtual ~PROTO_LogonFinish();

  PROTO_LogonFinish(const PROTO_LogonFinish& from);

  inline PROTO_LogonFinish& operator=(const PROTO_LogonFinish& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_LogonFinish& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_LogonFinish* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_LogonFinish* other);

  // implements Message ----------------------------------------------

  PROTO_LogonFinish* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_LogonFinish& from);
  void MergeFrom(const PROTO_LogonFinish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 cbLogonFinish = 1;
  inline bool has_cblogonfinish() const;
  inline void clear_cblogonfinish();
  static const int kCbLogonFinishFieldNumber = 1;
  inline ::google::protobuf::int32 cblogonfinish() const;
  inline void set_cblogonfinish(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_LogonFinish)
 private:
  inline void set_has_cblogonfinish();
  inline void clear_has_cblogonfinish();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 cblogonfinish_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_LogonFinish* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_OperateResult : public ::google::protobuf::MessageLite {
 public:
  PROTO_OperateResult();
  virtual ~PROTO_OperateResult();

  PROTO_OperateResult(const PROTO_OperateResult& from);

  inline PROTO_OperateResult& operator=(const PROTO_OperateResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_OperateResult& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_OperateResult* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_OperateResult* other);

  // implements Message ----------------------------------------------

  PROTO_OperateResult* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_OperateResult& from);
  void MergeFrom(const PROTO_OperateResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 wSubCommandID = 1;
  inline bool has_wsubcommandid() const;
  inline void clear_wsubcommandid();
  static const int kWSubCommandIDFieldNumber = 1;
  inline ::google::protobuf::int32 wsubcommandid() const;
  inline void set_wsubcommandid(::google::protobuf::int32 value);

  // required int64 dwResultCode = 2;
  inline bool has_dwresultcode() const;
  inline void clear_dwresultcode();
  static const int kDwResultCodeFieldNumber = 2;
  inline ::google::protobuf::int64 dwresultcode() const;
  inline void set_dwresultcode(::google::protobuf::int64 value);

  // required string szDescribeString = 3;
  inline bool has_szdescribestring() const;
  inline void clear_szdescribestring();
  static const int kSzDescribeStringFieldNumber = 3;
  inline const ::std::string& szdescribestring() const;
  inline void set_szdescribestring(const ::std::string& value);
  inline void set_szdescribestring(const char* value);
  inline void set_szdescribestring(const char* value, size_t size);
  inline ::std::string* mutable_szdescribestring();
  inline ::std::string* release_szdescribestring();
  inline void set_allocated_szdescribestring(::std::string* szdescribestring);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_OperateResult)
 private:
  inline void set_has_wsubcommandid();
  inline void clear_has_wsubcommandid();
  inline void set_has_dwresultcode();
  inline void clear_has_dwresultcode();
  inline void set_has_szdescribestring();
  inline void clear_has_szdescribestring();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwresultcode_;
  ::std::string* szdescribestring_;
  ::google::protobuf::int32 wsubcommandid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_OperateResult* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_ModifyLogonPass : public ::google::protobuf::MessageLite {
 public:
  PROTO_ModifyLogonPass();
  virtual ~PROTO_ModifyLogonPass();

  PROTO_ModifyLogonPass(const PROTO_ModifyLogonPass& from);

  inline PROTO_ModifyLogonPass& operator=(const PROTO_ModifyLogonPass& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_ModifyLogonPass& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_ModifyLogonPass* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_ModifyLogonPass* other);

  // implements Message ----------------------------------------------

  PROTO_ModifyLogonPass* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_ModifyLogonPass& from);
  void MergeFrom(const PROTO_ModifyLogonPass& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string szAccounts = 1;
  inline bool has_szaccounts() const;
  inline void clear_szaccounts();
  static const int kSzAccountsFieldNumber = 1;
  inline const ::std::string& szaccounts() const;
  inline void set_szaccounts(const ::std::string& value);
  inline void set_szaccounts(const char* value);
  inline void set_szaccounts(const char* value, size_t size);
  inline ::std::string* mutable_szaccounts();
  inline ::std::string* release_szaccounts();
  inline void set_allocated_szaccounts(::std::string* szaccounts);

  // required string szScrPassword = 2;
  inline bool has_szscrpassword() const;
  inline void clear_szscrpassword();
  static const int kSzScrPasswordFieldNumber = 2;
  inline const ::std::string& szscrpassword() const;
  inline void set_szscrpassword(const ::std::string& value);
  inline void set_szscrpassword(const char* value);
  inline void set_szscrpassword(const char* value, size_t size);
  inline ::std::string* mutable_szscrpassword();
  inline ::std::string* release_szscrpassword();
  inline void set_allocated_szscrpassword(::std::string* szscrpassword);

  // required string szDesPassword = 3;
  inline bool has_szdespassword() const;
  inline void clear_szdespassword();
  static const int kSzDesPasswordFieldNumber = 3;
  inline const ::std::string& szdespassword() const;
  inline void set_szdespassword(const ::std::string& value);
  inline void set_szdespassword(const char* value);
  inline void set_szdespassword(const char* value, size_t size);
  inline ::std::string* mutable_szdespassword();
  inline ::std::string* release_szdespassword();
  inline void set_allocated_szdespassword(::std::string* szdespassword);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_ModifyLogonPass)
 private:
  inline void set_has_szaccounts();
  inline void clear_has_szaccounts();
  inline void set_has_szscrpassword();
  inline void clear_has_szscrpassword();
  inline void set_has_szdespassword();
  inline void clear_has_szdespassword();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* szaccounts_;
  ::std::string* szscrpassword_;
  ::std::string* szdespassword_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_ModifyLogonPass* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_ModifyNickName : public ::google::protobuf::MessageLite {
 public:
  PROTO_ModifyNickName();
  virtual ~PROTO_ModifyNickName();

  PROTO_ModifyNickName(const PROTO_ModifyNickName& from);

  inline PROTO_ModifyNickName& operator=(const PROTO_ModifyNickName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_ModifyNickName& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_ModifyNickName* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_ModifyNickName* other);

  // implements Message ----------------------------------------------

  PROTO_ModifyNickName* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_ModifyNickName& from);
  void MergeFrom(const PROTO_ModifyNickName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwUserID = 1;
  inline bool has_dwuserid() const;
  inline void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  inline ::google::protobuf::int64 dwuserid() const;
  inline void set_dwuserid(::google::protobuf::int64 value);

  // required string szNickName = 2;
  inline bool has_sznickname() const;
  inline void clear_sznickname();
  static const int kSzNickNameFieldNumber = 2;
  inline const ::std::string& sznickname() const;
  inline void set_sznickname(const ::std::string& value);
  inline void set_sznickname(const char* value);
  inline void set_sznickname(const char* value, size_t size);
  inline ::std::string* mutable_sznickname();
  inline ::std::string* release_sznickname();
  inline void set_allocated_sznickname(::std::string* sznickname);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_ModifyNickName)
 private:
  inline void set_has_dwuserid();
  inline void clear_has_dwuserid();
  inline void set_has_sznickname();
  inline void clear_has_sznickname();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwuserid_;
  ::std::string* sznickname_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_ModifyNickName* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_ModifyResult : public ::google::protobuf::MessageLite {
 public:
  PROTO_ModifyResult();
  virtual ~PROTO_ModifyResult();

  PROTO_ModifyResult(const PROTO_ModifyResult& from);

  inline PROTO_ModifyResult& operator=(const PROTO_ModifyResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_ModifyResult& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_ModifyResult* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_ModifyResult* other);

  // implements Message ----------------------------------------------

  PROTO_ModifyResult* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_ModifyResult& from);
  void MergeFrom(const PROTO_ModifyResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 cbResultCode = 1;
  inline bool has_cbresultcode() const;
  inline void clear_cbresultcode();
  static const int kCbResultCodeFieldNumber = 1;
  inline ::google::protobuf::int64 cbresultcode() const;
  inline void set_cbresultcode(::google::protobuf::int64 value);

  // required int64 wSubCommandID = 2;
  inline bool has_wsubcommandid() const;
  inline void clear_wsubcommandid();
  static const int kWSubCommandIDFieldNumber = 2;
  inline ::google::protobuf::int64 wsubcommandid() const;
  inline void set_wsubcommandid(::google::protobuf::int64 value);

  // required string szDescribe = 3;
  inline bool has_szdescribe() const;
  inline void clear_szdescribe();
  static const int kSzDescribeFieldNumber = 3;
  inline const ::std::string& szdescribe() const;
  inline void set_szdescribe(const ::std::string& value);
  inline void set_szdescribe(const char* value);
  inline void set_szdescribe(const char* value, size_t size);
  inline ::std::string* mutable_szdescribe();
  inline ::std::string* release_szdescribe();
  inline void set_allocated_szdescribe(::std::string* szdescribe);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_ModifyResult)
 private:
  inline void set_has_cbresultcode();
  inline void clear_has_cbresultcode();
  inline void set_has_wsubcommandid();
  inline void clear_has_wsubcommandid();
  inline void set_has_szdescribe();
  inline void clear_has_szdescribe();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 cbresultcode_;
  ::google::protobuf::int64 wsubcommandid_;
  ::std::string* szdescribe_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_ModifyResult* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_UserSaveScore : public ::google::protobuf::MessageLite {
 public:
  PROTO_UserSaveScore();
  virtual ~PROTO_UserSaveScore();

  PROTO_UserSaveScore(const PROTO_UserSaveScore& from);

  inline PROTO_UserSaveScore& operator=(const PROTO_UserSaveScore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_UserSaveScore& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_UserSaveScore* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_UserSaveScore* other);

  // implements Message ----------------------------------------------

  PROTO_UserSaveScore* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_UserSaveScore& from);
  void MergeFrom(const PROTO_UserSaveScore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwUserID = 1;
  inline bool has_dwuserid() const;
  inline void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  inline ::google::protobuf::int64 dwuserid() const;
  inline void set_dwuserid(::google::protobuf::int64 value);

  // required int64 lSaveScore = 2;
  inline bool has_lsavescore() const;
  inline void clear_lsavescore();
  static const int kLSaveScoreFieldNumber = 2;
  inline ::google::protobuf::int64 lsavescore() const;
  inline void set_lsavescore(::google::protobuf::int64 value);

  // required string szMachineID = 3;
  inline bool has_szmachineid() const;
  inline void clear_szmachineid();
  static const int kSzMachineIDFieldNumber = 3;
  inline const ::std::string& szmachineid() const;
  inline void set_szmachineid(const ::std::string& value);
  inline void set_szmachineid(const char* value);
  inline void set_szmachineid(const char* value, size_t size);
  inline ::std::string* mutable_szmachineid();
  inline ::std::string* release_szmachineid();
  inline void set_allocated_szmachineid(::std::string* szmachineid);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_UserSaveScore)
 private:
  inline void set_has_dwuserid();
  inline void clear_has_dwuserid();
  inline void set_has_lsavescore();
  inline void clear_has_lsavescore();
  inline void set_has_szmachineid();
  inline void clear_has_szmachineid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwuserid_;
  ::google::protobuf::int64 lsavescore_;
  ::std::string* szmachineid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_UserSaveScore* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_UserTakeScore : public ::google::protobuf::MessageLite {
 public:
  PROTO_UserTakeScore();
  virtual ~PROTO_UserTakeScore();

  PROTO_UserTakeScore(const PROTO_UserTakeScore& from);

  inline PROTO_UserTakeScore& operator=(const PROTO_UserTakeScore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_UserTakeScore& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_UserTakeScore* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_UserTakeScore* other);

  // implements Message ----------------------------------------------

  PROTO_UserTakeScore* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_UserTakeScore& from);
  void MergeFrom(const PROTO_UserTakeScore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwUserID = 1;
  inline bool has_dwuserid() const;
  inline void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  inline ::google::protobuf::int64 dwuserid() const;
  inline void set_dwuserid(::google::protobuf::int64 value);

  // required int64 lTakeScore = 2;
  inline bool has_ltakescore() const;
  inline void clear_ltakescore();
  static const int kLTakeScoreFieldNumber = 2;
  inline ::google::protobuf::int64 ltakescore() const;
  inline void set_ltakescore(::google::protobuf::int64 value);

  // required string szPassword = 3;
  inline bool has_szpassword() const;
  inline void clear_szpassword();
  static const int kSzPasswordFieldNumber = 3;
  inline const ::std::string& szpassword() const;
  inline void set_szpassword(const ::std::string& value);
  inline void set_szpassword(const char* value);
  inline void set_szpassword(const char* value, size_t size);
  inline ::std::string* mutable_szpassword();
  inline ::std::string* release_szpassword();
  inline void set_allocated_szpassword(::std::string* szpassword);

  // required string szMachineID = 4;
  inline bool has_szmachineid() const;
  inline void clear_szmachineid();
  static const int kSzMachineIDFieldNumber = 4;
  inline const ::std::string& szmachineid() const;
  inline void set_szmachineid(const ::std::string& value);
  inline void set_szmachineid(const char* value);
  inline void set_szmachineid(const char* value, size_t size);
  inline ::std::string* mutable_szmachineid();
  inline ::std::string* release_szmachineid();
  inline void set_allocated_szmachineid(::std::string* szmachineid);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_UserTakeScore)
 private:
  inline void set_has_dwuserid();
  inline void clear_has_dwuserid();
  inline void set_has_ltakescore();
  inline void clear_has_ltakescore();
  inline void set_has_szpassword();
  inline void clear_has_szpassword();
  inline void set_has_szmachineid();
  inline void clear_has_szmachineid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwuserid_;
  ::google::protobuf::int64 ltakescore_;
  ::std::string* szpassword_;
  ::std::string* szmachineid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_UserTakeScore* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_QueryInsureInfo : public ::google::protobuf::MessageLite {
 public:
  PROTO_QueryInsureInfo();
  virtual ~PROTO_QueryInsureInfo();

  PROTO_QueryInsureInfo(const PROTO_QueryInsureInfo& from);

  inline PROTO_QueryInsureInfo& operator=(const PROTO_QueryInsureInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_QueryInsureInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_QueryInsureInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_QueryInsureInfo* other);

  // implements Message ----------------------------------------------

  PROTO_QueryInsureInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_QueryInsureInfo& from);
  void MergeFrom(const PROTO_QueryInsureInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwUserID = 1;
  inline bool has_dwuserid() const;
  inline void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  inline ::google::protobuf::int64 dwuserid() const;
  inline void set_dwuserid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_QueryInsureInfo)
 private:
  inline void set_has_dwuserid();
  inline void clear_has_dwuserid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwuserid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_QueryInsureInfo* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_UserInsureSuccess : public ::google::protobuf::MessageLite {
 public:
  PROTO_UserInsureSuccess();
  virtual ~PROTO_UserInsureSuccess();

  PROTO_UserInsureSuccess(const PROTO_UserInsureSuccess& from);

  inline PROTO_UserInsureSuccess& operator=(const PROTO_UserInsureSuccess& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_UserInsureSuccess& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_UserInsureSuccess* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_UserInsureSuccess* other);

  // implements Message ----------------------------------------------

  PROTO_UserInsureSuccess* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_UserInsureSuccess& from);
  void MergeFrom(const PROTO_UserInsureSuccess& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwUserID = 1;
  inline bool has_dwuserid() const;
  inline void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  inline ::google::protobuf::int64 dwuserid() const;
  inline void set_dwuserid(::google::protobuf::int64 value);

  // required int64 lUserScore = 2;
  inline bool has_luserscore() const;
  inline void clear_luserscore();
  static const int kLUserScoreFieldNumber = 2;
  inline ::google::protobuf::int64 luserscore() const;
  inline void set_luserscore(::google::protobuf::int64 value);

  // required int64 lUserInsure = 3;
  inline bool has_luserinsure() const;
  inline void clear_luserinsure();
  static const int kLUserInsureFieldNumber = 3;
  inline ::google::protobuf::int64 luserinsure() const;
  inline void set_luserinsure(::google::protobuf::int64 value);

  // required string szDescribeString = 4;
  inline bool has_szdescribestring() const;
  inline void clear_szdescribestring();
  static const int kSzDescribeStringFieldNumber = 4;
  inline const ::std::string& szdescribestring() const;
  inline void set_szdescribestring(const ::std::string& value);
  inline void set_szdescribestring(const char* value);
  inline void set_szdescribestring(const char* value, size_t size);
  inline ::std::string* mutable_szdescribestring();
  inline ::std::string* release_szdescribestring();
  inline void set_allocated_szdescribestring(::std::string* szdescribestring);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_UserInsureSuccess)
 private:
  inline void set_has_dwuserid();
  inline void clear_has_dwuserid();
  inline void set_has_luserscore();
  inline void clear_has_luserscore();
  inline void set_has_luserinsure();
  inline void clear_has_luserinsure();
  inline void set_has_szdescribestring();
  inline void clear_has_szdescribestring();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwuserid_;
  ::google::protobuf::int64 luserscore_;
  ::google::protobuf::int64 luserinsure_;
  ::std::string* szdescribestring_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_UserInsureSuccess* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_UserInsureFailure : public ::google::protobuf::MessageLite {
 public:
  PROTO_UserInsureFailure();
  virtual ~PROTO_UserInsureFailure();

  PROTO_UserInsureFailure(const PROTO_UserInsureFailure& from);

  inline PROTO_UserInsureFailure& operator=(const PROTO_UserInsureFailure& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_UserInsureFailure& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_UserInsureFailure* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_UserInsureFailure* other);

  // implements Message ----------------------------------------------

  PROTO_UserInsureFailure* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_UserInsureFailure& from);
  void MergeFrom(const PROTO_UserInsureFailure& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 lResultCode = 1;
  inline bool has_lresultcode() const;
  inline void clear_lresultcode();
  static const int kLResultCodeFieldNumber = 1;
  inline ::google::protobuf::int64 lresultcode() const;
  inline void set_lresultcode(::google::protobuf::int64 value);

  // required string szDescribeString = 2;
  inline bool has_szdescribestring() const;
  inline void clear_szdescribestring();
  static const int kSzDescribeStringFieldNumber = 2;
  inline const ::std::string& szdescribestring() const;
  inline void set_szdescribestring(const ::std::string& value);
  inline void set_szdescribestring(const char* value);
  inline void set_szdescribestring(const char* value, size_t size);
  inline ::std::string* mutable_szdescribestring();
  inline ::std::string* release_szdescribestring();
  inline void set_allocated_szdescribestring(::std::string* szdescribestring);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_UserInsureFailure)
 private:
  inline void set_has_lresultcode();
  inline void clear_has_lresultcode();
  inline void set_has_szdescribestring();
  inline void clear_has_szdescribestring();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 lresultcode_;
  ::std::string* szdescribestring_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_UserInsureFailure* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_GetDialInfo : public ::google::protobuf::MessageLite {
 public:
  PROTO_GetDialInfo();
  virtual ~PROTO_GetDialInfo();

  PROTO_GetDialInfo(const PROTO_GetDialInfo& from);

  inline PROTO_GetDialInfo& operator=(const PROTO_GetDialInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_GetDialInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_GetDialInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_GetDialInfo* other);

  // implements Message ----------------------------------------------

  PROTO_GetDialInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_GetDialInfo& from);
  void MergeFrom(const PROTO_GetDialInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwUserID = 1;
  inline bool has_dwuserid() const;
  inline void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  inline ::google::protobuf::int64 dwuserid() const;
  inline void set_dwuserid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_GetDialInfo)
 private:
  inline void set_has_dwuserid();
  inline void clear_has_dwuserid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwuserid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_GetDialInfo* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_GetDailInfoResult : public ::google::protobuf::MessageLite {
 public:
  PROTO_GetDailInfoResult();
  virtual ~PROTO_GetDailInfoResult();

  PROTO_GetDailInfoResult(const PROTO_GetDailInfoResult& from);

  inline PROTO_GetDailInfoResult& operator=(const PROTO_GetDailInfoResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_GetDailInfoResult& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_GetDailInfoResult* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_GetDailInfoResult* other);

  // implements Message ----------------------------------------------

  PROTO_GetDailInfoResult* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_GetDailInfoResult& from);
  void MergeFrom(const PROTO_GetDailInfoResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwSilverConsume = 1;
  inline bool has_dwsilverconsume() const;
  inline void clear_dwsilverconsume();
  static const int kDwSilverConsumeFieldNumber = 1;
  inline ::google::protobuf::int64 dwsilverconsume() const;
  inline void set_dwsilverconsume(::google::protobuf::int64 value);

  // required int64 dwGoldConsume = 2;
  inline bool has_dwgoldconsume() const;
  inline void clear_dwgoldconsume();
  static const int kDwGoldConsumeFieldNumber = 2;
  inline ::google::protobuf::int64 dwgoldconsume() const;
  inline void set_dwgoldconsume(::google::protobuf::int64 value);

  // required int64 dwJewelConsume = 3;
  inline bool has_dwjewelconsume() const;
  inline void clear_dwjewelconsume();
  static const int kDwJewelConsumeFieldNumber = 3;
  inline ::google::protobuf::int64 dwjewelconsume() const;
  inline void set_dwjewelconsume(::google::protobuf::int64 value);

  // required int64 dwDrawScore = 4;
  inline bool has_dwdrawscore() const;
  inline void clear_dwdrawscore();
  static const int kDwDrawScoreFieldNumber = 4;
  inline ::google::protobuf::int64 dwdrawscore() const;
  inline void set_dwdrawscore(::google::protobuf::int64 value);

  // required int64 dwAddScore = 5;
  inline bool has_dwaddscore() const;
  inline void clear_dwaddscore();
  static const int kDwAddScoreFieldNumber = 5;
  inline ::google::protobuf::int64 dwaddscore() const;
  inline void set_dwaddscore(::google::protobuf::int64 value);

  // repeated int64 dwDailInfo = 6;
  inline int dwdailinfo_size() const;
  inline void clear_dwdailinfo();
  static const int kDwDailInfoFieldNumber = 6;
  inline ::google::protobuf::int64 dwdailinfo(int index) const;
  inline void set_dwdailinfo(int index, ::google::protobuf::int64 value);
  inline void add_dwdailinfo(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      dwdailinfo() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_dwdailinfo();

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_GetDailInfoResult)
 private:
  inline void set_has_dwsilverconsume();
  inline void clear_has_dwsilverconsume();
  inline void set_has_dwgoldconsume();
  inline void clear_has_dwgoldconsume();
  inline void set_has_dwjewelconsume();
  inline void clear_has_dwjewelconsume();
  inline void set_has_dwdrawscore();
  inline void clear_has_dwdrawscore();
  inline void set_has_dwaddscore();
  inline void clear_has_dwaddscore();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwsilverconsume_;
  ::google::protobuf::int64 dwgoldconsume_;
  ::google::protobuf::int64 dwjewelconsume_;
  ::google::protobuf::int64 dwdrawscore_;
  ::google::protobuf::int64 dwaddscore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > dwdailinfo_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_GetDailInfoResult* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_RotateDailAward : public ::google::protobuf::MessageLite {
 public:
  PROTO_RotateDailAward();
  virtual ~PROTO_RotateDailAward();

  PROTO_RotateDailAward(const PROTO_RotateDailAward& from);

  inline PROTO_RotateDailAward& operator=(const PROTO_RotateDailAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_RotateDailAward& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_RotateDailAward* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_RotateDailAward* other);

  // implements Message ----------------------------------------------

  PROTO_RotateDailAward* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_RotateDailAward& from);
  void MergeFrom(const PROTO_RotateDailAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwUserID = 1;
  inline bool has_dwuserid() const;
  inline void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  inline ::google::protobuf::int64 dwuserid() const;
  inline void set_dwuserid(::google::protobuf::int64 value);

  // required int64 dwDailType = 2;
  inline bool has_dwdailtype() const;
  inline void clear_dwdailtype();
  static const int kDwDailTypeFieldNumber = 2;
  inline ::google::protobuf::int64 dwdailtype() const;
  inline void set_dwdailtype(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_RotateDailAward)
 private:
  inline void set_has_dwuserid();
  inline void clear_has_dwuserid();
  inline void set_has_dwdailtype();
  inline void clear_has_dwdailtype();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwuserid_;
  ::google::protobuf::int64 dwdailtype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_RotateDailAward* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_RotateDailAwardInfo : public ::google::protobuf::MessageLite {
 public:
  PROTO_RotateDailAwardInfo();
  virtual ~PROTO_RotateDailAwardInfo();

  PROTO_RotateDailAwardInfo(const PROTO_RotateDailAwardInfo& from);

  inline PROTO_RotateDailAwardInfo& operator=(const PROTO_RotateDailAwardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_RotateDailAwardInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_RotateDailAwardInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_RotateDailAwardInfo* other);

  // implements Message ----------------------------------------------

  PROTO_RotateDailAwardInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_RotateDailAwardInfo& from);
  void MergeFrom(const PROTO_RotateDailAwardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwResultCode = 1;
  inline bool has_dwresultcode() const;
  inline void clear_dwresultcode();
  static const int kDwResultCodeFieldNumber = 1;
  inline ::google::protobuf::int64 dwresultcode() const;
  inline void set_dwresultcode(::google::protobuf::int64 value);

  // required string szDescribeString = 2;
  inline bool has_szdescribestring() const;
  inline void clear_szdescribestring();
  static const int kSzDescribeStringFieldNumber = 2;
  inline const ::std::string& szdescribestring() const;
  inline void set_szdescribestring(const ::std::string& value);
  inline void set_szdescribestring(const char* value);
  inline void set_szdescribestring(const char* value, size_t size);
  inline ::std::string* mutable_szdescribestring();
  inline ::std::string* release_szdescribestring();
  inline void set_allocated_szdescribestring(::std::string* szdescribestring);

  // required int64 dwUserID = 3;
  inline bool has_dwuserid() const;
  inline void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 3;
  inline ::google::protobuf::int64 dwuserid() const;
  inline void set_dwuserid(::google::protobuf::int64 value);

  // required int64 dwDailType = 4;
  inline bool has_dwdailtype() const;
  inline void clear_dwdailtype();
  static const int kDwDailTypeFieldNumber = 4;
  inline ::google::protobuf::int64 dwdailtype() const;
  inline void set_dwdailtype(::google::protobuf::int64 value);

  // required int64 dwDailAward = 5;
  inline bool has_dwdailaward() const;
  inline void clear_dwdailaward();
  static const int kDwDailAwardFieldNumber = 5;
  inline ::google::protobuf::int64 dwdailaward() const;
  inline void set_dwdailaward(::google::protobuf::int64 value);

  // required int64 dwAwardID = 6;
  inline bool has_dwawardid() const;
  inline void clear_dwawardid();
  static const int kDwAwardIDFieldNumber = 6;
  inline ::google::protobuf::int64 dwawardid() const;
  inline void set_dwawardid(::google::protobuf::int64 value);

  // required int64 dwConsumeSum = 7;
  inline bool has_dwconsumesum() const;
  inline void clear_dwconsumesum();
  static const int kDwConsumeSumFieldNumber = 7;
  inline ::google::protobuf::int64 dwconsumesum() const;
  inline void set_dwconsumesum(::google::protobuf::int64 value);

  // required int64 dwSilverConsume = 8;
  inline bool has_dwsilverconsume() const;
  inline void clear_dwsilverconsume();
  static const int kDwSilverConsumeFieldNumber = 8;
  inline ::google::protobuf::int64 dwsilverconsume() const;
  inline void set_dwsilverconsume(::google::protobuf::int64 value);

  // required int64 dwGoldConsume = 9;
  inline bool has_dwgoldconsume() const;
  inline void clear_dwgoldconsume();
  static const int kDwGoldConsumeFieldNumber = 9;
  inline ::google::protobuf::int64 dwgoldconsume() const;
  inline void set_dwgoldconsume(::google::protobuf::int64 value);

  // required int64 dwJewelConsume = 10;
  inline bool has_dwjewelconsume() const;
  inline void clear_dwjewelconsume();
  static const int kDwJewelConsumeFieldNumber = 10;
  inline ::google::protobuf::int64 dwjewelconsume() const;
  inline void set_dwjewelconsume(::google::protobuf::int64 value);

  // required int64 dwDrawScore = 11;
  inline bool has_dwdrawscore() const;
  inline void clear_dwdrawscore();
  static const int kDwDrawScoreFieldNumber = 11;
  inline ::google::protobuf::int64 dwdrawscore() const;
  inline void set_dwdrawscore(::google::protobuf::int64 value);

  // required int64 dwAddScore = 12;
  inline bool has_dwaddscore() const;
  inline void clear_dwaddscore();
  static const int kDwAddScoreFieldNumber = 12;
  inline ::google::protobuf::int64 dwaddscore() const;
  inline void set_dwaddscore(::google::protobuf::int64 value);

  // repeated int64 dwDailInfo = 13;
  inline int dwdailinfo_size() const;
  inline void clear_dwdailinfo();
  static const int kDwDailInfoFieldNumber = 13;
  inline ::google::protobuf::int64 dwdailinfo(int index) const;
  inline void set_dwdailinfo(int index, ::google::protobuf::int64 value);
  inline void add_dwdailinfo(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      dwdailinfo() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_dwdailinfo();

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_RotateDailAwardInfo)
 private:
  inline void set_has_dwresultcode();
  inline void clear_has_dwresultcode();
  inline void set_has_szdescribestring();
  inline void clear_has_szdescribestring();
  inline void set_has_dwuserid();
  inline void clear_has_dwuserid();
  inline void set_has_dwdailtype();
  inline void clear_has_dwdailtype();
  inline void set_has_dwdailaward();
  inline void clear_has_dwdailaward();
  inline void set_has_dwawardid();
  inline void clear_has_dwawardid();
  inline void set_has_dwconsumesum();
  inline void clear_has_dwconsumesum();
  inline void set_has_dwsilverconsume();
  inline void clear_has_dwsilverconsume();
  inline void set_has_dwgoldconsume();
  inline void clear_has_dwgoldconsume();
  inline void set_has_dwjewelconsume();
  inline void clear_has_dwjewelconsume();
  inline void set_has_dwdrawscore();
  inline void clear_has_dwdrawscore();
  inline void set_has_dwaddscore();
  inline void clear_has_dwaddscore();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwresultcode_;
  ::std::string* szdescribestring_;
  ::google::protobuf::int64 dwuserid_;
  ::google::protobuf::int64 dwdailtype_;
  ::google::protobuf::int64 dwdailaward_;
  ::google::protobuf::int64 dwawardid_;
  ::google::protobuf::int64 dwconsumesum_;
  ::google::protobuf::int64 dwsilverconsume_;
  ::google::protobuf::int64 dwgoldconsume_;
  ::google::protobuf::int64 dwjewelconsume_;
  ::google::protobuf::int64 dwdrawscore_;
  ::google::protobuf::int64 dwaddscore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > dwdailinfo_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_RotateDailAwardInfo* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_GetUserSignIn : public ::google::protobuf::MessageLite {
 public:
  PROTO_GetUserSignIn();
  virtual ~PROTO_GetUserSignIn();

  PROTO_GetUserSignIn(const PROTO_GetUserSignIn& from);

  inline PROTO_GetUserSignIn& operator=(const PROTO_GetUserSignIn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_GetUserSignIn& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_GetUserSignIn* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_GetUserSignIn* other);

  // implements Message ----------------------------------------------

  PROTO_GetUserSignIn* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_GetUserSignIn& from);
  void MergeFrom(const PROTO_GetUserSignIn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwUserID = 1;
  inline bool has_dwuserid() const;
  inline void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  inline ::google::protobuf::int64 dwuserid() const;
  inline void set_dwuserid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_GetUserSignIn)
 private:
  inline void set_has_dwuserid();
  inline void clear_has_dwuserid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwuserid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_GetUserSignIn* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_SetUserSignIn : public ::google::protobuf::MessageLite {
 public:
  PROTO_SetUserSignIn();
  virtual ~PROTO_SetUserSignIn();

  PROTO_SetUserSignIn(const PROTO_SetUserSignIn& from);

  inline PROTO_SetUserSignIn& operator=(const PROTO_SetUserSignIn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_SetUserSignIn& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_SetUserSignIn* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_SetUserSignIn* other);

  // implements Message ----------------------------------------------

  PROTO_SetUserSignIn* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_SetUserSignIn& from);
  void MergeFrom(const PROTO_SetUserSignIn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwUserID = 1;
  inline bool has_dwuserid() const;
  inline void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  inline ::google::protobuf::int64 dwuserid() const;
  inline void set_dwuserid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_SetUserSignIn)
 private:
  inline void set_has_dwuserid();
  inline void clear_has_dwuserid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwuserid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_SetUserSignIn* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_GetSignInResult : public ::google::protobuf::MessageLite {
 public:
  PROTO_GetSignInResult();
  virtual ~PROTO_GetSignInResult();

  PROTO_GetSignInResult(const PROTO_GetSignInResult& from);

  inline PROTO_GetSignInResult& operator=(const PROTO_GetSignInResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_GetSignInResult& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_GetSignInResult* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_GetSignInResult* other);

  // implements Message ----------------------------------------------

  PROTO_GetSignInResult* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_GetSignInResult& from);
  void MergeFrom(const PROTO_GetSignInResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 wSignInNum = 1;
  inline bool has_wsigninnum() const;
  inline void clear_wsigninnum();
  static const int kWSignInNumFieldNumber = 1;
  inline ::google::protobuf::int32 wsigninnum() const;
  inline void set_wsigninnum(::google::protobuf::int32 value);

  // required int32 cbTodayIsSinIn = 2;
  inline bool has_cbtodayissinin() const;
  inline void clear_cbtodayissinin();
  static const int kCbTodayIsSinInFieldNumber = 2;
  inline ::google::protobuf::int32 cbtodayissinin() const;
  inline void set_cbtodayissinin(::google::protobuf::int32 value);

  // required int64 dwResultCode = 3;
  inline bool has_dwresultcode() const;
  inline void clear_dwresultcode();
  static const int kDwResultCodeFieldNumber = 3;
  inline ::google::protobuf::int64 dwresultcode() const;
  inline void set_dwresultcode(::google::protobuf::int64 value);

  // required string szDescribeString = 4;
  inline bool has_szdescribestring() const;
  inline void clear_szdescribestring();
  static const int kSzDescribeStringFieldNumber = 4;
  inline const ::std::string& szdescribestring() const;
  inline void set_szdescribestring(const ::std::string& value);
  inline void set_szdescribestring(const char* value);
  inline void set_szdescribestring(const char* value, size_t size);
  inline ::std::string* mutable_szdescribestring();
  inline ::std::string* release_szdescribestring();
  inline void set_allocated_szdescribestring(::std::string* szdescribestring);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_GetSignInResult)
 private:
  inline void set_has_wsigninnum();
  inline void clear_has_wsigninnum();
  inline void set_has_cbtodayissinin();
  inline void clear_has_cbtodayissinin();
  inline void set_has_dwresultcode();
  inline void clear_has_dwresultcode();
  inline void set_has_szdescribestring();
  inline void clear_has_szdescribestring();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 wsigninnum_;
  ::google::protobuf::int32 cbtodayissinin_;
  ::google::protobuf::int64 dwresultcode_;
  ::std::string* szdescribestring_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_GetSignInResult* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_ChickBindBank : public ::google::protobuf::MessageLite {
 public:
  PROTO_ChickBindBank();
  virtual ~PROTO_ChickBindBank();

  PROTO_ChickBindBank(const PROTO_ChickBindBank& from);

  inline PROTO_ChickBindBank& operator=(const PROTO_ChickBindBank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_ChickBindBank& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_ChickBindBank* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_ChickBindBank* other);

  // implements Message ----------------------------------------------

  PROTO_ChickBindBank* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_ChickBindBank& from);
  void MergeFrom(const PROTO_ChickBindBank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwUserID = 1;
  inline bool has_dwuserid() const;
  inline void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  inline ::google::protobuf::int64 dwuserid() const;
  inline void set_dwuserid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_ChickBindBank)
 private:
  inline void set_has_dwuserid();
  inline void clear_has_dwuserid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwuserid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_ChickBindBank* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_GP_BindBankCard : public ::google::protobuf::MessageLite {
 public:
  PROTO_GP_BindBankCard();
  virtual ~PROTO_GP_BindBankCard();

  PROTO_GP_BindBankCard(const PROTO_GP_BindBankCard& from);

  inline PROTO_GP_BindBankCard& operator=(const PROTO_GP_BindBankCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_GP_BindBankCard& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_GP_BindBankCard* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_GP_BindBankCard* other);

  // implements Message ----------------------------------------------

  PROTO_GP_BindBankCard* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_GP_BindBankCard& from);
  void MergeFrom(const PROTO_GP_BindBankCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwUserID = 1;
  inline bool has_dwuserid() const;
  inline void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  inline ::google::protobuf::int64 dwuserid() const;
  inline void set_dwuserid(::google::protobuf::int64 value);

  // required string szBankName = 2;
  inline bool has_szbankname() const;
  inline void clear_szbankname();
  static const int kSzBankNameFieldNumber = 2;
  inline const ::std::string& szbankname() const;
  inline void set_szbankname(const ::std::string& value);
  inline void set_szbankname(const char* value);
  inline void set_szbankname(const char* value, size_t size);
  inline ::std::string* mutable_szbankname();
  inline ::std::string* release_szbankname();
  inline void set_allocated_szbankname(::std::string* szbankname);

  // required string szBankCardNum = 3;
  inline bool has_szbankcardnum() const;
  inline void clear_szbankcardnum();
  static const int kSzBankCardNumFieldNumber = 3;
  inline const ::std::string& szbankcardnum() const;
  inline void set_szbankcardnum(const ::std::string& value);
  inline void set_szbankcardnum(const char* value);
  inline void set_szbankcardnum(const char* value, size_t size);
  inline ::std::string* mutable_szbankcardnum();
  inline ::std::string* release_szbankcardnum();
  inline void set_allocated_szbankcardnum(::std::string* szbankcardnum);

  // required string szAccountHolder = 4;
  inline bool has_szaccountholder() const;
  inline void clear_szaccountholder();
  static const int kSzAccountHolderFieldNumber = 4;
  inline const ::std::string& szaccountholder() const;
  inline void set_szaccountholder(const ::std::string& value);
  inline void set_szaccountholder(const char* value);
  inline void set_szaccountholder(const char* value, size_t size);
  inline ::std::string* mutable_szaccountholder();
  inline ::std::string* release_szaccountholder();
  inline void set_allocated_szaccountholder(::std::string* szaccountholder);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_GP_BindBankCard)
 private:
  inline void set_has_dwuserid();
  inline void clear_has_dwuserid();
  inline void set_has_szbankname();
  inline void clear_has_szbankname();
  inline void set_has_szbankcardnum();
  inline void clear_has_szbankcardnum();
  inline void set_has_szaccountholder();
  inline void clear_has_szaccountholder();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwuserid_;
  ::std::string* szbankname_;
  ::std::string* szbankcardnum_;
  ::std::string* szaccountholder_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_GP_BindBankCard* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_ChickBindZFB : public ::google::protobuf::MessageLite {
 public:
  PROTO_ChickBindZFB();
  virtual ~PROTO_ChickBindZFB();

  PROTO_ChickBindZFB(const PROTO_ChickBindZFB& from);

  inline PROTO_ChickBindZFB& operator=(const PROTO_ChickBindZFB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_ChickBindZFB& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_ChickBindZFB* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_ChickBindZFB* other);

  // implements Message ----------------------------------------------

  PROTO_ChickBindZFB* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_ChickBindZFB& from);
  void MergeFrom(const PROTO_ChickBindZFB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwUserID = 1;
  inline bool has_dwuserid() const;
  inline void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  inline ::google::protobuf::int64 dwuserid() const;
  inline void set_dwuserid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_ChickBindZFB)
 private:
  inline void set_has_dwuserid();
  inline void clear_has_dwuserid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwuserid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_ChickBindZFB* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_BindZFB : public ::google::protobuf::MessageLite {
 public:
  PROTO_BindZFB();
  virtual ~PROTO_BindZFB();

  PROTO_BindZFB(const PROTO_BindZFB& from);

  inline PROTO_BindZFB& operator=(const PROTO_BindZFB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_BindZFB& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_BindZFB* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_BindZFB* other);

  // implements Message ----------------------------------------------

  PROTO_BindZFB* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_BindZFB& from);
  void MergeFrom(const PROTO_BindZFB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwUserID = 1;
  inline bool has_dwuserid() const;
  inline void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  inline ::google::protobuf::int64 dwuserid() const;
  inline void set_dwuserid(::google::protobuf::int64 value);

  // required string szZFBName = 2;
  inline bool has_szzfbname() const;
  inline void clear_szzfbname();
  static const int kSzZFBNameFieldNumber = 2;
  inline const ::std::string& szzfbname() const;
  inline void set_szzfbname(const ::std::string& value);
  inline void set_szzfbname(const char* value);
  inline void set_szzfbname(const char* value, size_t size);
  inline ::std::string* mutable_szzfbname();
  inline ::std::string* release_szzfbname();
  inline void set_allocated_szzfbname(::std::string* szzfbname);

  // required string szNickName = 3;
  inline bool has_sznickname() const;
  inline void clear_sznickname();
  static const int kSzNickNameFieldNumber = 3;
  inline const ::std::string& sznickname() const;
  inline void set_sznickname(const ::std::string& value);
  inline void set_sznickname(const char* value);
  inline void set_sznickname(const char* value, size_t size);
  inline ::std::string* mutable_sznickname();
  inline ::std::string* release_sznickname();
  inline void set_allocated_sznickname(::std::string* sznickname);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_BindZFB)
 private:
  inline void set_has_dwuserid();
  inline void clear_has_dwuserid();
  inline void set_has_szzfbname();
  inline void clear_has_szzfbname();
  inline void set_has_sznickname();
  inline void clear_has_sznickname();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwuserid_;
  ::std::string* szzfbname_;
  ::std::string* sznickname_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_BindZFB* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_BindBankInfo : public ::google::protobuf::MessageLite {
 public:
  PROTO_BindBankInfo();
  virtual ~PROTO_BindBankInfo();

  PROTO_BindBankInfo(const PROTO_BindBankInfo& from);

  inline PROTO_BindBankInfo& operator=(const PROTO_BindBankInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_BindBankInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_BindBankInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_BindBankInfo* other);

  // implements Message ----------------------------------------------

  PROTO_BindBankInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_BindBankInfo& from);
  void MergeFrom(const PROTO_BindBankInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 wSubCommandID = 1;
  inline bool has_wsubcommandid() const;
  inline void clear_wsubcommandid();
  static const int kWSubCommandIDFieldNumber = 1;
  inline ::google::protobuf::int64 wsubcommandid() const;
  inline void set_wsubcommandid(::google::protobuf::int64 value);

  // required int64 dwResultCode = 2;
  inline bool has_dwresultcode() const;
  inline void clear_dwresultcode();
  static const int kDwResultCodeFieldNumber = 2;
  inline ::google::protobuf::int64 dwresultcode() const;
  inline void set_dwresultcode(::google::protobuf::int64 value);

  // required string szDescribeString = 3;
  inline bool has_szdescribestring() const;
  inline void clear_szdescribestring();
  static const int kSzDescribeStringFieldNumber = 3;
  inline const ::std::string& szdescribestring() const;
  inline void set_szdescribestring(const ::std::string& value);
  inline void set_szdescribestring(const char* value);
  inline void set_szdescribestring(const char* value, size_t size);
  inline ::std::string* mutable_szdescribestring();
  inline ::std::string* release_szdescribestring();
  inline void set_allocated_szdescribestring(::std::string* szdescribestring);

  // required string szBankName = 4;
  inline bool has_szbankname() const;
  inline void clear_szbankname();
  static const int kSzBankNameFieldNumber = 4;
  inline const ::std::string& szbankname() const;
  inline void set_szbankname(const ::std::string& value);
  inline void set_szbankname(const char* value);
  inline void set_szbankname(const char* value, size_t size);
  inline ::std::string* mutable_szbankname();
  inline ::std::string* release_szbankname();
  inline void set_allocated_szbankname(::std::string* szbankname);

  // required string szBankCardNum = 5;
  inline bool has_szbankcardnum() const;
  inline void clear_szbankcardnum();
  static const int kSzBankCardNumFieldNumber = 5;
  inline const ::std::string& szbankcardnum() const;
  inline void set_szbankcardnum(const ::std::string& value);
  inline void set_szbankcardnum(const char* value);
  inline void set_szbankcardnum(const char* value, size_t size);
  inline ::std::string* mutable_szbankcardnum();
  inline ::std::string* release_szbankcardnum();
  inline void set_allocated_szbankcardnum(::std::string* szbankcardnum);

  // required string szAccountHolder = 6;
  inline bool has_szaccountholder() const;
  inline void clear_szaccountholder();
  static const int kSzAccountHolderFieldNumber = 6;
  inline const ::std::string& szaccountholder() const;
  inline void set_szaccountholder(const ::std::string& value);
  inline void set_szaccountholder(const char* value);
  inline void set_szaccountholder(const char* value, size_t size);
  inline ::std::string* mutable_szaccountholder();
  inline ::std::string* release_szaccountholder();
  inline void set_allocated_szaccountholder(::std::string* szaccountholder);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_BindBankInfo)
 private:
  inline void set_has_wsubcommandid();
  inline void clear_has_wsubcommandid();
  inline void set_has_dwresultcode();
  inline void clear_has_dwresultcode();
  inline void set_has_szdescribestring();
  inline void clear_has_szdescribestring();
  inline void set_has_szbankname();
  inline void clear_has_szbankname();
  inline void set_has_szbankcardnum();
  inline void clear_has_szbankcardnum();
  inline void set_has_szaccountholder();
  inline void clear_has_szaccountholder();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 wsubcommandid_;
  ::google::protobuf::int64 dwresultcode_;
  ::std::string* szdescribestring_;
  ::std::string* szbankname_;
  ::std::string* szbankcardnum_;
  ::std::string* szaccountholder_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_BindBankInfo* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_BindZFBInfo : public ::google::protobuf::MessageLite {
 public:
  PROTO_BindZFBInfo();
  virtual ~PROTO_BindZFBInfo();

  PROTO_BindZFBInfo(const PROTO_BindZFBInfo& from);

  inline PROTO_BindZFBInfo& operator=(const PROTO_BindZFBInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_BindZFBInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_BindZFBInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_BindZFBInfo* other);

  // implements Message ----------------------------------------------

  PROTO_BindZFBInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_BindZFBInfo& from);
  void MergeFrom(const PROTO_BindZFBInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 wSubCommandID = 1;
  inline bool has_wsubcommandid() const;
  inline void clear_wsubcommandid();
  static const int kWSubCommandIDFieldNumber = 1;
  inline ::google::protobuf::int64 wsubcommandid() const;
  inline void set_wsubcommandid(::google::protobuf::int64 value);

  // required int64 dwResultCode = 2;
  inline bool has_dwresultcode() const;
  inline void clear_dwresultcode();
  static const int kDwResultCodeFieldNumber = 2;
  inline ::google::protobuf::int64 dwresultcode() const;
  inline void set_dwresultcode(::google::protobuf::int64 value);

  // required string szDescribeString = 3;
  inline bool has_szdescribestring() const;
  inline void clear_szdescribestring();
  static const int kSzDescribeStringFieldNumber = 3;
  inline const ::std::string& szdescribestring() const;
  inline void set_szdescribestring(const ::std::string& value);
  inline void set_szdescribestring(const char* value);
  inline void set_szdescribestring(const char* value, size_t size);
  inline ::std::string* mutable_szdescribestring();
  inline ::std::string* release_szdescribestring();
  inline void set_allocated_szdescribestring(::std::string* szdescribestring);

  // required string szZFBName = 4;
  inline bool has_szzfbname() const;
  inline void clear_szzfbname();
  static const int kSzZFBNameFieldNumber = 4;
  inline const ::std::string& szzfbname() const;
  inline void set_szzfbname(const ::std::string& value);
  inline void set_szzfbname(const char* value);
  inline void set_szzfbname(const char* value, size_t size);
  inline ::std::string* mutable_szzfbname();
  inline ::std::string* release_szzfbname();
  inline void set_allocated_szzfbname(::std::string* szzfbname);

  // required string szNickName = 5;
  inline bool has_sznickname() const;
  inline void clear_sznickname();
  static const int kSzNickNameFieldNumber = 5;
  inline const ::std::string& sznickname() const;
  inline void set_sznickname(const ::std::string& value);
  inline void set_sznickname(const char* value);
  inline void set_sznickname(const char* value, size_t size);
  inline ::std::string* mutable_sznickname();
  inline ::std::string* release_sznickname();
  inline void set_allocated_sznickname(::std::string* sznickname);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_BindZFBInfo)
 private:
  inline void set_has_wsubcommandid();
  inline void clear_has_wsubcommandid();
  inline void set_has_dwresultcode();
  inline void clear_has_dwresultcode();
  inline void set_has_szdescribestring();
  inline void clear_has_szdescribestring();
  inline void set_has_szzfbname();
  inline void clear_has_szzfbname();
  inline void set_has_sznickname();
  inline void clear_has_sznickname();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 wsubcommandid_;
  ::google::protobuf::int64 dwresultcode_;
  ::std::string* szdescribestring_;
  ::std::string* szzfbname_;
  ::std::string* sznickname_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_BindZFBInfo* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_RequestMail : public ::google::protobuf::MessageLite {
 public:
  PROTO_RequestMail();
  virtual ~PROTO_RequestMail();

  PROTO_RequestMail(const PROTO_RequestMail& from);

  inline PROTO_RequestMail& operator=(const PROTO_RequestMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_RequestMail& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_RequestMail* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_RequestMail* other);

  // implements Message ----------------------------------------------

  PROTO_RequestMail* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_RequestMail& from);
  void MergeFrom(const PROTO_RequestMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwUserID = 2;
  inline bool has_dwuserid() const;
  inline void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 2;
  inline ::google::protobuf::int64 dwuserid() const;
  inline void set_dwuserid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_RequestMail)
 private:
  inline void set_has_dwuserid();
  inline void clear_has_dwuserid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwuserid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_RequestMail* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_ReadDeleteMail : public ::google::protobuf::MessageLite {
 public:
  PROTO_ReadDeleteMail();
  virtual ~PROTO_ReadDeleteMail();

  PROTO_ReadDeleteMail(const PROTO_ReadDeleteMail& from);

  inline PROTO_ReadDeleteMail& operator=(const PROTO_ReadDeleteMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_ReadDeleteMail& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_ReadDeleteMail* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_ReadDeleteMail* other);

  // implements Message ----------------------------------------------

  PROTO_ReadDeleteMail* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_ReadDeleteMail& from);
  void MergeFrom(const PROTO_ReadDeleteMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwUserID = 2;
  inline bool has_dwuserid() const;
  inline void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 2;
  inline ::google::protobuf::int64 dwuserid() const;
  inline void set_dwuserid(::google::protobuf::int64 value);

  // required int64 dwOpenType = 3;
  inline bool has_dwopentype() const;
  inline void clear_dwopentype();
  static const int kDwOpenTypeFieldNumber = 3;
  inline ::google::protobuf::int64 dwopentype() const;
  inline void set_dwopentype(::google::protobuf::int64 value);

  // required int64 dwMailIndex = 4;
  inline bool has_dwmailindex() const;
  inline void clear_dwmailindex();
  static const int kDwMailIndexFieldNumber = 4;
  inline ::google::protobuf::int64 dwmailindex() const;
  inline void set_dwmailindex(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_ReadDeleteMail)
 private:
  inline void set_has_dwuserid();
  inline void clear_has_dwuserid();
  inline void set_has_dwopentype();
  inline void clear_has_dwopentype();
  inline void set_has_dwmailindex();
  inline void clear_has_dwmailindex();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwuserid_;
  ::google::protobuf::int64 dwopentype_;
  ::google::protobuf::int64 dwmailindex_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_ReadDeleteMail* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRequestMail : public ::google::protobuf::MessageLite {
 public:
  ProtoRequestMail();
  virtual ~ProtoRequestMail();

  ProtoRequestMail(const ProtoRequestMail& from);

  inline ProtoRequestMail& operator=(const ProtoRequestMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ProtoRequestMail& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ProtoRequestMail* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ProtoRequestMail* other);

  // implements Message ----------------------------------------------

  ProtoRequestMail* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ProtoRequestMail& from);
  void MergeFrom(const ProtoRequestMail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwMailIndex = 1;
  inline bool has_dwmailindex() const;
  inline void clear_dwmailindex();
  static const int kDwMailIndexFieldNumber = 1;
  inline ::google::protobuf::int64 dwmailindex() const;
  inline void set_dwmailindex(::google::protobuf::int64 value);

  // required string szMailContent = 2;
  inline bool has_szmailcontent() const;
  inline void clear_szmailcontent();
  static const int kSzMailContentFieldNumber = 2;
  inline const ::std::string& szmailcontent() const;
  inline void set_szmailcontent(const ::std::string& value);
  inline void set_szmailcontent(const char* value);
  inline void set_szmailcontent(const char* value, size_t size);
  inline ::std::string* mutable_szmailcontent();
  inline ::std::string* release_szmailcontent();
  inline void set_allocated_szmailcontent(::std::string* szmailcontent);

  // @@protoc_insertion_point(class_scope:LogonServer.ProtoRequestMail)
 private:
  inline void set_has_dwmailindex();
  inline void clear_has_dwmailindex();
  inline void set_has_szmailcontent();
  inline void clear_has_szmailcontent();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwmailindex_;
  ::std::string* szmailcontent_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static ProtoRequestMail* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_RequestMailToal : public ::google::protobuf::MessageLite {
 public:
  PROTO_RequestMailToal();
  virtual ~PROTO_RequestMailToal();

  PROTO_RequestMailToal(const PROTO_RequestMailToal& from);

  inline PROTO_RequestMailToal& operator=(const PROTO_RequestMailToal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_RequestMailToal& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_RequestMailToal* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_RequestMailToal* other);

  // implements Message ----------------------------------------------

  PROTO_RequestMailToal* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_RequestMailToal& from);
  void MergeFrom(const PROTO_RequestMailToal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwUserID = 1;
  inline bool has_dwuserid() const;
  inline void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  inline ::google::protobuf::int64 dwuserid() const;
  inline void set_dwuserid(::google::protobuf::int64 value);

  // repeated .LogonServer.ProtoRequestMail stRequestMail = 2;
  inline int strequestmail_size() const;
  inline void clear_strequestmail();
  static const int kStRequestMailFieldNumber = 2;
  inline const ::LogonServer::ProtoRequestMail& strequestmail(int index) const;
  inline ::LogonServer::ProtoRequestMail* mutable_strequestmail(int index);
  inline ::LogonServer::ProtoRequestMail* add_strequestmail();
  inline const ::google::protobuf::RepeatedPtrField< ::LogonServer::ProtoRequestMail >&
      strequestmail() const;
  inline ::google::protobuf::RepeatedPtrField< ::LogonServer::ProtoRequestMail >*
      mutable_strequestmail();

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_RequestMailToal)
 private:
  inline void set_has_dwuserid();
  inline void clear_has_dwuserid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwuserid_;
  ::google::protobuf::RepeatedPtrField< ::LogonServer::ProtoRequestMail > strequestmail_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_RequestMailToal* default_instance_;
};
// -------------------------------------------------------------------

class PROTO_ReadDeleteMailToal : public ::google::protobuf::MessageLite {
 public:
  PROTO_ReadDeleteMailToal();
  virtual ~PROTO_ReadDeleteMailToal();

  PROTO_ReadDeleteMailToal(const PROTO_ReadDeleteMailToal& from);

  inline PROTO_ReadDeleteMailToal& operator=(const PROTO_ReadDeleteMailToal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PROTO_ReadDeleteMailToal& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PROTO_ReadDeleteMailToal* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PROTO_ReadDeleteMailToal* other);

  // implements Message ----------------------------------------------

  PROTO_ReadDeleteMailToal* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PROTO_ReadDeleteMailToal& from);
  void MergeFrom(const PROTO_ReadDeleteMailToal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 dwUserID = 1;
  inline bool has_dwuserid() const;
  inline void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 1;
  inline ::google::protobuf::int64 dwuserid() const;
  inline void set_dwuserid(::google::protobuf::int64 value);

  // required int64 dwOpenType = 2;
  inline bool has_dwopentype() const;
  inline void clear_dwopentype();
  static const int kDwOpenTypeFieldNumber = 2;
  inline ::google::protobuf::int64 dwopentype() const;
  inline void set_dwopentype(::google::protobuf::int64 value);

  // required int64 dwResultCode = 3;
  inline bool has_dwresultcode() const;
  inline void clear_dwresultcode();
  static const int kDwResultCodeFieldNumber = 3;
  inline ::google::protobuf::int64 dwresultcode() const;
  inline void set_dwresultcode(::google::protobuf::int64 value);

  // repeated .LogonServer.ProtoRequestMail stRequestMail = 4;
  inline int strequestmail_size() const;
  inline void clear_strequestmail();
  static const int kStRequestMailFieldNumber = 4;
  inline const ::LogonServer::ProtoRequestMail& strequestmail(int index) const;
  inline ::LogonServer::ProtoRequestMail* mutable_strequestmail(int index);
  inline ::LogonServer::ProtoRequestMail* add_strequestmail();
  inline const ::google::protobuf::RepeatedPtrField< ::LogonServer::ProtoRequestMail >&
      strequestmail() const;
  inline ::google::protobuf::RepeatedPtrField< ::LogonServer::ProtoRequestMail >*
      mutable_strequestmail();

  // @@protoc_insertion_point(class_scope:LogonServer.PROTO_ReadDeleteMailToal)
 private:
  inline void set_has_dwuserid();
  inline void clear_has_dwuserid();
  inline void set_has_dwopentype();
  inline void clear_has_dwopentype();
  inline void set_has_dwresultcode();
  inline void clear_has_dwresultcode();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 dwuserid_;
  ::google::protobuf::int64 dwopentype_;
  ::google::protobuf::int64 dwresultcode_;
  ::google::protobuf::RepeatedPtrField< ::LogonServer::ProtoRequestMail > strequestmail_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LogonServer_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LogonServer_2eproto();
  #endif
  friend void protobuf_AssignDesc_LogonServer_2eproto();
  friend void protobuf_ShutdownFile_LogonServer_2eproto();

  void InitAsDefaultInstance();
  static PROTO_ReadDeleteMailToal* default_instance_;
};
// ===================================================================


// ===================================================================

// PROTO_CESHI

// required int64 bUserID = 1;
inline bool PROTO_CESHI::has_buserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_CESHI::set_has_buserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_CESHI::clear_has_buserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_CESHI::clear_buserid() {
  buserid_ = GOOGLE_LONGLONG(0);
  clear_has_buserid();
}
inline ::google::protobuf::int64 PROTO_CESHI::buserid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_CESHI.bUserID)
  return buserid_;
}
inline void PROTO_CESHI::set_buserid(::google::protobuf::int64 value) {
  set_has_buserid();
  buserid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_CESHI.bUserID)
}

// required int32 cbPlayStatus = 2;
inline bool PROTO_CESHI::has_cbplaystatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_CESHI::set_has_cbplaystatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_CESHI::clear_has_cbplaystatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_CESHI::clear_cbplaystatus() {
  cbplaystatus_ = 0;
  clear_has_cbplaystatus();
}
inline ::google::protobuf::int32 PROTO_CESHI::cbplaystatus() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_CESHI.cbPlayStatus)
  return cbplaystatus_;
}
inline void PROTO_CESHI::set_cbplaystatus(::google::protobuf::int32 value) {
  set_has_cbplaystatus();
  cbplaystatus_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_CESHI.cbPlayStatus)
}

// required int32 cbMaxCall = 3;
inline bool PROTO_CESHI::has_cbmaxcall() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PROTO_CESHI::set_has_cbmaxcall() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PROTO_CESHI::clear_has_cbmaxcall() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PROTO_CESHI::clear_cbmaxcall() {
  cbmaxcall_ = 0;
  clear_has_cbmaxcall();
}
inline ::google::protobuf::int32 PROTO_CESHI::cbmaxcall() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_CESHI.cbMaxCall)
  return cbmaxcall_;
}
inline void PROTO_CESHI::set_cbmaxcall(::google::protobuf::int32 value) {
  set_has_cbmaxcall();
  cbmaxcall_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_CESHI.cbMaxCall)
}

// -------------------------------------------------------------------

// PROTO_RegisterAccounts

// required int64 cbGender = 1;
inline bool PROTO_RegisterAccounts::has_cbgender() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_RegisterAccounts::set_has_cbgender() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_RegisterAccounts::clear_has_cbgender() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_RegisterAccounts::clear_cbgender() {
  cbgender_ = GOOGLE_LONGLONG(0);
  clear_has_cbgender();
}
inline ::google::protobuf::int64 PROTO_RegisterAccounts::cbgender() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RegisterAccounts.cbGender)
  return cbgender_;
}
inline void PROTO_RegisterAccounts::set_cbgender(::google::protobuf::int64 value) {
  set_has_cbgender();
  cbgender_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RegisterAccounts.cbGender)
}

// required string szAccounts = 2;
inline bool PROTO_RegisterAccounts::has_szaccounts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_RegisterAccounts::set_has_szaccounts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_RegisterAccounts::clear_has_szaccounts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_RegisterAccounts::clear_szaccounts() {
  if (szaccounts_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_->clear();
  }
  clear_has_szaccounts();
}
inline const ::std::string& PROTO_RegisterAccounts::szaccounts() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RegisterAccounts.szAccounts)
  return *szaccounts_;
}
inline void PROTO_RegisterAccounts::set_szaccounts(const ::std::string& value) {
  set_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_ = new ::std::string;
  }
  szaccounts_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RegisterAccounts.szAccounts)
}
inline void PROTO_RegisterAccounts::set_szaccounts(const char* value) {
  set_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_ = new ::std::string;
  }
  szaccounts_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_RegisterAccounts.szAccounts)
}
inline void PROTO_RegisterAccounts::set_szaccounts(const char* value, size_t size) {
  set_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_ = new ::std::string;
  }
  szaccounts_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_RegisterAccounts.szAccounts)
}
inline ::std::string* PROTO_RegisterAccounts::mutable_szaccounts() {
  set_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_RegisterAccounts.szAccounts)
  return szaccounts_;
}
inline ::std::string* PROTO_RegisterAccounts::release_szaccounts() {
  clear_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szaccounts_;
    szaccounts_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_RegisterAccounts::set_allocated_szaccounts(::std::string* szaccounts) {
  if (szaccounts_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szaccounts_;
  }
  if (szaccounts) {
    set_has_szaccounts();
    szaccounts_ = szaccounts;
  } else {
    clear_has_szaccounts();
    szaccounts_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_RegisterAccounts.szAccounts)
}

// required string szNickName = 3;
inline bool PROTO_RegisterAccounts::has_sznickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PROTO_RegisterAccounts::set_has_sznickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PROTO_RegisterAccounts::clear_has_sznickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PROTO_RegisterAccounts::clear_sznickname() {
  if (sznickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_->clear();
  }
  clear_has_sznickname();
}
inline const ::std::string& PROTO_RegisterAccounts::sznickname() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RegisterAccounts.szNickName)
  return *sznickname_;
}
inline void PROTO_RegisterAccounts::set_sznickname(const ::std::string& value) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RegisterAccounts.szNickName)
}
inline void PROTO_RegisterAccounts::set_sznickname(const char* value) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_RegisterAccounts.szNickName)
}
inline void PROTO_RegisterAccounts::set_sznickname(const char* value, size_t size) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_RegisterAccounts.szNickName)
}
inline ::std::string* PROTO_RegisterAccounts::mutable_sznickname() {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_RegisterAccounts.szNickName)
  return sznickname_;
}
inline ::std::string* PROTO_RegisterAccounts::release_sznickname() {
  clear_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sznickname_;
    sznickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_RegisterAccounts::set_allocated_sznickname(::std::string* sznickname) {
  if (sznickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sznickname_;
  }
  if (sznickname) {
    set_has_sznickname();
    sznickname_ = sznickname;
  } else {
    clear_has_sznickname();
    sznickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_RegisterAccounts.szNickName)
}

// required string szLogonPass = 4;
inline bool PROTO_RegisterAccounts::has_szlogonpass() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PROTO_RegisterAccounts::set_has_szlogonpass() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PROTO_RegisterAccounts::clear_has_szlogonpass() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PROTO_RegisterAccounts::clear_szlogonpass() {
  if (szlogonpass_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szlogonpass_->clear();
  }
  clear_has_szlogonpass();
}
inline const ::std::string& PROTO_RegisterAccounts::szlogonpass() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RegisterAccounts.szLogonPass)
  return *szlogonpass_;
}
inline void PROTO_RegisterAccounts::set_szlogonpass(const ::std::string& value) {
  set_has_szlogonpass();
  if (szlogonpass_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szlogonpass_ = new ::std::string;
  }
  szlogonpass_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RegisterAccounts.szLogonPass)
}
inline void PROTO_RegisterAccounts::set_szlogonpass(const char* value) {
  set_has_szlogonpass();
  if (szlogonpass_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szlogonpass_ = new ::std::string;
  }
  szlogonpass_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_RegisterAccounts.szLogonPass)
}
inline void PROTO_RegisterAccounts::set_szlogonpass(const char* value, size_t size) {
  set_has_szlogonpass();
  if (szlogonpass_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szlogonpass_ = new ::std::string;
  }
  szlogonpass_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_RegisterAccounts.szLogonPass)
}
inline ::std::string* PROTO_RegisterAccounts::mutable_szlogonpass() {
  set_has_szlogonpass();
  if (szlogonpass_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szlogonpass_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_RegisterAccounts.szLogonPass)
  return szlogonpass_;
}
inline ::std::string* PROTO_RegisterAccounts::release_szlogonpass() {
  clear_has_szlogonpass();
  if (szlogonpass_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szlogonpass_;
    szlogonpass_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_RegisterAccounts::set_allocated_szlogonpass(::std::string* szlogonpass) {
  if (szlogonpass_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szlogonpass_;
  }
  if (szlogonpass) {
    set_has_szlogonpass();
    szlogonpass_ = szlogonpass;
  } else {
    clear_has_szlogonpass();
    szlogonpass_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_RegisterAccounts.szLogonPass)
}

// -------------------------------------------------------------------

// PROTO_LogonAccountsBCode

// required int64 dwPlazaVersion = 1;
inline bool PROTO_LogonAccountsBCode::has_dwplazaversion() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_LogonAccountsBCode::set_has_dwplazaversion() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_LogonAccountsBCode::clear_has_dwplazaversion() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_LogonAccountsBCode::clear_dwplazaversion() {
  dwplazaversion_ = GOOGLE_LONGLONG(0);
  clear_has_dwplazaversion();
}
inline ::google::protobuf::int64 PROTO_LogonAccountsBCode::dwplazaversion() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonAccountsBCode.dwPlazaVersion)
  return dwplazaversion_;
}
inline void PROTO_LogonAccountsBCode::set_dwplazaversion(::google::protobuf::int64 value) {
  set_has_dwplazaversion();
  dwplazaversion_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonAccountsBCode.dwPlazaVersion)
}

// required int32 cbDeviceType = 2;
inline bool PROTO_LogonAccountsBCode::has_cbdevicetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_LogonAccountsBCode::set_has_cbdevicetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_LogonAccountsBCode::clear_has_cbdevicetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_LogonAccountsBCode::clear_cbdevicetype() {
  cbdevicetype_ = 0;
  clear_has_cbdevicetype();
}
inline ::google::protobuf::int32 PROTO_LogonAccountsBCode::cbdevicetype() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonAccountsBCode.cbDeviceType)
  return cbdevicetype_;
}
inline void PROTO_LogonAccountsBCode::set_cbdevicetype(::google::protobuf::int32 value) {
  set_has_cbdevicetype();
  cbdevicetype_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonAccountsBCode.cbDeviceType)
}

// required string szPassword = 3;
inline bool PROTO_LogonAccountsBCode::has_szpassword() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PROTO_LogonAccountsBCode::set_has_szpassword() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PROTO_LogonAccountsBCode::clear_has_szpassword() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PROTO_LogonAccountsBCode::clear_szpassword() {
  if (szpassword_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szpassword_->clear();
  }
  clear_has_szpassword();
}
inline const ::std::string& PROTO_LogonAccountsBCode::szpassword() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonAccountsBCode.szPassword)
  return *szpassword_;
}
inline void PROTO_LogonAccountsBCode::set_szpassword(const ::std::string& value) {
  set_has_szpassword();
  if (szpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szpassword_ = new ::std::string;
  }
  szpassword_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonAccountsBCode.szPassword)
}
inline void PROTO_LogonAccountsBCode::set_szpassword(const char* value) {
  set_has_szpassword();
  if (szpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szpassword_ = new ::std::string;
  }
  szpassword_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_LogonAccountsBCode.szPassword)
}
inline void PROTO_LogonAccountsBCode::set_szpassword(const char* value, size_t size) {
  set_has_szpassword();
  if (szpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szpassword_ = new ::std::string;
  }
  szpassword_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_LogonAccountsBCode.szPassword)
}
inline ::std::string* PROTO_LogonAccountsBCode::mutable_szpassword() {
  set_has_szpassword();
  if (szpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szpassword_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_LogonAccountsBCode.szPassword)
  return szpassword_;
}
inline ::std::string* PROTO_LogonAccountsBCode::release_szpassword() {
  clear_has_szpassword();
  if (szpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szpassword_;
    szpassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_LogonAccountsBCode::set_allocated_szpassword(::std::string* szpassword) {
  if (szpassword_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szpassword_;
  }
  if (szpassword) {
    set_has_szpassword();
    szpassword_ = szpassword;
  } else {
    clear_has_szpassword();
    szpassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_LogonAccountsBCode.szPassword)
}

// required string szAccounts = 4;
inline bool PROTO_LogonAccountsBCode::has_szaccounts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PROTO_LogonAccountsBCode::set_has_szaccounts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PROTO_LogonAccountsBCode::clear_has_szaccounts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PROTO_LogonAccountsBCode::clear_szaccounts() {
  if (szaccounts_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_->clear();
  }
  clear_has_szaccounts();
}
inline const ::std::string& PROTO_LogonAccountsBCode::szaccounts() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonAccountsBCode.szAccounts)
  return *szaccounts_;
}
inline void PROTO_LogonAccountsBCode::set_szaccounts(const ::std::string& value) {
  set_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_ = new ::std::string;
  }
  szaccounts_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonAccountsBCode.szAccounts)
}
inline void PROTO_LogonAccountsBCode::set_szaccounts(const char* value) {
  set_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_ = new ::std::string;
  }
  szaccounts_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_LogonAccountsBCode.szAccounts)
}
inline void PROTO_LogonAccountsBCode::set_szaccounts(const char* value, size_t size) {
  set_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_ = new ::std::string;
  }
  szaccounts_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_LogonAccountsBCode.szAccounts)
}
inline ::std::string* PROTO_LogonAccountsBCode::mutable_szaccounts() {
  set_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_LogonAccountsBCode.szAccounts)
  return szaccounts_;
}
inline ::std::string* PROTO_LogonAccountsBCode::release_szaccounts() {
  clear_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szaccounts_;
    szaccounts_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_LogonAccountsBCode::set_allocated_szaccounts(::std::string* szaccounts) {
  if (szaccounts_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szaccounts_;
  }
  if (szaccounts) {
    set_has_szaccounts();
    szaccounts_ = szaccounts;
  } else {
    clear_has_szaccounts();
    szaccounts_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_LogonAccountsBCode.szAccounts)
}

// required string szMachineID = 5;
inline bool PROTO_LogonAccountsBCode::has_szmachineid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PROTO_LogonAccountsBCode::set_has_szmachineid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PROTO_LogonAccountsBCode::clear_has_szmachineid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PROTO_LogonAccountsBCode::clear_szmachineid() {
  if (szmachineid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_->clear();
  }
  clear_has_szmachineid();
}
inline const ::std::string& PROTO_LogonAccountsBCode::szmachineid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonAccountsBCode.szMachineID)
  return *szmachineid_;
}
inline void PROTO_LogonAccountsBCode::set_szmachineid(const ::std::string& value) {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  szmachineid_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonAccountsBCode.szMachineID)
}
inline void PROTO_LogonAccountsBCode::set_szmachineid(const char* value) {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  szmachineid_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_LogonAccountsBCode.szMachineID)
}
inline void PROTO_LogonAccountsBCode::set_szmachineid(const char* value, size_t size) {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  szmachineid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_LogonAccountsBCode.szMachineID)
}
inline ::std::string* PROTO_LogonAccountsBCode::mutable_szmachineid() {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_LogonAccountsBCode.szMachineID)
  return szmachineid_;
}
inline ::std::string* PROTO_LogonAccountsBCode::release_szmachineid() {
  clear_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szmachineid_;
    szmachineid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_LogonAccountsBCode::set_allocated_szmachineid(::std::string* szmachineid) {
  if (szmachineid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szmachineid_;
  }
  if (szmachineid) {
    set_has_szmachineid();
    szmachineid_ = szmachineid;
  } else {
    clear_has_szmachineid();
    szmachineid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_LogonAccountsBCode.szMachineID)
}

// required string szMobilePhone = 6;
inline bool PROTO_LogonAccountsBCode::has_szmobilephone() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PROTO_LogonAccountsBCode::set_has_szmobilephone() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PROTO_LogonAccountsBCode::clear_has_szmobilephone() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PROTO_LogonAccountsBCode::clear_szmobilephone() {
  if (szmobilephone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmobilephone_->clear();
  }
  clear_has_szmobilephone();
}
inline const ::std::string& PROTO_LogonAccountsBCode::szmobilephone() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonAccountsBCode.szMobilePhone)
  return *szmobilephone_;
}
inline void PROTO_LogonAccountsBCode::set_szmobilephone(const ::std::string& value) {
  set_has_szmobilephone();
  if (szmobilephone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmobilephone_ = new ::std::string;
  }
  szmobilephone_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonAccountsBCode.szMobilePhone)
}
inline void PROTO_LogonAccountsBCode::set_szmobilephone(const char* value) {
  set_has_szmobilephone();
  if (szmobilephone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmobilephone_ = new ::std::string;
  }
  szmobilephone_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_LogonAccountsBCode.szMobilePhone)
}
inline void PROTO_LogonAccountsBCode::set_szmobilephone(const char* value, size_t size) {
  set_has_szmobilephone();
  if (szmobilephone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmobilephone_ = new ::std::string;
  }
  szmobilephone_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_LogonAccountsBCode.szMobilePhone)
}
inline ::std::string* PROTO_LogonAccountsBCode::mutable_szmobilephone() {
  set_has_szmobilephone();
  if (szmobilephone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmobilephone_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_LogonAccountsBCode.szMobilePhone)
  return szmobilephone_;
}
inline ::std::string* PROTO_LogonAccountsBCode::release_szmobilephone() {
  clear_has_szmobilephone();
  if (szmobilephone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szmobilephone_;
    szmobilephone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_LogonAccountsBCode::set_allocated_szmobilephone(::std::string* szmobilephone) {
  if (szmobilephone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szmobilephone_;
  }
  if (szmobilephone) {
    set_has_szmobilephone();
    szmobilephone_ = szmobilephone;
  } else {
    clear_has_szmobilephone();
    szmobilephone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_LogonAccountsBCode.szMobilePhone)
}

// required int64 dwInviteID = 7;
inline bool PROTO_LogonAccountsBCode::has_dwinviteid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PROTO_LogonAccountsBCode::set_has_dwinviteid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PROTO_LogonAccountsBCode::clear_has_dwinviteid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PROTO_LogonAccountsBCode::clear_dwinviteid() {
  dwinviteid_ = GOOGLE_LONGLONG(0);
  clear_has_dwinviteid();
}
inline ::google::protobuf::int64 PROTO_LogonAccountsBCode::dwinviteid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonAccountsBCode.dwInviteID)
  return dwinviteid_;
}
inline void PROTO_LogonAccountsBCode::set_dwinviteid(::google::protobuf::int64 value) {
  set_has_dwinviteid();
  dwinviteid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonAccountsBCode.dwInviteID)
}

// required int64 dwSortID = 8;
inline bool PROTO_LogonAccountsBCode::has_dwsortid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PROTO_LogonAccountsBCode::set_has_dwsortid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PROTO_LogonAccountsBCode::clear_has_dwsortid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PROTO_LogonAccountsBCode::clear_dwsortid() {
  dwsortid_ = GOOGLE_LONGLONG(0);
  clear_has_dwsortid();
}
inline ::google::protobuf::int64 PROTO_LogonAccountsBCode::dwsortid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonAccountsBCode.dwSortID)
  return dwsortid_;
}
inline void PROTO_LogonAccountsBCode::set_dwsortid(::google::protobuf::int64 value) {
  set_has_dwsortid();
  dwsortid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonAccountsBCode.dwSortID)
}

// required int64 dwLogonType = 9;
inline bool PROTO_LogonAccountsBCode::has_dwlogontype() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PROTO_LogonAccountsBCode::set_has_dwlogontype() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PROTO_LogonAccountsBCode::clear_has_dwlogontype() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PROTO_LogonAccountsBCode::clear_dwlogontype() {
  dwlogontype_ = GOOGLE_LONGLONG(0);
  clear_has_dwlogontype();
}
inline ::google::protobuf::int64 PROTO_LogonAccountsBCode::dwlogontype() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonAccountsBCode.dwLogonType)
  return dwlogontype_;
}
inline void PROTO_LogonAccountsBCode::set_dwlogontype(::google::protobuf::int64 value) {
  set_has_dwlogontype();
  dwlogontype_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonAccountsBCode.dwLogonType)
}

// -------------------------------------------------------------------

// PROTO_RegisterAccountsBCode

// required int32 cbDeviceType = 1;
inline bool PROTO_RegisterAccountsBCode::has_cbdevicetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_RegisterAccountsBCode::set_has_cbdevicetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_RegisterAccountsBCode::clear_has_cbdevicetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_RegisterAccountsBCode::clear_cbdevicetype() {
  cbdevicetype_ = 0;
  clear_has_cbdevicetype();
}
inline ::google::protobuf::int32 PROTO_RegisterAccountsBCode::cbdevicetype() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RegisterAccountsBCode.cbDeviceType)
  return cbdevicetype_;
}
inline void PROTO_RegisterAccountsBCode::set_cbdevicetype(::google::protobuf::int32 value) {
  set_has_cbdevicetype();
  cbdevicetype_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RegisterAccountsBCode.cbDeviceType)
}

// required string szLogonPass = 2;
inline bool PROTO_RegisterAccountsBCode::has_szlogonpass() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_RegisterAccountsBCode::set_has_szlogonpass() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_RegisterAccountsBCode::clear_has_szlogonpass() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_RegisterAccountsBCode::clear_szlogonpass() {
  if (szlogonpass_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szlogonpass_->clear();
  }
  clear_has_szlogonpass();
}
inline const ::std::string& PROTO_RegisterAccountsBCode::szlogonpass() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RegisterAccountsBCode.szLogonPass)
  return *szlogonpass_;
}
inline void PROTO_RegisterAccountsBCode::set_szlogonpass(const ::std::string& value) {
  set_has_szlogonpass();
  if (szlogonpass_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szlogonpass_ = new ::std::string;
  }
  szlogonpass_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RegisterAccountsBCode.szLogonPass)
}
inline void PROTO_RegisterAccountsBCode::set_szlogonpass(const char* value) {
  set_has_szlogonpass();
  if (szlogonpass_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szlogonpass_ = new ::std::string;
  }
  szlogonpass_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_RegisterAccountsBCode.szLogonPass)
}
inline void PROTO_RegisterAccountsBCode::set_szlogonpass(const char* value, size_t size) {
  set_has_szlogonpass();
  if (szlogonpass_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szlogonpass_ = new ::std::string;
  }
  szlogonpass_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_RegisterAccountsBCode.szLogonPass)
}
inline ::std::string* PROTO_RegisterAccountsBCode::mutable_szlogonpass() {
  set_has_szlogonpass();
  if (szlogonpass_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szlogonpass_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_RegisterAccountsBCode.szLogonPass)
  return szlogonpass_;
}
inline ::std::string* PROTO_RegisterAccountsBCode::release_szlogonpass() {
  clear_has_szlogonpass();
  if (szlogonpass_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szlogonpass_;
    szlogonpass_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_RegisterAccountsBCode::set_allocated_szlogonpass(::std::string* szlogonpass) {
  if (szlogonpass_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szlogonpass_;
  }
  if (szlogonpass) {
    set_has_szlogonpass();
    szlogonpass_ = szlogonpass;
  } else {
    clear_has_szlogonpass();
    szlogonpass_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_RegisterAccountsBCode.szLogonPass)
}

// required string szInsurePass = 3;
inline bool PROTO_RegisterAccountsBCode::has_szinsurepass() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PROTO_RegisterAccountsBCode::set_has_szinsurepass() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PROTO_RegisterAccountsBCode::clear_has_szinsurepass() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PROTO_RegisterAccountsBCode::clear_szinsurepass() {
  if (szinsurepass_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szinsurepass_->clear();
  }
  clear_has_szinsurepass();
}
inline const ::std::string& PROTO_RegisterAccountsBCode::szinsurepass() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RegisterAccountsBCode.szInsurePass)
  return *szinsurepass_;
}
inline void PROTO_RegisterAccountsBCode::set_szinsurepass(const ::std::string& value) {
  set_has_szinsurepass();
  if (szinsurepass_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szinsurepass_ = new ::std::string;
  }
  szinsurepass_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RegisterAccountsBCode.szInsurePass)
}
inline void PROTO_RegisterAccountsBCode::set_szinsurepass(const char* value) {
  set_has_szinsurepass();
  if (szinsurepass_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szinsurepass_ = new ::std::string;
  }
  szinsurepass_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_RegisterAccountsBCode.szInsurePass)
}
inline void PROTO_RegisterAccountsBCode::set_szinsurepass(const char* value, size_t size) {
  set_has_szinsurepass();
  if (szinsurepass_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szinsurepass_ = new ::std::string;
  }
  szinsurepass_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_RegisterAccountsBCode.szInsurePass)
}
inline ::std::string* PROTO_RegisterAccountsBCode::mutable_szinsurepass() {
  set_has_szinsurepass();
  if (szinsurepass_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szinsurepass_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_RegisterAccountsBCode.szInsurePass)
  return szinsurepass_;
}
inline ::std::string* PROTO_RegisterAccountsBCode::release_szinsurepass() {
  clear_has_szinsurepass();
  if (szinsurepass_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szinsurepass_;
    szinsurepass_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_RegisterAccountsBCode::set_allocated_szinsurepass(::std::string* szinsurepass) {
  if (szinsurepass_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szinsurepass_;
  }
  if (szinsurepass) {
    set_has_szinsurepass();
    szinsurepass_ = szinsurepass;
  } else {
    clear_has_szinsurepass();
    szinsurepass_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_RegisterAccountsBCode.szInsurePass)
}

// required int64 wFaceID = 4;
inline bool PROTO_RegisterAccountsBCode::has_wfaceid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PROTO_RegisterAccountsBCode::set_has_wfaceid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PROTO_RegisterAccountsBCode::clear_has_wfaceid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PROTO_RegisterAccountsBCode::clear_wfaceid() {
  wfaceid_ = GOOGLE_LONGLONG(0);
  clear_has_wfaceid();
}
inline ::google::protobuf::int64 PROTO_RegisterAccountsBCode::wfaceid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RegisterAccountsBCode.wFaceID)
  return wfaceid_;
}
inline void PROTO_RegisterAccountsBCode::set_wfaceid(::google::protobuf::int64 value) {
  set_has_wfaceid();
  wfaceid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RegisterAccountsBCode.wFaceID)
}

// required int32 cbGender = 5;
inline bool PROTO_RegisterAccountsBCode::has_cbgender() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PROTO_RegisterAccountsBCode::set_has_cbgender() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PROTO_RegisterAccountsBCode::clear_has_cbgender() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PROTO_RegisterAccountsBCode::clear_cbgender() {
  cbgender_ = 0;
  clear_has_cbgender();
}
inline ::google::protobuf::int32 PROTO_RegisterAccountsBCode::cbgender() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RegisterAccountsBCode.cbGender)
  return cbgender_;
}
inline void PROTO_RegisterAccountsBCode::set_cbgender(::google::protobuf::int32 value) {
  set_has_cbgender();
  cbgender_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RegisterAccountsBCode.cbGender)
}

// required string szAccounts = 6;
inline bool PROTO_RegisterAccountsBCode::has_szaccounts() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PROTO_RegisterAccountsBCode::set_has_szaccounts() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PROTO_RegisterAccountsBCode::clear_has_szaccounts() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PROTO_RegisterAccountsBCode::clear_szaccounts() {
  if (szaccounts_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_->clear();
  }
  clear_has_szaccounts();
}
inline const ::std::string& PROTO_RegisterAccountsBCode::szaccounts() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RegisterAccountsBCode.szAccounts)
  return *szaccounts_;
}
inline void PROTO_RegisterAccountsBCode::set_szaccounts(const ::std::string& value) {
  set_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_ = new ::std::string;
  }
  szaccounts_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RegisterAccountsBCode.szAccounts)
}
inline void PROTO_RegisterAccountsBCode::set_szaccounts(const char* value) {
  set_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_ = new ::std::string;
  }
  szaccounts_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_RegisterAccountsBCode.szAccounts)
}
inline void PROTO_RegisterAccountsBCode::set_szaccounts(const char* value, size_t size) {
  set_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_ = new ::std::string;
  }
  szaccounts_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_RegisterAccountsBCode.szAccounts)
}
inline ::std::string* PROTO_RegisterAccountsBCode::mutable_szaccounts() {
  set_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_RegisterAccountsBCode.szAccounts)
  return szaccounts_;
}
inline ::std::string* PROTO_RegisterAccountsBCode::release_szaccounts() {
  clear_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szaccounts_;
    szaccounts_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_RegisterAccountsBCode::set_allocated_szaccounts(::std::string* szaccounts) {
  if (szaccounts_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szaccounts_;
  }
  if (szaccounts) {
    set_has_szaccounts();
    szaccounts_ = szaccounts;
  } else {
    clear_has_szaccounts();
    szaccounts_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_RegisterAccountsBCode.szAccounts)
}

// required string szNickName = 7;
inline bool PROTO_RegisterAccountsBCode::has_sznickname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PROTO_RegisterAccountsBCode::set_has_sznickname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PROTO_RegisterAccountsBCode::clear_has_sznickname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PROTO_RegisterAccountsBCode::clear_sznickname() {
  if (sznickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_->clear();
  }
  clear_has_sznickname();
}
inline const ::std::string& PROTO_RegisterAccountsBCode::sznickname() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RegisterAccountsBCode.szNickName)
  return *sznickname_;
}
inline void PROTO_RegisterAccountsBCode::set_sznickname(const ::std::string& value) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RegisterAccountsBCode.szNickName)
}
inline void PROTO_RegisterAccountsBCode::set_sznickname(const char* value) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_RegisterAccountsBCode.szNickName)
}
inline void PROTO_RegisterAccountsBCode::set_sznickname(const char* value, size_t size) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_RegisterAccountsBCode.szNickName)
}
inline ::std::string* PROTO_RegisterAccountsBCode::mutable_sznickname() {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_RegisterAccountsBCode.szNickName)
  return sznickname_;
}
inline ::std::string* PROTO_RegisterAccountsBCode::release_sznickname() {
  clear_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sznickname_;
    sznickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_RegisterAccountsBCode::set_allocated_sznickname(::std::string* sznickname) {
  if (sznickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sznickname_;
  }
  if (sznickname) {
    set_has_sznickname();
    sznickname_ = sznickname;
  } else {
    clear_has_sznickname();
    sznickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_RegisterAccountsBCode.szNickName)
}

// required string szMachineID = 8;
inline bool PROTO_RegisterAccountsBCode::has_szmachineid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PROTO_RegisterAccountsBCode::set_has_szmachineid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PROTO_RegisterAccountsBCode::clear_has_szmachineid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PROTO_RegisterAccountsBCode::clear_szmachineid() {
  if (szmachineid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_->clear();
  }
  clear_has_szmachineid();
}
inline const ::std::string& PROTO_RegisterAccountsBCode::szmachineid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RegisterAccountsBCode.szMachineID)
  return *szmachineid_;
}
inline void PROTO_RegisterAccountsBCode::set_szmachineid(const ::std::string& value) {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  szmachineid_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RegisterAccountsBCode.szMachineID)
}
inline void PROTO_RegisterAccountsBCode::set_szmachineid(const char* value) {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  szmachineid_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_RegisterAccountsBCode.szMachineID)
}
inline void PROTO_RegisterAccountsBCode::set_szmachineid(const char* value, size_t size) {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  szmachineid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_RegisterAccountsBCode.szMachineID)
}
inline ::std::string* PROTO_RegisterAccountsBCode::mutable_szmachineid() {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_RegisterAccountsBCode.szMachineID)
  return szmachineid_;
}
inline ::std::string* PROTO_RegisterAccountsBCode::release_szmachineid() {
  clear_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szmachineid_;
    szmachineid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_RegisterAccountsBCode::set_allocated_szmachineid(::std::string* szmachineid) {
  if (szmachineid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szmachineid_;
  }
  if (szmachineid) {
    set_has_szmachineid();
    szmachineid_ = szmachineid;
  } else {
    clear_has_szmachineid();
    szmachineid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_RegisterAccountsBCode.szMachineID)
}

// required string szMobilePhone = 9;
inline bool PROTO_RegisterAccountsBCode::has_szmobilephone() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PROTO_RegisterAccountsBCode::set_has_szmobilephone() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PROTO_RegisterAccountsBCode::clear_has_szmobilephone() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PROTO_RegisterAccountsBCode::clear_szmobilephone() {
  if (szmobilephone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmobilephone_->clear();
  }
  clear_has_szmobilephone();
}
inline const ::std::string& PROTO_RegisterAccountsBCode::szmobilephone() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RegisterAccountsBCode.szMobilePhone)
  return *szmobilephone_;
}
inline void PROTO_RegisterAccountsBCode::set_szmobilephone(const ::std::string& value) {
  set_has_szmobilephone();
  if (szmobilephone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmobilephone_ = new ::std::string;
  }
  szmobilephone_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RegisterAccountsBCode.szMobilePhone)
}
inline void PROTO_RegisterAccountsBCode::set_szmobilephone(const char* value) {
  set_has_szmobilephone();
  if (szmobilephone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmobilephone_ = new ::std::string;
  }
  szmobilephone_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_RegisterAccountsBCode.szMobilePhone)
}
inline void PROTO_RegisterAccountsBCode::set_szmobilephone(const char* value, size_t size) {
  set_has_szmobilephone();
  if (szmobilephone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmobilephone_ = new ::std::string;
  }
  szmobilephone_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_RegisterAccountsBCode.szMobilePhone)
}
inline ::std::string* PROTO_RegisterAccountsBCode::mutable_szmobilephone() {
  set_has_szmobilephone();
  if (szmobilephone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmobilephone_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_RegisterAccountsBCode.szMobilePhone)
  return szmobilephone_;
}
inline ::std::string* PROTO_RegisterAccountsBCode::release_szmobilephone() {
  clear_has_szmobilephone();
  if (szmobilephone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szmobilephone_;
    szmobilephone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_RegisterAccountsBCode::set_allocated_szmobilephone(::std::string* szmobilephone) {
  if (szmobilephone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szmobilephone_;
  }
  if (szmobilephone) {
    set_has_szmobilephone();
    szmobilephone_ = szmobilephone;
  } else {
    clear_has_szmobilephone();
    szmobilephone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_RegisterAccountsBCode.szMobilePhone)
}

// required int64 dwSpreaderID = 10;
inline bool PROTO_RegisterAccountsBCode::has_dwspreaderid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PROTO_RegisterAccountsBCode::set_has_dwspreaderid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PROTO_RegisterAccountsBCode::clear_has_dwspreaderid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PROTO_RegisterAccountsBCode::clear_dwspreaderid() {
  dwspreaderid_ = GOOGLE_LONGLONG(0);
  clear_has_dwspreaderid();
}
inline ::google::protobuf::int64 PROTO_RegisterAccountsBCode::dwspreaderid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RegisterAccountsBCode.dwSpreaderID)
  return dwspreaderid_;
}
inline void PROTO_RegisterAccountsBCode::set_dwspreaderid(::google::protobuf::int64 value) {
  set_has_dwspreaderid();
  dwspreaderid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RegisterAccountsBCode.dwSpreaderID)
}

// -------------------------------------------------------------------

// PROTO_LogonVisitor

// required int64 dwPlazaVersion = 1;
inline bool PROTO_LogonVisitor::has_dwplazaversion() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_LogonVisitor::set_has_dwplazaversion() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_LogonVisitor::clear_has_dwplazaversion() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_LogonVisitor::clear_dwplazaversion() {
  dwplazaversion_ = GOOGLE_LONGLONG(0);
  clear_has_dwplazaversion();
}
inline ::google::protobuf::int64 PROTO_LogonVisitor::dwplazaversion() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonVisitor.dwPlazaVersion)
  return dwplazaversion_;
}
inline void PROTO_LogonVisitor::set_dwplazaversion(::google::protobuf::int64 value) {
  set_has_dwplazaversion();
  dwplazaversion_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonVisitor.dwPlazaVersion)
}

// required int64 cbDeviceType = 2;
inline bool PROTO_LogonVisitor::has_cbdevicetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_LogonVisitor::set_has_cbdevicetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_LogonVisitor::clear_has_cbdevicetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_LogonVisitor::clear_cbdevicetype() {
  cbdevicetype_ = GOOGLE_LONGLONG(0);
  clear_has_cbdevicetype();
}
inline ::google::protobuf::int64 PROTO_LogonVisitor::cbdevicetype() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonVisitor.cbDeviceType)
  return cbdevicetype_;
}
inline void PROTO_LogonVisitor::set_cbdevicetype(::google::protobuf::int64 value) {
  set_has_cbdevicetype();
  cbdevicetype_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonVisitor.cbDeviceType)
}

// required string szMachineID = 3;
inline bool PROTO_LogonVisitor::has_szmachineid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PROTO_LogonVisitor::set_has_szmachineid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PROTO_LogonVisitor::clear_has_szmachineid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PROTO_LogonVisitor::clear_szmachineid() {
  if (szmachineid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_->clear();
  }
  clear_has_szmachineid();
}
inline const ::std::string& PROTO_LogonVisitor::szmachineid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonVisitor.szMachineID)
  return *szmachineid_;
}
inline void PROTO_LogonVisitor::set_szmachineid(const ::std::string& value) {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  szmachineid_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonVisitor.szMachineID)
}
inline void PROTO_LogonVisitor::set_szmachineid(const char* value) {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  szmachineid_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_LogonVisitor.szMachineID)
}
inline void PROTO_LogonVisitor::set_szmachineid(const char* value, size_t size) {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  szmachineid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_LogonVisitor.szMachineID)
}
inline ::std::string* PROTO_LogonVisitor::mutable_szmachineid() {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_LogonVisitor.szMachineID)
  return szmachineid_;
}
inline ::std::string* PROTO_LogonVisitor::release_szmachineid() {
  clear_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szmachineid_;
    szmachineid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_LogonVisitor::set_allocated_szmachineid(::std::string* szmachineid) {
  if (szmachineid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szmachineid_;
  }
  if (szmachineid) {
    set_has_szmachineid();
    szmachineid_ = szmachineid;
  } else {
    clear_has_szmachineid();
    szmachineid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_LogonVisitor.szMachineID)
}

// required string szSpreader = 4;
inline bool PROTO_LogonVisitor::has_szspreader() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PROTO_LogonVisitor::set_has_szspreader() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PROTO_LogonVisitor::clear_has_szspreader() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PROTO_LogonVisitor::clear_szspreader() {
  if (szspreader_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szspreader_->clear();
  }
  clear_has_szspreader();
}
inline const ::std::string& PROTO_LogonVisitor::szspreader() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonVisitor.szSpreader)
  return *szspreader_;
}
inline void PROTO_LogonVisitor::set_szspreader(const ::std::string& value) {
  set_has_szspreader();
  if (szspreader_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szspreader_ = new ::std::string;
  }
  szspreader_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonVisitor.szSpreader)
}
inline void PROTO_LogonVisitor::set_szspreader(const char* value) {
  set_has_szspreader();
  if (szspreader_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szspreader_ = new ::std::string;
  }
  szspreader_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_LogonVisitor.szSpreader)
}
inline void PROTO_LogonVisitor::set_szspreader(const char* value, size_t size) {
  set_has_szspreader();
  if (szspreader_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szspreader_ = new ::std::string;
  }
  szspreader_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_LogonVisitor.szSpreader)
}
inline ::std::string* PROTO_LogonVisitor::mutable_szspreader() {
  set_has_szspreader();
  if (szspreader_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szspreader_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_LogonVisitor.szSpreader)
  return szspreader_;
}
inline ::std::string* PROTO_LogonVisitor::release_szspreader() {
  clear_has_szspreader();
  if (szspreader_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szspreader_;
    szspreader_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_LogonVisitor::set_allocated_szspreader(::std::string* szspreader) {
  if (szspreader_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szspreader_;
  }
  if (szspreader) {
    set_has_szspreader();
    szspreader_ = szspreader;
  } else {
    clear_has_szspreader();
    szspreader_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_LogonVisitor.szSpreader)
}

// required int64 dwInviteID = 5;
inline bool PROTO_LogonVisitor::has_dwinviteid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PROTO_LogonVisitor::set_has_dwinviteid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PROTO_LogonVisitor::clear_has_dwinviteid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PROTO_LogonVisitor::clear_dwinviteid() {
  dwinviteid_ = GOOGLE_LONGLONG(0);
  clear_has_dwinviteid();
}
inline ::google::protobuf::int64 PROTO_LogonVisitor::dwinviteid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonVisitor.dwInviteID)
  return dwinviteid_;
}
inline void PROTO_LogonVisitor::set_dwinviteid(::google::protobuf::int64 value) {
  set_has_dwinviteid();
  dwinviteid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonVisitor.dwInviteID)
}

// required int64 dwSortID = 6;
inline bool PROTO_LogonVisitor::has_dwsortid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PROTO_LogonVisitor::set_has_dwsortid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PROTO_LogonVisitor::clear_has_dwsortid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PROTO_LogonVisitor::clear_dwsortid() {
  dwsortid_ = GOOGLE_LONGLONG(0);
  clear_has_dwsortid();
}
inline ::google::protobuf::int64 PROTO_LogonVisitor::dwsortid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonVisitor.dwSortID)
  return dwsortid_;
}
inline void PROTO_LogonVisitor::set_dwsortid(::google::protobuf::int64 value) {
  set_has_dwsortid();
  dwsortid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonVisitor.dwSortID)
}

// required int64 dwLogonType = 7;
inline bool PROTO_LogonVisitor::has_dwlogontype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PROTO_LogonVisitor::set_has_dwlogontype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PROTO_LogonVisitor::clear_has_dwlogontype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PROTO_LogonVisitor::clear_dwlogontype() {
  dwlogontype_ = GOOGLE_LONGLONG(0);
  clear_has_dwlogontype();
}
inline ::google::protobuf::int64 PROTO_LogonVisitor::dwlogontype() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonVisitor.dwLogonType)
  return dwlogontype_;
}
inline void PROTO_LogonVisitor::set_dwlogontype(::google::protobuf::int64 value) {
  set_has_dwlogontype();
  dwlogontype_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonVisitor.dwLogonType)
}

// -------------------------------------------------------------------

// PROTO_RegisterMobile

// required string szMobilePhone = 1;
inline bool PROTO_RegisterMobile::has_szmobilephone() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_RegisterMobile::set_has_szmobilephone() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_RegisterMobile::clear_has_szmobilephone() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_RegisterMobile::clear_szmobilephone() {
  if (szmobilephone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmobilephone_->clear();
  }
  clear_has_szmobilephone();
}
inline const ::std::string& PROTO_RegisterMobile::szmobilephone() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RegisterMobile.szMobilePhone)
  return *szmobilephone_;
}
inline void PROTO_RegisterMobile::set_szmobilephone(const ::std::string& value) {
  set_has_szmobilephone();
  if (szmobilephone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmobilephone_ = new ::std::string;
  }
  szmobilephone_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RegisterMobile.szMobilePhone)
}
inline void PROTO_RegisterMobile::set_szmobilephone(const char* value) {
  set_has_szmobilephone();
  if (szmobilephone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmobilephone_ = new ::std::string;
  }
  szmobilephone_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_RegisterMobile.szMobilePhone)
}
inline void PROTO_RegisterMobile::set_szmobilephone(const char* value, size_t size) {
  set_has_szmobilephone();
  if (szmobilephone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmobilephone_ = new ::std::string;
  }
  szmobilephone_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_RegisterMobile.szMobilePhone)
}
inline ::std::string* PROTO_RegisterMobile::mutable_szmobilephone() {
  set_has_szmobilephone();
  if (szmobilephone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmobilephone_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_RegisterMobile.szMobilePhone)
  return szmobilephone_;
}
inline ::std::string* PROTO_RegisterMobile::release_szmobilephone() {
  clear_has_szmobilephone();
  if (szmobilephone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szmobilephone_;
    szmobilephone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_RegisterMobile::set_allocated_szmobilephone(::std::string* szmobilephone) {
  if (szmobilephone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szmobilephone_;
  }
  if (szmobilephone) {
    set_has_szmobilephone();
    szmobilephone_ = szmobilephone;
  } else {
    clear_has_szmobilephone();
    szmobilephone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_RegisterMobile.szMobilePhone)
}

// required string szLogonPass = 2;
inline bool PROTO_RegisterMobile::has_szlogonpass() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_RegisterMobile::set_has_szlogonpass() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_RegisterMobile::clear_has_szlogonpass() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_RegisterMobile::clear_szlogonpass() {
  if (szlogonpass_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szlogonpass_->clear();
  }
  clear_has_szlogonpass();
}
inline const ::std::string& PROTO_RegisterMobile::szlogonpass() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RegisterMobile.szLogonPass)
  return *szlogonpass_;
}
inline void PROTO_RegisterMobile::set_szlogonpass(const ::std::string& value) {
  set_has_szlogonpass();
  if (szlogonpass_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szlogonpass_ = new ::std::string;
  }
  szlogonpass_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RegisterMobile.szLogonPass)
}
inline void PROTO_RegisterMobile::set_szlogonpass(const char* value) {
  set_has_szlogonpass();
  if (szlogonpass_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szlogonpass_ = new ::std::string;
  }
  szlogonpass_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_RegisterMobile.szLogonPass)
}
inline void PROTO_RegisterMobile::set_szlogonpass(const char* value, size_t size) {
  set_has_szlogonpass();
  if (szlogonpass_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szlogonpass_ = new ::std::string;
  }
  szlogonpass_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_RegisterMobile.szLogonPass)
}
inline ::std::string* PROTO_RegisterMobile::mutable_szlogonpass() {
  set_has_szlogonpass();
  if (szlogonpass_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szlogonpass_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_RegisterMobile.szLogonPass)
  return szlogonpass_;
}
inline ::std::string* PROTO_RegisterMobile::release_szlogonpass() {
  clear_has_szlogonpass();
  if (szlogonpass_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szlogonpass_;
    szlogonpass_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_RegisterMobile::set_allocated_szlogonpass(::std::string* szlogonpass) {
  if (szlogonpass_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szlogonpass_;
  }
  if (szlogonpass) {
    set_has_szlogonpass();
    szlogonpass_ = szlogonpass;
  } else {
    clear_has_szlogonpass();
    szlogonpass_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_RegisterMobile.szLogonPass)
}

// required string szMachineID = 3;
inline bool PROTO_RegisterMobile::has_szmachineid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PROTO_RegisterMobile::set_has_szmachineid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PROTO_RegisterMobile::clear_has_szmachineid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PROTO_RegisterMobile::clear_szmachineid() {
  if (szmachineid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_->clear();
  }
  clear_has_szmachineid();
}
inline const ::std::string& PROTO_RegisterMobile::szmachineid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RegisterMobile.szMachineID)
  return *szmachineid_;
}
inline void PROTO_RegisterMobile::set_szmachineid(const ::std::string& value) {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  szmachineid_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RegisterMobile.szMachineID)
}
inline void PROTO_RegisterMobile::set_szmachineid(const char* value) {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  szmachineid_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_RegisterMobile.szMachineID)
}
inline void PROTO_RegisterMobile::set_szmachineid(const char* value, size_t size) {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  szmachineid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_RegisterMobile.szMachineID)
}
inline ::std::string* PROTO_RegisterMobile::mutable_szmachineid() {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_RegisterMobile.szMachineID)
  return szmachineid_;
}
inline ::std::string* PROTO_RegisterMobile::release_szmachineid() {
  clear_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szmachineid_;
    szmachineid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_RegisterMobile::set_allocated_szmachineid(::std::string* szmachineid) {
  if (szmachineid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szmachineid_;
  }
  if (szmachineid) {
    set_has_szmachineid();
    szmachineid_ = szmachineid;
  } else {
    clear_has_szmachineid();
    szmachineid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_RegisterMobile.szMachineID)
}

// required string szVerificationCode = 4;
inline bool PROTO_RegisterMobile::has_szverificationcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PROTO_RegisterMobile::set_has_szverificationcode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PROTO_RegisterMobile::clear_has_szverificationcode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PROTO_RegisterMobile::clear_szverificationcode() {
  if (szverificationcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szverificationcode_->clear();
  }
  clear_has_szverificationcode();
}
inline const ::std::string& PROTO_RegisterMobile::szverificationcode() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RegisterMobile.szVerificationCode)
  return *szverificationcode_;
}
inline void PROTO_RegisterMobile::set_szverificationcode(const ::std::string& value) {
  set_has_szverificationcode();
  if (szverificationcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szverificationcode_ = new ::std::string;
  }
  szverificationcode_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RegisterMobile.szVerificationCode)
}
inline void PROTO_RegisterMobile::set_szverificationcode(const char* value) {
  set_has_szverificationcode();
  if (szverificationcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szverificationcode_ = new ::std::string;
  }
  szverificationcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_RegisterMobile.szVerificationCode)
}
inline void PROTO_RegisterMobile::set_szverificationcode(const char* value, size_t size) {
  set_has_szverificationcode();
  if (szverificationcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szverificationcode_ = new ::std::string;
  }
  szverificationcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_RegisterMobile.szVerificationCode)
}
inline ::std::string* PROTO_RegisterMobile::mutable_szverificationcode() {
  set_has_szverificationcode();
  if (szverificationcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szverificationcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_RegisterMobile.szVerificationCode)
  return szverificationcode_;
}
inline ::std::string* PROTO_RegisterMobile::release_szverificationcode() {
  clear_has_szverificationcode();
  if (szverificationcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szverificationcode_;
    szverificationcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_RegisterMobile::set_allocated_szverificationcode(::std::string* szverificationcode) {
  if (szverificationcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szverificationcode_;
  }
  if (szverificationcode) {
    set_has_szverificationcode();
    szverificationcode_ = szverificationcode;
  } else {
    clear_has_szverificationcode();
    szverificationcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_RegisterMobile.szVerificationCode)
}

// -------------------------------------------------------------------

// PROTO_LogonSuccessBCode

// required int64 wFaceID = 1;
inline bool PROTO_LogonSuccessBCode::has_wfaceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_LogonSuccessBCode::set_has_wfaceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_LogonSuccessBCode::clear_has_wfaceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_LogonSuccessBCode::clear_wfaceid() {
  wfaceid_ = GOOGLE_LONGLONG(0);
  clear_has_wfaceid();
}
inline ::google::protobuf::int64 PROTO_LogonSuccessBCode::wfaceid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonSuccessBCode.wFaceID)
  return wfaceid_;
}
inline void PROTO_LogonSuccessBCode::set_wfaceid(::google::protobuf::int64 value) {
  set_has_wfaceid();
  wfaceid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonSuccessBCode.wFaceID)
}

// required int32 cbGender = 2;
inline bool PROTO_LogonSuccessBCode::has_cbgender() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_LogonSuccessBCode::set_has_cbgender() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_LogonSuccessBCode::clear_has_cbgender() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_LogonSuccessBCode::clear_cbgender() {
  cbgender_ = 0;
  clear_has_cbgender();
}
inline ::google::protobuf::int32 PROTO_LogonSuccessBCode::cbgender() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonSuccessBCode.cbGender)
  return cbgender_;
}
inline void PROTO_LogonSuccessBCode::set_cbgender(::google::protobuf::int32 value) {
  set_has_cbgender();
  cbgender_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonSuccessBCode.cbGender)
}

// required int64 dwUserID = 3;
inline bool PROTO_LogonSuccessBCode::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PROTO_LogonSuccessBCode::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PROTO_LogonSuccessBCode::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PROTO_LogonSuccessBCode::clear_dwuserid() {
  dwuserid_ = GOOGLE_LONGLONG(0);
  clear_has_dwuserid();
}
inline ::google::protobuf::int64 PROTO_LogonSuccessBCode::dwuserid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonSuccessBCode.dwUserID)
  return dwuserid_;
}
inline void PROTO_LogonSuccessBCode::set_dwuserid(::google::protobuf::int64 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonSuccessBCode.dwUserID)
}

// required int64 dwGameID = 4;
inline bool PROTO_LogonSuccessBCode::has_dwgameid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PROTO_LogonSuccessBCode::set_has_dwgameid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PROTO_LogonSuccessBCode::clear_has_dwgameid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PROTO_LogonSuccessBCode::clear_dwgameid() {
  dwgameid_ = GOOGLE_LONGLONG(0);
  clear_has_dwgameid();
}
inline ::google::protobuf::int64 PROTO_LogonSuccessBCode::dwgameid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonSuccessBCode.dwGameID)
  return dwgameid_;
}
inline void PROTO_LogonSuccessBCode::set_dwgameid(::google::protobuf::int64 value) {
  set_has_dwgameid();
  dwgameid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonSuccessBCode.dwGameID)
}

// required int64 dwExperience = 5;
inline bool PROTO_LogonSuccessBCode::has_dwexperience() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PROTO_LogonSuccessBCode::set_has_dwexperience() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PROTO_LogonSuccessBCode::clear_has_dwexperience() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PROTO_LogonSuccessBCode::clear_dwexperience() {
  dwexperience_ = GOOGLE_LONGLONG(0);
  clear_has_dwexperience();
}
inline ::google::protobuf::int64 PROTO_LogonSuccessBCode::dwexperience() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonSuccessBCode.dwExperience)
  return dwexperience_;
}
inline void PROTO_LogonSuccessBCode::set_dwexperience(::google::protobuf::int64 value) {
  set_has_dwexperience();
  dwexperience_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonSuccessBCode.dwExperience)
}

// required int32 cbMemberOrder = 6;
inline bool PROTO_LogonSuccessBCode::has_cbmemberorder() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PROTO_LogonSuccessBCode::set_has_cbmemberorder() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PROTO_LogonSuccessBCode::clear_has_cbmemberorder() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PROTO_LogonSuccessBCode::clear_cbmemberorder() {
  cbmemberorder_ = 0;
  clear_has_cbmemberorder();
}
inline ::google::protobuf::int32 PROTO_LogonSuccessBCode::cbmemberorder() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonSuccessBCode.cbMemberOrder)
  return cbmemberorder_;
}
inline void PROTO_LogonSuccessBCode::set_cbmemberorder(::google::protobuf::int32 value) {
  set_has_cbmemberorder();
  cbmemberorder_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonSuccessBCode.cbMemberOrder)
}

// required int64 dwUserMedal = 7;
inline bool PROTO_LogonSuccessBCode::has_dwusermedal() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PROTO_LogonSuccessBCode::set_has_dwusermedal() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PROTO_LogonSuccessBCode::clear_has_dwusermedal() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PROTO_LogonSuccessBCode::clear_dwusermedal() {
  dwusermedal_ = GOOGLE_LONGLONG(0);
  clear_has_dwusermedal();
}
inline ::google::protobuf::int64 PROTO_LogonSuccessBCode::dwusermedal() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonSuccessBCode.dwUserMedal)
  return dwusermedal_;
}
inline void PROTO_LogonSuccessBCode::set_dwusermedal(::google::protobuf::int64 value) {
  set_has_dwusermedal();
  dwusermedal_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonSuccessBCode.dwUserMedal)
}

// required int64 lUserScore = 8;
inline bool PROTO_LogonSuccessBCode::has_luserscore() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PROTO_LogonSuccessBCode::set_has_luserscore() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PROTO_LogonSuccessBCode::clear_has_luserscore() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PROTO_LogonSuccessBCode::clear_luserscore() {
  luserscore_ = GOOGLE_LONGLONG(0);
  clear_has_luserscore();
}
inline ::google::protobuf::int64 PROTO_LogonSuccessBCode::luserscore() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonSuccessBCode.lUserScore)
  return luserscore_;
}
inline void PROTO_LogonSuccessBCode::set_luserscore(::google::protobuf::int64 value) {
  set_has_luserscore();
  luserscore_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonSuccessBCode.lUserScore)
}

// required int64 lUserInsure = 9;
inline bool PROTO_LogonSuccessBCode::has_luserinsure() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PROTO_LogonSuccessBCode::set_has_luserinsure() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PROTO_LogonSuccessBCode::clear_has_luserinsure() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PROTO_LogonSuccessBCode::clear_luserinsure() {
  luserinsure_ = GOOGLE_LONGLONG(0);
  clear_has_luserinsure();
}
inline ::google::protobuf::int64 PROTO_LogonSuccessBCode::luserinsure() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonSuccessBCode.lUserInsure)
  return luserinsure_;
}
inline void PROTO_LogonSuccessBCode::set_luserinsure(::google::protobuf::int64 value) {
  set_has_luserinsure();
  luserinsure_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonSuccessBCode.lUserInsure)
}

// required int64 dwInoutIndex = 10;
inline bool PROTO_LogonSuccessBCode::has_dwinoutindex() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PROTO_LogonSuccessBCode::set_has_dwinoutindex() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PROTO_LogonSuccessBCode::clear_has_dwinoutindex() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PROTO_LogonSuccessBCode::clear_dwinoutindex() {
  dwinoutindex_ = GOOGLE_LONGLONG(0);
  clear_has_dwinoutindex();
}
inline ::google::protobuf::int64 PROTO_LogonSuccessBCode::dwinoutindex() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonSuccessBCode.dwInoutIndex)
  return dwinoutindex_;
}
inline void PROTO_LogonSuccessBCode::set_dwinoutindex(::google::protobuf::int64 value) {
  set_has_dwinoutindex();
  dwinoutindex_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonSuccessBCode.dwInoutIndex)
}

// required int64 lRevenue = 11;
inline bool PROTO_LogonSuccessBCode::has_lrevenue() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PROTO_LogonSuccessBCode::set_has_lrevenue() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PROTO_LogonSuccessBCode::clear_has_lrevenue() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PROTO_LogonSuccessBCode::clear_lrevenue() {
  lrevenue_ = GOOGLE_LONGLONG(0);
  clear_has_lrevenue();
}
inline ::google::protobuf::int64 PROTO_LogonSuccessBCode::lrevenue() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonSuccessBCode.lRevenue)
  return lrevenue_;
}
inline void PROTO_LogonSuccessBCode::set_lrevenue(::google::protobuf::int64 value) {
  set_has_lrevenue();
  lrevenue_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonSuccessBCode.lRevenue)
}

// required int64 lLobbyLV = 12;
inline bool PROTO_LogonSuccessBCode::has_llobbylv() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PROTO_LogonSuccessBCode::set_has_llobbylv() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PROTO_LogonSuccessBCode::clear_has_llobbylv() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PROTO_LogonSuccessBCode::clear_llobbylv() {
  llobbylv_ = GOOGLE_LONGLONG(0);
  clear_has_llobbylv();
}
inline ::google::protobuf::int64 PROTO_LogonSuccessBCode::llobbylv() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonSuccessBCode.lLobbyLV)
  return llobbylv_;
}
inline void PROTO_LogonSuccessBCode::set_llobbylv(::google::protobuf::int64 value) {
  set_has_llobbylv();
  llobbylv_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonSuccessBCode.lLobbyLV)
}

// required int32 cbVisitorClient = 13;
inline bool PROTO_LogonSuccessBCode::has_cbvisitorclient() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PROTO_LogonSuccessBCode::set_has_cbvisitorclient() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PROTO_LogonSuccessBCode::clear_has_cbvisitorclient() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PROTO_LogonSuccessBCode::clear_cbvisitorclient() {
  cbvisitorclient_ = 0;
  clear_has_cbvisitorclient();
}
inline ::google::protobuf::int32 PROTO_LogonSuccessBCode::cbvisitorclient() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonSuccessBCode.cbVisitorClient)
  return cbvisitorclient_;
}
inline void PROTO_LogonSuccessBCode::set_cbvisitorclient(::google::protobuf::int32 value) {
  set_has_cbvisitorclient();
  cbvisitorclient_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonSuccessBCode.cbVisitorClient)
}

// required string szNickName = 14;
inline bool PROTO_LogonSuccessBCode::has_sznickname() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PROTO_LogonSuccessBCode::set_has_sznickname() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PROTO_LogonSuccessBCode::clear_has_sznickname() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PROTO_LogonSuccessBCode::clear_sznickname() {
  if (sznickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_->clear();
  }
  clear_has_sznickname();
}
inline const ::std::string& PROTO_LogonSuccessBCode::sznickname() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonSuccessBCode.szNickName)
  return *sznickname_;
}
inline void PROTO_LogonSuccessBCode::set_sznickname(const ::std::string& value) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonSuccessBCode.szNickName)
}
inline void PROTO_LogonSuccessBCode::set_sznickname(const char* value) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_LogonSuccessBCode.szNickName)
}
inline void PROTO_LogonSuccessBCode::set_sznickname(const char* value, size_t size) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_LogonSuccessBCode.szNickName)
}
inline ::std::string* PROTO_LogonSuccessBCode::mutable_sznickname() {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_LogonSuccessBCode.szNickName)
  return sznickname_;
}
inline ::std::string* PROTO_LogonSuccessBCode::release_sznickname() {
  clear_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sznickname_;
    sznickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_LogonSuccessBCode::set_allocated_sznickname(::std::string* sznickname) {
  if (sznickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sznickname_;
  }
  if (sznickname) {
    set_has_sznickname();
    sznickname_ = sznickname;
  } else {
    clear_has_sznickname();
    sznickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_LogonSuccessBCode.szNickName)
}

// required string szAccounts = 15;
inline bool PROTO_LogonSuccessBCode::has_szaccounts() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PROTO_LogonSuccessBCode::set_has_szaccounts() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PROTO_LogonSuccessBCode::clear_has_szaccounts() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PROTO_LogonSuccessBCode::clear_szaccounts() {
  if (szaccounts_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_->clear();
  }
  clear_has_szaccounts();
}
inline const ::std::string& PROTO_LogonSuccessBCode::szaccounts() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonSuccessBCode.szAccounts)
  return *szaccounts_;
}
inline void PROTO_LogonSuccessBCode::set_szaccounts(const ::std::string& value) {
  set_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_ = new ::std::string;
  }
  szaccounts_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonSuccessBCode.szAccounts)
}
inline void PROTO_LogonSuccessBCode::set_szaccounts(const char* value) {
  set_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_ = new ::std::string;
  }
  szaccounts_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_LogonSuccessBCode.szAccounts)
}
inline void PROTO_LogonSuccessBCode::set_szaccounts(const char* value, size_t size) {
  set_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_ = new ::std::string;
  }
  szaccounts_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_LogonSuccessBCode.szAccounts)
}
inline ::std::string* PROTO_LogonSuccessBCode::mutable_szaccounts() {
  set_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_LogonSuccessBCode.szAccounts)
  return szaccounts_;
}
inline ::std::string* PROTO_LogonSuccessBCode::release_szaccounts() {
  clear_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szaccounts_;
    szaccounts_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_LogonSuccessBCode::set_allocated_szaccounts(::std::string* szaccounts) {
  if (szaccounts_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szaccounts_;
  }
  if (szaccounts) {
    set_has_szaccounts();
    szaccounts_ = szaccounts;
  } else {
    clear_has_szaccounts();
    szaccounts_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_LogonSuccessBCode.szAccounts)
}

// required string szUnderWrite = 16;
inline bool PROTO_LogonSuccessBCode::has_szunderwrite() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PROTO_LogonSuccessBCode::set_has_szunderwrite() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PROTO_LogonSuccessBCode::clear_has_szunderwrite() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PROTO_LogonSuccessBCode::clear_szunderwrite() {
  if (szunderwrite_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szunderwrite_->clear();
  }
  clear_has_szunderwrite();
}
inline const ::std::string& PROTO_LogonSuccessBCode::szunderwrite() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonSuccessBCode.szUnderWrite)
  return *szunderwrite_;
}
inline void PROTO_LogonSuccessBCode::set_szunderwrite(const ::std::string& value) {
  set_has_szunderwrite();
  if (szunderwrite_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szunderwrite_ = new ::std::string;
  }
  szunderwrite_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonSuccessBCode.szUnderWrite)
}
inline void PROTO_LogonSuccessBCode::set_szunderwrite(const char* value) {
  set_has_szunderwrite();
  if (szunderwrite_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szunderwrite_ = new ::std::string;
  }
  szunderwrite_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_LogonSuccessBCode.szUnderWrite)
}
inline void PROTO_LogonSuccessBCode::set_szunderwrite(const char* value, size_t size) {
  set_has_szunderwrite();
  if (szunderwrite_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szunderwrite_ = new ::std::string;
  }
  szunderwrite_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_LogonSuccessBCode.szUnderWrite)
}
inline ::std::string* PROTO_LogonSuccessBCode::mutable_szunderwrite() {
  set_has_szunderwrite();
  if (szunderwrite_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szunderwrite_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_LogonSuccessBCode.szUnderWrite)
  return szunderwrite_;
}
inline ::std::string* PROTO_LogonSuccessBCode::release_szunderwrite() {
  clear_has_szunderwrite();
  if (szunderwrite_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szunderwrite_;
    szunderwrite_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_LogonSuccessBCode::set_allocated_szunderwrite(::std::string* szunderwrite) {
  if (szunderwrite_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szunderwrite_;
  }
  if (szunderwrite) {
    set_has_szunderwrite();
    szunderwrite_ = szunderwrite;
  } else {
    clear_has_szunderwrite();
    szunderwrite_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_LogonSuccessBCode.szUnderWrite)
}

// required int64 dwServerID = 17;
inline bool PROTO_LogonSuccessBCode::has_dwserverid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PROTO_LogonSuccessBCode::set_has_dwserverid() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PROTO_LogonSuccessBCode::clear_has_dwserverid() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PROTO_LogonSuccessBCode::clear_dwserverid() {
  dwserverid_ = GOOGLE_LONGLONG(0);
  clear_has_dwserverid();
}
inline ::google::protobuf::int64 PROTO_LogonSuccessBCode::dwserverid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonSuccessBCode.dwServerID)
  return dwserverid_;
}
inline void PROTO_LogonSuccessBCode::set_dwserverid(::google::protobuf::int64 value) {
  set_has_dwserverid();
  dwserverid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonSuccessBCode.dwServerID)
}

// -------------------------------------------------------------------

// PROTO_LogonFinish

// required int32 cbLogonFinish = 1;
inline bool PROTO_LogonFinish::has_cblogonfinish() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_LogonFinish::set_has_cblogonfinish() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_LogonFinish::clear_has_cblogonfinish() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_LogonFinish::clear_cblogonfinish() {
  cblogonfinish_ = 0;
  clear_has_cblogonfinish();
}
inline ::google::protobuf::int32 PROTO_LogonFinish::cblogonfinish() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_LogonFinish.cbLogonFinish)
  return cblogonfinish_;
}
inline void PROTO_LogonFinish::set_cblogonfinish(::google::protobuf::int32 value) {
  set_has_cblogonfinish();
  cblogonfinish_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_LogonFinish.cbLogonFinish)
}

// -------------------------------------------------------------------

// PROTO_OperateResult

// required int32 wSubCommandID = 1;
inline bool PROTO_OperateResult::has_wsubcommandid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_OperateResult::set_has_wsubcommandid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_OperateResult::clear_has_wsubcommandid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_OperateResult::clear_wsubcommandid() {
  wsubcommandid_ = 0;
  clear_has_wsubcommandid();
}
inline ::google::protobuf::int32 PROTO_OperateResult::wsubcommandid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_OperateResult.wSubCommandID)
  return wsubcommandid_;
}
inline void PROTO_OperateResult::set_wsubcommandid(::google::protobuf::int32 value) {
  set_has_wsubcommandid();
  wsubcommandid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_OperateResult.wSubCommandID)
}

// required int64 dwResultCode = 2;
inline bool PROTO_OperateResult::has_dwresultcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_OperateResult::set_has_dwresultcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_OperateResult::clear_has_dwresultcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_OperateResult::clear_dwresultcode() {
  dwresultcode_ = GOOGLE_LONGLONG(0);
  clear_has_dwresultcode();
}
inline ::google::protobuf::int64 PROTO_OperateResult::dwresultcode() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_OperateResult.dwResultCode)
  return dwresultcode_;
}
inline void PROTO_OperateResult::set_dwresultcode(::google::protobuf::int64 value) {
  set_has_dwresultcode();
  dwresultcode_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_OperateResult.dwResultCode)
}

// required string szDescribeString = 3;
inline bool PROTO_OperateResult::has_szdescribestring() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PROTO_OperateResult::set_has_szdescribestring() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PROTO_OperateResult::clear_has_szdescribestring() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PROTO_OperateResult::clear_szdescribestring() {
  if (szdescribestring_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_->clear();
  }
  clear_has_szdescribestring();
}
inline const ::std::string& PROTO_OperateResult::szdescribestring() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_OperateResult.szDescribeString)
  return *szdescribestring_;
}
inline void PROTO_OperateResult::set_szdescribestring(const ::std::string& value) {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  szdescribestring_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_OperateResult.szDescribeString)
}
inline void PROTO_OperateResult::set_szdescribestring(const char* value) {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  szdescribestring_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_OperateResult.szDescribeString)
}
inline void PROTO_OperateResult::set_szdescribestring(const char* value, size_t size) {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  szdescribestring_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_OperateResult.szDescribeString)
}
inline ::std::string* PROTO_OperateResult::mutable_szdescribestring() {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_OperateResult.szDescribeString)
  return szdescribestring_;
}
inline ::std::string* PROTO_OperateResult::release_szdescribestring() {
  clear_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szdescribestring_;
    szdescribestring_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_OperateResult::set_allocated_szdescribestring(::std::string* szdescribestring) {
  if (szdescribestring_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szdescribestring_;
  }
  if (szdescribestring) {
    set_has_szdescribestring();
    szdescribestring_ = szdescribestring;
  } else {
    clear_has_szdescribestring();
    szdescribestring_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_OperateResult.szDescribeString)
}

// -------------------------------------------------------------------

// PROTO_ModifyLogonPass

// required string szAccounts = 1;
inline bool PROTO_ModifyLogonPass::has_szaccounts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_ModifyLogonPass::set_has_szaccounts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_ModifyLogonPass::clear_has_szaccounts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_ModifyLogonPass::clear_szaccounts() {
  if (szaccounts_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_->clear();
  }
  clear_has_szaccounts();
}
inline const ::std::string& PROTO_ModifyLogonPass::szaccounts() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_ModifyLogonPass.szAccounts)
  return *szaccounts_;
}
inline void PROTO_ModifyLogonPass::set_szaccounts(const ::std::string& value) {
  set_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_ = new ::std::string;
  }
  szaccounts_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_ModifyLogonPass.szAccounts)
}
inline void PROTO_ModifyLogonPass::set_szaccounts(const char* value) {
  set_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_ = new ::std::string;
  }
  szaccounts_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_ModifyLogonPass.szAccounts)
}
inline void PROTO_ModifyLogonPass::set_szaccounts(const char* value, size_t size) {
  set_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_ = new ::std::string;
  }
  szaccounts_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_ModifyLogonPass.szAccounts)
}
inline ::std::string* PROTO_ModifyLogonPass::mutable_szaccounts() {
  set_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccounts_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_ModifyLogonPass.szAccounts)
  return szaccounts_;
}
inline ::std::string* PROTO_ModifyLogonPass::release_szaccounts() {
  clear_has_szaccounts();
  if (szaccounts_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szaccounts_;
    szaccounts_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_ModifyLogonPass::set_allocated_szaccounts(::std::string* szaccounts) {
  if (szaccounts_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szaccounts_;
  }
  if (szaccounts) {
    set_has_szaccounts();
    szaccounts_ = szaccounts;
  } else {
    clear_has_szaccounts();
    szaccounts_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_ModifyLogonPass.szAccounts)
}

// required string szScrPassword = 2;
inline bool PROTO_ModifyLogonPass::has_szscrpassword() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_ModifyLogonPass::set_has_szscrpassword() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_ModifyLogonPass::clear_has_szscrpassword() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_ModifyLogonPass::clear_szscrpassword() {
  if (szscrpassword_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szscrpassword_->clear();
  }
  clear_has_szscrpassword();
}
inline const ::std::string& PROTO_ModifyLogonPass::szscrpassword() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_ModifyLogonPass.szScrPassword)
  return *szscrpassword_;
}
inline void PROTO_ModifyLogonPass::set_szscrpassword(const ::std::string& value) {
  set_has_szscrpassword();
  if (szscrpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szscrpassword_ = new ::std::string;
  }
  szscrpassword_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_ModifyLogonPass.szScrPassword)
}
inline void PROTO_ModifyLogonPass::set_szscrpassword(const char* value) {
  set_has_szscrpassword();
  if (szscrpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szscrpassword_ = new ::std::string;
  }
  szscrpassword_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_ModifyLogonPass.szScrPassword)
}
inline void PROTO_ModifyLogonPass::set_szscrpassword(const char* value, size_t size) {
  set_has_szscrpassword();
  if (szscrpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szscrpassword_ = new ::std::string;
  }
  szscrpassword_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_ModifyLogonPass.szScrPassword)
}
inline ::std::string* PROTO_ModifyLogonPass::mutable_szscrpassword() {
  set_has_szscrpassword();
  if (szscrpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szscrpassword_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_ModifyLogonPass.szScrPassword)
  return szscrpassword_;
}
inline ::std::string* PROTO_ModifyLogonPass::release_szscrpassword() {
  clear_has_szscrpassword();
  if (szscrpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szscrpassword_;
    szscrpassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_ModifyLogonPass::set_allocated_szscrpassword(::std::string* szscrpassword) {
  if (szscrpassword_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szscrpassword_;
  }
  if (szscrpassword) {
    set_has_szscrpassword();
    szscrpassword_ = szscrpassword;
  } else {
    clear_has_szscrpassword();
    szscrpassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_ModifyLogonPass.szScrPassword)
}

// required string szDesPassword = 3;
inline bool PROTO_ModifyLogonPass::has_szdespassword() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PROTO_ModifyLogonPass::set_has_szdespassword() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PROTO_ModifyLogonPass::clear_has_szdespassword() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PROTO_ModifyLogonPass::clear_szdespassword() {
  if (szdespassword_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdespassword_->clear();
  }
  clear_has_szdespassword();
}
inline const ::std::string& PROTO_ModifyLogonPass::szdespassword() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_ModifyLogonPass.szDesPassword)
  return *szdespassword_;
}
inline void PROTO_ModifyLogonPass::set_szdespassword(const ::std::string& value) {
  set_has_szdespassword();
  if (szdespassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdespassword_ = new ::std::string;
  }
  szdespassword_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_ModifyLogonPass.szDesPassword)
}
inline void PROTO_ModifyLogonPass::set_szdespassword(const char* value) {
  set_has_szdespassword();
  if (szdespassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdespassword_ = new ::std::string;
  }
  szdespassword_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_ModifyLogonPass.szDesPassword)
}
inline void PROTO_ModifyLogonPass::set_szdespassword(const char* value, size_t size) {
  set_has_szdespassword();
  if (szdespassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdespassword_ = new ::std::string;
  }
  szdespassword_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_ModifyLogonPass.szDesPassword)
}
inline ::std::string* PROTO_ModifyLogonPass::mutable_szdespassword() {
  set_has_szdespassword();
  if (szdespassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdespassword_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_ModifyLogonPass.szDesPassword)
  return szdespassword_;
}
inline ::std::string* PROTO_ModifyLogonPass::release_szdespassword() {
  clear_has_szdespassword();
  if (szdespassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szdespassword_;
    szdespassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_ModifyLogonPass::set_allocated_szdespassword(::std::string* szdespassword) {
  if (szdespassword_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szdespassword_;
  }
  if (szdespassword) {
    set_has_szdespassword();
    szdespassword_ = szdespassword;
  } else {
    clear_has_szdespassword();
    szdespassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_ModifyLogonPass.szDesPassword)
}

// -------------------------------------------------------------------

// PROTO_ModifyNickName

// required int64 dwUserID = 1;
inline bool PROTO_ModifyNickName::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_ModifyNickName::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_ModifyNickName::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_ModifyNickName::clear_dwuserid() {
  dwuserid_ = GOOGLE_LONGLONG(0);
  clear_has_dwuserid();
}
inline ::google::protobuf::int64 PROTO_ModifyNickName::dwuserid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_ModifyNickName.dwUserID)
  return dwuserid_;
}
inline void PROTO_ModifyNickName::set_dwuserid(::google::protobuf::int64 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_ModifyNickName.dwUserID)
}

// required string szNickName = 2;
inline bool PROTO_ModifyNickName::has_sznickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_ModifyNickName::set_has_sznickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_ModifyNickName::clear_has_sznickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_ModifyNickName::clear_sznickname() {
  if (sznickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_->clear();
  }
  clear_has_sznickname();
}
inline const ::std::string& PROTO_ModifyNickName::sznickname() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_ModifyNickName.szNickName)
  return *sznickname_;
}
inline void PROTO_ModifyNickName::set_sznickname(const ::std::string& value) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_ModifyNickName.szNickName)
}
inline void PROTO_ModifyNickName::set_sznickname(const char* value) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_ModifyNickName.szNickName)
}
inline void PROTO_ModifyNickName::set_sznickname(const char* value, size_t size) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_ModifyNickName.szNickName)
}
inline ::std::string* PROTO_ModifyNickName::mutable_sznickname() {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_ModifyNickName.szNickName)
  return sznickname_;
}
inline ::std::string* PROTO_ModifyNickName::release_sznickname() {
  clear_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sznickname_;
    sznickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_ModifyNickName::set_allocated_sznickname(::std::string* sznickname) {
  if (sznickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sznickname_;
  }
  if (sznickname) {
    set_has_sznickname();
    sznickname_ = sznickname;
  } else {
    clear_has_sznickname();
    sznickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_ModifyNickName.szNickName)
}

// -------------------------------------------------------------------

// PROTO_ModifyResult

// required int64 cbResultCode = 1;
inline bool PROTO_ModifyResult::has_cbresultcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_ModifyResult::set_has_cbresultcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_ModifyResult::clear_has_cbresultcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_ModifyResult::clear_cbresultcode() {
  cbresultcode_ = GOOGLE_LONGLONG(0);
  clear_has_cbresultcode();
}
inline ::google::protobuf::int64 PROTO_ModifyResult::cbresultcode() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_ModifyResult.cbResultCode)
  return cbresultcode_;
}
inline void PROTO_ModifyResult::set_cbresultcode(::google::protobuf::int64 value) {
  set_has_cbresultcode();
  cbresultcode_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_ModifyResult.cbResultCode)
}

// required int64 wSubCommandID = 2;
inline bool PROTO_ModifyResult::has_wsubcommandid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_ModifyResult::set_has_wsubcommandid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_ModifyResult::clear_has_wsubcommandid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_ModifyResult::clear_wsubcommandid() {
  wsubcommandid_ = GOOGLE_LONGLONG(0);
  clear_has_wsubcommandid();
}
inline ::google::protobuf::int64 PROTO_ModifyResult::wsubcommandid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_ModifyResult.wSubCommandID)
  return wsubcommandid_;
}
inline void PROTO_ModifyResult::set_wsubcommandid(::google::protobuf::int64 value) {
  set_has_wsubcommandid();
  wsubcommandid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_ModifyResult.wSubCommandID)
}

// required string szDescribe = 3;
inline bool PROTO_ModifyResult::has_szdescribe() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PROTO_ModifyResult::set_has_szdescribe() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PROTO_ModifyResult::clear_has_szdescribe() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PROTO_ModifyResult::clear_szdescribe() {
  if (szdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribe_->clear();
  }
  clear_has_szdescribe();
}
inline const ::std::string& PROTO_ModifyResult::szdescribe() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_ModifyResult.szDescribe)
  return *szdescribe_;
}
inline void PROTO_ModifyResult::set_szdescribe(const ::std::string& value) {
  set_has_szdescribe();
  if (szdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribe_ = new ::std::string;
  }
  szdescribe_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_ModifyResult.szDescribe)
}
inline void PROTO_ModifyResult::set_szdescribe(const char* value) {
  set_has_szdescribe();
  if (szdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribe_ = new ::std::string;
  }
  szdescribe_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_ModifyResult.szDescribe)
}
inline void PROTO_ModifyResult::set_szdescribe(const char* value, size_t size) {
  set_has_szdescribe();
  if (szdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribe_ = new ::std::string;
  }
  szdescribe_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_ModifyResult.szDescribe)
}
inline ::std::string* PROTO_ModifyResult::mutable_szdescribe() {
  set_has_szdescribe();
  if (szdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribe_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_ModifyResult.szDescribe)
  return szdescribe_;
}
inline ::std::string* PROTO_ModifyResult::release_szdescribe() {
  clear_has_szdescribe();
  if (szdescribe_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szdescribe_;
    szdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_ModifyResult::set_allocated_szdescribe(::std::string* szdescribe) {
  if (szdescribe_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szdescribe_;
  }
  if (szdescribe) {
    set_has_szdescribe();
    szdescribe_ = szdescribe;
  } else {
    clear_has_szdescribe();
    szdescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_ModifyResult.szDescribe)
}

// -------------------------------------------------------------------

// PROTO_UserSaveScore

// required int64 dwUserID = 1;
inline bool PROTO_UserSaveScore::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_UserSaveScore::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_UserSaveScore::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_UserSaveScore::clear_dwuserid() {
  dwuserid_ = GOOGLE_LONGLONG(0);
  clear_has_dwuserid();
}
inline ::google::protobuf::int64 PROTO_UserSaveScore::dwuserid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_UserSaveScore.dwUserID)
  return dwuserid_;
}
inline void PROTO_UserSaveScore::set_dwuserid(::google::protobuf::int64 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_UserSaveScore.dwUserID)
}

// required int64 lSaveScore = 2;
inline bool PROTO_UserSaveScore::has_lsavescore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_UserSaveScore::set_has_lsavescore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_UserSaveScore::clear_has_lsavescore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_UserSaveScore::clear_lsavescore() {
  lsavescore_ = GOOGLE_LONGLONG(0);
  clear_has_lsavescore();
}
inline ::google::protobuf::int64 PROTO_UserSaveScore::lsavescore() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_UserSaveScore.lSaveScore)
  return lsavescore_;
}
inline void PROTO_UserSaveScore::set_lsavescore(::google::protobuf::int64 value) {
  set_has_lsavescore();
  lsavescore_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_UserSaveScore.lSaveScore)
}

// required string szMachineID = 3;
inline bool PROTO_UserSaveScore::has_szmachineid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PROTO_UserSaveScore::set_has_szmachineid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PROTO_UserSaveScore::clear_has_szmachineid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PROTO_UserSaveScore::clear_szmachineid() {
  if (szmachineid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_->clear();
  }
  clear_has_szmachineid();
}
inline const ::std::string& PROTO_UserSaveScore::szmachineid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_UserSaveScore.szMachineID)
  return *szmachineid_;
}
inline void PROTO_UserSaveScore::set_szmachineid(const ::std::string& value) {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  szmachineid_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_UserSaveScore.szMachineID)
}
inline void PROTO_UserSaveScore::set_szmachineid(const char* value) {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  szmachineid_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_UserSaveScore.szMachineID)
}
inline void PROTO_UserSaveScore::set_szmachineid(const char* value, size_t size) {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  szmachineid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_UserSaveScore.szMachineID)
}
inline ::std::string* PROTO_UserSaveScore::mutable_szmachineid() {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_UserSaveScore.szMachineID)
  return szmachineid_;
}
inline ::std::string* PROTO_UserSaveScore::release_szmachineid() {
  clear_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szmachineid_;
    szmachineid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_UserSaveScore::set_allocated_szmachineid(::std::string* szmachineid) {
  if (szmachineid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szmachineid_;
  }
  if (szmachineid) {
    set_has_szmachineid();
    szmachineid_ = szmachineid;
  } else {
    clear_has_szmachineid();
    szmachineid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_UserSaveScore.szMachineID)
}

// -------------------------------------------------------------------

// PROTO_UserTakeScore

// required int64 dwUserID = 1;
inline bool PROTO_UserTakeScore::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_UserTakeScore::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_UserTakeScore::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_UserTakeScore::clear_dwuserid() {
  dwuserid_ = GOOGLE_LONGLONG(0);
  clear_has_dwuserid();
}
inline ::google::protobuf::int64 PROTO_UserTakeScore::dwuserid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_UserTakeScore.dwUserID)
  return dwuserid_;
}
inline void PROTO_UserTakeScore::set_dwuserid(::google::protobuf::int64 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_UserTakeScore.dwUserID)
}

// required int64 lTakeScore = 2;
inline bool PROTO_UserTakeScore::has_ltakescore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_UserTakeScore::set_has_ltakescore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_UserTakeScore::clear_has_ltakescore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_UserTakeScore::clear_ltakescore() {
  ltakescore_ = GOOGLE_LONGLONG(0);
  clear_has_ltakescore();
}
inline ::google::protobuf::int64 PROTO_UserTakeScore::ltakescore() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_UserTakeScore.lTakeScore)
  return ltakescore_;
}
inline void PROTO_UserTakeScore::set_ltakescore(::google::protobuf::int64 value) {
  set_has_ltakescore();
  ltakescore_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_UserTakeScore.lTakeScore)
}

// required string szPassword = 3;
inline bool PROTO_UserTakeScore::has_szpassword() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PROTO_UserTakeScore::set_has_szpassword() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PROTO_UserTakeScore::clear_has_szpassword() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PROTO_UserTakeScore::clear_szpassword() {
  if (szpassword_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szpassword_->clear();
  }
  clear_has_szpassword();
}
inline const ::std::string& PROTO_UserTakeScore::szpassword() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_UserTakeScore.szPassword)
  return *szpassword_;
}
inline void PROTO_UserTakeScore::set_szpassword(const ::std::string& value) {
  set_has_szpassword();
  if (szpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szpassword_ = new ::std::string;
  }
  szpassword_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_UserTakeScore.szPassword)
}
inline void PROTO_UserTakeScore::set_szpassword(const char* value) {
  set_has_szpassword();
  if (szpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szpassword_ = new ::std::string;
  }
  szpassword_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_UserTakeScore.szPassword)
}
inline void PROTO_UserTakeScore::set_szpassword(const char* value, size_t size) {
  set_has_szpassword();
  if (szpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szpassword_ = new ::std::string;
  }
  szpassword_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_UserTakeScore.szPassword)
}
inline ::std::string* PROTO_UserTakeScore::mutable_szpassword() {
  set_has_szpassword();
  if (szpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szpassword_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_UserTakeScore.szPassword)
  return szpassword_;
}
inline ::std::string* PROTO_UserTakeScore::release_szpassword() {
  clear_has_szpassword();
  if (szpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szpassword_;
    szpassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_UserTakeScore::set_allocated_szpassword(::std::string* szpassword) {
  if (szpassword_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szpassword_;
  }
  if (szpassword) {
    set_has_szpassword();
    szpassword_ = szpassword;
  } else {
    clear_has_szpassword();
    szpassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_UserTakeScore.szPassword)
}

// required string szMachineID = 4;
inline bool PROTO_UserTakeScore::has_szmachineid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PROTO_UserTakeScore::set_has_szmachineid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PROTO_UserTakeScore::clear_has_szmachineid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PROTO_UserTakeScore::clear_szmachineid() {
  if (szmachineid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_->clear();
  }
  clear_has_szmachineid();
}
inline const ::std::string& PROTO_UserTakeScore::szmachineid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_UserTakeScore.szMachineID)
  return *szmachineid_;
}
inline void PROTO_UserTakeScore::set_szmachineid(const ::std::string& value) {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  szmachineid_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_UserTakeScore.szMachineID)
}
inline void PROTO_UserTakeScore::set_szmachineid(const char* value) {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  szmachineid_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_UserTakeScore.szMachineID)
}
inline void PROTO_UserTakeScore::set_szmachineid(const char* value, size_t size) {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  szmachineid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_UserTakeScore.szMachineID)
}
inline ::std::string* PROTO_UserTakeScore::mutable_szmachineid() {
  set_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachineid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_UserTakeScore.szMachineID)
  return szmachineid_;
}
inline ::std::string* PROTO_UserTakeScore::release_szmachineid() {
  clear_has_szmachineid();
  if (szmachineid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szmachineid_;
    szmachineid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_UserTakeScore::set_allocated_szmachineid(::std::string* szmachineid) {
  if (szmachineid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szmachineid_;
  }
  if (szmachineid) {
    set_has_szmachineid();
    szmachineid_ = szmachineid;
  } else {
    clear_has_szmachineid();
    szmachineid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_UserTakeScore.szMachineID)
}

// -------------------------------------------------------------------

// PROTO_QueryInsureInfo

// required int64 dwUserID = 1;
inline bool PROTO_QueryInsureInfo::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_QueryInsureInfo::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_QueryInsureInfo::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_QueryInsureInfo::clear_dwuserid() {
  dwuserid_ = GOOGLE_LONGLONG(0);
  clear_has_dwuserid();
}
inline ::google::protobuf::int64 PROTO_QueryInsureInfo::dwuserid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_QueryInsureInfo.dwUserID)
  return dwuserid_;
}
inline void PROTO_QueryInsureInfo::set_dwuserid(::google::protobuf::int64 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_QueryInsureInfo.dwUserID)
}

// -------------------------------------------------------------------

// PROTO_UserInsureSuccess

// required int64 dwUserID = 1;
inline bool PROTO_UserInsureSuccess::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_UserInsureSuccess::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_UserInsureSuccess::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_UserInsureSuccess::clear_dwuserid() {
  dwuserid_ = GOOGLE_LONGLONG(0);
  clear_has_dwuserid();
}
inline ::google::protobuf::int64 PROTO_UserInsureSuccess::dwuserid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_UserInsureSuccess.dwUserID)
  return dwuserid_;
}
inline void PROTO_UserInsureSuccess::set_dwuserid(::google::protobuf::int64 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_UserInsureSuccess.dwUserID)
}

// required int64 lUserScore = 2;
inline bool PROTO_UserInsureSuccess::has_luserscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_UserInsureSuccess::set_has_luserscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_UserInsureSuccess::clear_has_luserscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_UserInsureSuccess::clear_luserscore() {
  luserscore_ = GOOGLE_LONGLONG(0);
  clear_has_luserscore();
}
inline ::google::protobuf::int64 PROTO_UserInsureSuccess::luserscore() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_UserInsureSuccess.lUserScore)
  return luserscore_;
}
inline void PROTO_UserInsureSuccess::set_luserscore(::google::protobuf::int64 value) {
  set_has_luserscore();
  luserscore_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_UserInsureSuccess.lUserScore)
}

// required int64 lUserInsure = 3;
inline bool PROTO_UserInsureSuccess::has_luserinsure() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PROTO_UserInsureSuccess::set_has_luserinsure() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PROTO_UserInsureSuccess::clear_has_luserinsure() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PROTO_UserInsureSuccess::clear_luserinsure() {
  luserinsure_ = GOOGLE_LONGLONG(0);
  clear_has_luserinsure();
}
inline ::google::protobuf::int64 PROTO_UserInsureSuccess::luserinsure() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_UserInsureSuccess.lUserInsure)
  return luserinsure_;
}
inline void PROTO_UserInsureSuccess::set_luserinsure(::google::protobuf::int64 value) {
  set_has_luserinsure();
  luserinsure_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_UserInsureSuccess.lUserInsure)
}

// required string szDescribeString = 4;
inline bool PROTO_UserInsureSuccess::has_szdescribestring() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PROTO_UserInsureSuccess::set_has_szdescribestring() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PROTO_UserInsureSuccess::clear_has_szdescribestring() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PROTO_UserInsureSuccess::clear_szdescribestring() {
  if (szdescribestring_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_->clear();
  }
  clear_has_szdescribestring();
}
inline const ::std::string& PROTO_UserInsureSuccess::szdescribestring() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_UserInsureSuccess.szDescribeString)
  return *szdescribestring_;
}
inline void PROTO_UserInsureSuccess::set_szdescribestring(const ::std::string& value) {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  szdescribestring_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_UserInsureSuccess.szDescribeString)
}
inline void PROTO_UserInsureSuccess::set_szdescribestring(const char* value) {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  szdescribestring_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_UserInsureSuccess.szDescribeString)
}
inline void PROTO_UserInsureSuccess::set_szdescribestring(const char* value, size_t size) {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  szdescribestring_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_UserInsureSuccess.szDescribeString)
}
inline ::std::string* PROTO_UserInsureSuccess::mutable_szdescribestring() {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_UserInsureSuccess.szDescribeString)
  return szdescribestring_;
}
inline ::std::string* PROTO_UserInsureSuccess::release_szdescribestring() {
  clear_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szdescribestring_;
    szdescribestring_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_UserInsureSuccess::set_allocated_szdescribestring(::std::string* szdescribestring) {
  if (szdescribestring_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szdescribestring_;
  }
  if (szdescribestring) {
    set_has_szdescribestring();
    szdescribestring_ = szdescribestring;
  } else {
    clear_has_szdescribestring();
    szdescribestring_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_UserInsureSuccess.szDescribeString)
}

// -------------------------------------------------------------------

// PROTO_UserInsureFailure

// required int64 lResultCode = 1;
inline bool PROTO_UserInsureFailure::has_lresultcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_UserInsureFailure::set_has_lresultcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_UserInsureFailure::clear_has_lresultcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_UserInsureFailure::clear_lresultcode() {
  lresultcode_ = GOOGLE_LONGLONG(0);
  clear_has_lresultcode();
}
inline ::google::protobuf::int64 PROTO_UserInsureFailure::lresultcode() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_UserInsureFailure.lResultCode)
  return lresultcode_;
}
inline void PROTO_UserInsureFailure::set_lresultcode(::google::protobuf::int64 value) {
  set_has_lresultcode();
  lresultcode_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_UserInsureFailure.lResultCode)
}

// required string szDescribeString = 2;
inline bool PROTO_UserInsureFailure::has_szdescribestring() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_UserInsureFailure::set_has_szdescribestring() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_UserInsureFailure::clear_has_szdescribestring() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_UserInsureFailure::clear_szdescribestring() {
  if (szdescribestring_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_->clear();
  }
  clear_has_szdescribestring();
}
inline const ::std::string& PROTO_UserInsureFailure::szdescribestring() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_UserInsureFailure.szDescribeString)
  return *szdescribestring_;
}
inline void PROTO_UserInsureFailure::set_szdescribestring(const ::std::string& value) {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  szdescribestring_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_UserInsureFailure.szDescribeString)
}
inline void PROTO_UserInsureFailure::set_szdescribestring(const char* value) {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  szdescribestring_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_UserInsureFailure.szDescribeString)
}
inline void PROTO_UserInsureFailure::set_szdescribestring(const char* value, size_t size) {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  szdescribestring_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_UserInsureFailure.szDescribeString)
}
inline ::std::string* PROTO_UserInsureFailure::mutable_szdescribestring() {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_UserInsureFailure.szDescribeString)
  return szdescribestring_;
}
inline ::std::string* PROTO_UserInsureFailure::release_szdescribestring() {
  clear_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szdescribestring_;
    szdescribestring_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_UserInsureFailure::set_allocated_szdescribestring(::std::string* szdescribestring) {
  if (szdescribestring_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szdescribestring_;
  }
  if (szdescribestring) {
    set_has_szdescribestring();
    szdescribestring_ = szdescribestring;
  } else {
    clear_has_szdescribestring();
    szdescribestring_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_UserInsureFailure.szDescribeString)
}

// -------------------------------------------------------------------

// PROTO_GetDialInfo

// required int64 dwUserID = 1;
inline bool PROTO_GetDialInfo::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_GetDialInfo::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_GetDialInfo::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_GetDialInfo::clear_dwuserid() {
  dwuserid_ = GOOGLE_LONGLONG(0);
  clear_has_dwuserid();
}
inline ::google::protobuf::int64 PROTO_GetDialInfo::dwuserid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_GetDialInfo.dwUserID)
  return dwuserid_;
}
inline void PROTO_GetDialInfo::set_dwuserid(::google::protobuf::int64 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_GetDialInfo.dwUserID)
}

// -------------------------------------------------------------------

// PROTO_GetDailInfoResult

// required int64 dwSilverConsume = 1;
inline bool PROTO_GetDailInfoResult::has_dwsilverconsume() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_GetDailInfoResult::set_has_dwsilverconsume() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_GetDailInfoResult::clear_has_dwsilverconsume() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_GetDailInfoResult::clear_dwsilverconsume() {
  dwsilverconsume_ = GOOGLE_LONGLONG(0);
  clear_has_dwsilverconsume();
}
inline ::google::protobuf::int64 PROTO_GetDailInfoResult::dwsilverconsume() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_GetDailInfoResult.dwSilverConsume)
  return dwsilverconsume_;
}
inline void PROTO_GetDailInfoResult::set_dwsilverconsume(::google::protobuf::int64 value) {
  set_has_dwsilverconsume();
  dwsilverconsume_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_GetDailInfoResult.dwSilverConsume)
}

// required int64 dwGoldConsume = 2;
inline bool PROTO_GetDailInfoResult::has_dwgoldconsume() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_GetDailInfoResult::set_has_dwgoldconsume() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_GetDailInfoResult::clear_has_dwgoldconsume() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_GetDailInfoResult::clear_dwgoldconsume() {
  dwgoldconsume_ = GOOGLE_LONGLONG(0);
  clear_has_dwgoldconsume();
}
inline ::google::protobuf::int64 PROTO_GetDailInfoResult::dwgoldconsume() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_GetDailInfoResult.dwGoldConsume)
  return dwgoldconsume_;
}
inline void PROTO_GetDailInfoResult::set_dwgoldconsume(::google::protobuf::int64 value) {
  set_has_dwgoldconsume();
  dwgoldconsume_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_GetDailInfoResult.dwGoldConsume)
}

// required int64 dwJewelConsume = 3;
inline bool PROTO_GetDailInfoResult::has_dwjewelconsume() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PROTO_GetDailInfoResult::set_has_dwjewelconsume() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PROTO_GetDailInfoResult::clear_has_dwjewelconsume() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PROTO_GetDailInfoResult::clear_dwjewelconsume() {
  dwjewelconsume_ = GOOGLE_LONGLONG(0);
  clear_has_dwjewelconsume();
}
inline ::google::protobuf::int64 PROTO_GetDailInfoResult::dwjewelconsume() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_GetDailInfoResult.dwJewelConsume)
  return dwjewelconsume_;
}
inline void PROTO_GetDailInfoResult::set_dwjewelconsume(::google::protobuf::int64 value) {
  set_has_dwjewelconsume();
  dwjewelconsume_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_GetDailInfoResult.dwJewelConsume)
}

// required int64 dwDrawScore = 4;
inline bool PROTO_GetDailInfoResult::has_dwdrawscore() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PROTO_GetDailInfoResult::set_has_dwdrawscore() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PROTO_GetDailInfoResult::clear_has_dwdrawscore() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PROTO_GetDailInfoResult::clear_dwdrawscore() {
  dwdrawscore_ = GOOGLE_LONGLONG(0);
  clear_has_dwdrawscore();
}
inline ::google::protobuf::int64 PROTO_GetDailInfoResult::dwdrawscore() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_GetDailInfoResult.dwDrawScore)
  return dwdrawscore_;
}
inline void PROTO_GetDailInfoResult::set_dwdrawscore(::google::protobuf::int64 value) {
  set_has_dwdrawscore();
  dwdrawscore_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_GetDailInfoResult.dwDrawScore)
}

// required int64 dwAddScore = 5;
inline bool PROTO_GetDailInfoResult::has_dwaddscore() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PROTO_GetDailInfoResult::set_has_dwaddscore() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PROTO_GetDailInfoResult::clear_has_dwaddscore() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PROTO_GetDailInfoResult::clear_dwaddscore() {
  dwaddscore_ = GOOGLE_LONGLONG(0);
  clear_has_dwaddscore();
}
inline ::google::protobuf::int64 PROTO_GetDailInfoResult::dwaddscore() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_GetDailInfoResult.dwAddScore)
  return dwaddscore_;
}
inline void PROTO_GetDailInfoResult::set_dwaddscore(::google::protobuf::int64 value) {
  set_has_dwaddscore();
  dwaddscore_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_GetDailInfoResult.dwAddScore)
}

// repeated int64 dwDailInfo = 6;
inline int PROTO_GetDailInfoResult::dwdailinfo_size() const {
  return dwdailinfo_.size();
}
inline void PROTO_GetDailInfoResult::clear_dwdailinfo() {
  dwdailinfo_.Clear();
}
inline ::google::protobuf::int64 PROTO_GetDailInfoResult::dwdailinfo(int index) const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_GetDailInfoResult.dwDailInfo)
  return dwdailinfo_.Get(index);
}
inline void PROTO_GetDailInfoResult::set_dwdailinfo(int index, ::google::protobuf::int64 value) {
  dwdailinfo_.Set(index, value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_GetDailInfoResult.dwDailInfo)
}
inline void PROTO_GetDailInfoResult::add_dwdailinfo(::google::protobuf::int64 value) {
  dwdailinfo_.Add(value);
  // @@protoc_insertion_point(field_add:LogonServer.PROTO_GetDailInfoResult.dwDailInfo)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
PROTO_GetDailInfoResult::dwdailinfo() const {
  // @@protoc_insertion_point(field_list:LogonServer.PROTO_GetDailInfoResult.dwDailInfo)
  return dwdailinfo_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
PROTO_GetDailInfoResult::mutable_dwdailinfo() {
  // @@protoc_insertion_point(field_mutable_list:LogonServer.PROTO_GetDailInfoResult.dwDailInfo)
  return &dwdailinfo_;
}

// -------------------------------------------------------------------

// PROTO_RotateDailAward

// required int64 dwUserID = 1;
inline bool PROTO_RotateDailAward::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_RotateDailAward::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_RotateDailAward::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_RotateDailAward::clear_dwuserid() {
  dwuserid_ = GOOGLE_LONGLONG(0);
  clear_has_dwuserid();
}
inline ::google::protobuf::int64 PROTO_RotateDailAward::dwuserid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RotateDailAward.dwUserID)
  return dwuserid_;
}
inline void PROTO_RotateDailAward::set_dwuserid(::google::protobuf::int64 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RotateDailAward.dwUserID)
}

// required int64 dwDailType = 2;
inline bool PROTO_RotateDailAward::has_dwdailtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_RotateDailAward::set_has_dwdailtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_RotateDailAward::clear_has_dwdailtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_RotateDailAward::clear_dwdailtype() {
  dwdailtype_ = GOOGLE_LONGLONG(0);
  clear_has_dwdailtype();
}
inline ::google::protobuf::int64 PROTO_RotateDailAward::dwdailtype() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RotateDailAward.dwDailType)
  return dwdailtype_;
}
inline void PROTO_RotateDailAward::set_dwdailtype(::google::protobuf::int64 value) {
  set_has_dwdailtype();
  dwdailtype_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RotateDailAward.dwDailType)
}

// -------------------------------------------------------------------

// PROTO_RotateDailAwardInfo

// required int64 dwResultCode = 1;
inline bool PROTO_RotateDailAwardInfo::has_dwresultcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_RotateDailAwardInfo::set_has_dwresultcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_RotateDailAwardInfo::clear_has_dwresultcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_RotateDailAwardInfo::clear_dwresultcode() {
  dwresultcode_ = GOOGLE_LONGLONG(0);
  clear_has_dwresultcode();
}
inline ::google::protobuf::int64 PROTO_RotateDailAwardInfo::dwresultcode() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RotateDailAwardInfo.dwResultCode)
  return dwresultcode_;
}
inline void PROTO_RotateDailAwardInfo::set_dwresultcode(::google::protobuf::int64 value) {
  set_has_dwresultcode();
  dwresultcode_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RotateDailAwardInfo.dwResultCode)
}

// required string szDescribeString = 2;
inline bool PROTO_RotateDailAwardInfo::has_szdescribestring() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_RotateDailAwardInfo::set_has_szdescribestring() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_RotateDailAwardInfo::clear_has_szdescribestring() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_RotateDailAwardInfo::clear_szdescribestring() {
  if (szdescribestring_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_->clear();
  }
  clear_has_szdescribestring();
}
inline const ::std::string& PROTO_RotateDailAwardInfo::szdescribestring() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RotateDailAwardInfo.szDescribeString)
  return *szdescribestring_;
}
inline void PROTO_RotateDailAwardInfo::set_szdescribestring(const ::std::string& value) {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  szdescribestring_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RotateDailAwardInfo.szDescribeString)
}
inline void PROTO_RotateDailAwardInfo::set_szdescribestring(const char* value) {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  szdescribestring_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_RotateDailAwardInfo.szDescribeString)
}
inline void PROTO_RotateDailAwardInfo::set_szdescribestring(const char* value, size_t size) {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  szdescribestring_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_RotateDailAwardInfo.szDescribeString)
}
inline ::std::string* PROTO_RotateDailAwardInfo::mutable_szdescribestring() {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_RotateDailAwardInfo.szDescribeString)
  return szdescribestring_;
}
inline ::std::string* PROTO_RotateDailAwardInfo::release_szdescribestring() {
  clear_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szdescribestring_;
    szdescribestring_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_RotateDailAwardInfo::set_allocated_szdescribestring(::std::string* szdescribestring) {
  if (szdescribestring_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szdescribestring_;
  }
  if (szdescribestring) {
    set_has_szdescribestring();
    szdescribestring_ = szdescribestring;
  } else {
    clear_has_szdescribestring();
    szdescribestring_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_RotateDailAwardInfo.szDescribeString)
}

// required int64 dwUserID = 3;
inline bool PROTO_RotateDailAwardInfo::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PROTO_RotateDailAwardInfo::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PROTO_RotateDailAwardInfo::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PROTO_RotateDailAwardInfo::clear_dwuserid() {
  dwuserid_ = GOOGLE_LONGLONG(0);
  clear_has_dwuserid();
}
inline ::google::protobuf::int64 PROTO_RotateDailAwardInfo::dwuserid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RotateDailAwardInfo.dwUserID)
  return dwuserid_;
}
inline void PROTO_RotateDailAwardInfo::set_dwuserid(::google::protobuf::int64 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RotateDailAwardInfo.dwUserID)
}

// required int64 dwDailType = 4;
inline bool PROTO_RotateDailAwardInfo::has_dwdailtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PROTO_RotateDailAwardInfo::set_has_dwdailtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PROTO_RotateDailAwardInfo::clear_has_dwdailtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PROTO_RotateDailAwardInfo::clear_dwdailtype() {
  dwdailtype_ = GOOGLE_LONGLONG(0);
  clear_has_dwdailtype();
}
inline ::google::protobuf::int64 PROTO_RotateDailAwardInfo::dwdailtype() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RotateDailAwardInfo.dwDailType)
  return dwdailtype_;
}
inline void PROTO_RotateDailAwardInfo::set_dwdailtype(::google::protobuf::int64 value) {
  set_has_dwdailtype();
  dwdailtype_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RotateDailAwardInfo.dwDailType)
}

// required int64 dwDailAward = 5;
inline bool PROTO_RotateDailAwardInfo::has_dwdailaward() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PROTO_RotateDailAwardInfo::set_has_dwdailaward() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PROTO_RotateDailAwardInfo::clear_has_dwdailaward() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PROTO_RotateDailAwardInfo::clear_dwdailaward() {
  dwdailaward_ = GOOGLE_LONGLONG(0);
  clear_has_dwdailaward();
}
inline ::google::protobuf::int64 PROTO_RotateDailAwardInfo::dwdailaward() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RotateDailAwardInfo.dwDailAward)
  return dwdailaward_;
}
inline void PROTO_RotateDailAwardInfo::set_dwdailaward(::google::protobuf::int64 value) {
  set_has_dwdailaward();
  dwdailaward_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RotateDailAwardInfo.dwDailAward)
}

// required int64 dwAwardID = 6;
inline bool PROTO_RotateDailAwardInfo::has_dwawardid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PROTO_RotateDailAwardInfo::set_has_dwawardid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PROTO_RotateDailAwardInfo::clear_has_dwawardid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PROTO_RotateDailAwardInfo::clear_dwawardid() {
  dwawardid_ = GOOGLE_LONGLONG(0);
  clear_has_dwawardid();
}
inline ::google::protobuf::int64 PROTO_RotateDailAwardInfo::dwawardid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RotateDailAwardInfo.dwAwardID)
  return dwawardid_;
}
inline void PROTO_RotateDailAwardInfo::set_dwawardid(::google::protobuf::int64 value) {
  set_has_dwawardid();
  dwawardid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RotateDailAwardInfo.dwAwardID)
}

// required int64 dwConsumeSum = 7;
inline bool PROTO_RotateDailAwardInfo::has_dwconsumesum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PROTO_RotateDailAwardInfo::set_has_dwconsumesum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PROTO_RotateDailAwardInfo::clear_has_dwconsumesum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PROTO_RotateDailAwardInfo::clear_dwconsumesum() {
  dwconsumesum_ = GOOGLE_LONGLONG(0);
  clear_has_dwconsumesum();
}
inline ::google::protobuf::int64 PROTO_RotateDailAwardInfo::dwconsumesum() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RotateDailAwardInfo.dwConsumeSum)
  return dwconsumesum_;
}
inline void PROTO_RotateDailAwardInfo::set_dwconsumesum(::google::protobuf::int64 value) {
  set_has_dwconsumesum();
  dwconsumesum_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RotateDailAwardInfo.dwConsumeSum)
}

// required int64 dwSilverConsume = 8;
inline bool PROTO_RotateDailAwardInfo::has_dwsilverconsume() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PROTO_RotateDailAwardInfo::set_has_dwsilverconsume() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PROTO_RotateDailAwardInfo::clear_has_dwsilverconsume() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PROTO_RotateDailAwardInfo::clear_dwsilverconsume() {
  dwsilverconsume_ = GOOGLE_LONGLONG(0);
  clear_has_dwsilverconsume();
}
inline ::google::protobuf::int64 PROTO_RotateDailAwardInfo::dwsilverconsume() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RotateDailAwardInfo.dwSilverConsume)
  return dwsilverconsume_;
}
inline void PROTO_RotateDailAwardInfo::set_dwsilverconsume(::google::protobuf::int64 value) {
  set_has_dwsilverconsume();
  dwsilverconsume_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RotateDailAwardInfo.dwSilverConsume)
}

// required int64 dwGoldConsume = 9;
inline bool PROTO_RotateDailAwardInfo::has_dwgoldconsume() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PROTO_RotateDailAwardInfo::set_has_dwgoldconsume() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PROTO_RotateDailAwardInfo::clear_has_dwgoldconsume() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PROTO_RotateDailAwardInfo::clear_dwgoldconsume() {
  dwgoldconsume_ = GOOGLE_LONGLONG(0);
  clear_has_dwgoldconsume();
}
inline ::google::protobuf::int64 PROTO_RotateDailAwardInfo::dwgoldconsume() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RotateDailAwardInfo.dwGoldConsume)
  return dwgoldconsume_;
}
inline void PROTO_RotateDailAwardInfo::set_dwgoldconsume(::google::protobuf::int64 value) {
  set_has_dwgoldconsume();
  dwgoldconsume_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RotateDailAwardInfo.dwGoldConsume)
}

// required int64 dwJewelConsume = 10;
inline bool PROTO_RotateDailAwardInfo::has_dwjewelconsume() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PROTO_RotateDailAwardInfo::set_has_dwjewelconsume() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PROTO_RotateDailAwardInfo::clear_has_dwjewelconsume() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PROTO_RotateDailAwardInfo::clear_dwjewelconsume() {
  dwjewelconsume_ = GOOGLE_LONGLONG(0);
  clear_has_dwjewelconsume();
}
inline ::google::protobuf::int64 PROTO_RotateDailAwardInfo::dwjewelconsume() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RotateDailAwardInfo.dwJewelConsume)
  return dwjewelconsume_;
}
inline void PROTO_RotateDailAwardInfo::set_dwjewelconsume(::google::protobuf::int64 value) {
  set_has_dwjewelconsume();
  dwjewelconsume_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RotateDailAwardInfo.dwJewelConsume)
}

// required int64 dwDrawScore = 11;
inline bool PROTO_RotateDailAwardInfo::has_dwdrawscore() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PROTO_RotateDailAwardInfo::set_has_dwdrawscore() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PROTO_RotateDailAwardInfo::clear_has_dwdrawscore() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PROTO_RotateDailAwardInfo::clear_dwdrawscore() {
  dwdrawscore_ = GOOGLE_LONGLONG(0);
  clear_has_dwdrawscore();
}
inline ::google::protobuf::int64 PROTO_RotateDailAwardInfo::dwdrawscore() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RotateDailAwardInfo.dwDrawScore)
  return dwdrawscore_;
}
inline void PROTO_RotateDailAwardInfo::set_dwdrawscore(::google::protobuf::int64 value) {
  set_has_dwdrawscore();
  dwdrawscore_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RotateDailAwardInfo.dwDrawScore)
}

// required int64 dwAddScore = 12;
inline bool PROTO_RotateDailAwardInfo::has_dwaddscore() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PROTO_RotateDailAwardInfo::set_has_dwaddscore() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PROTO_RotateDailAwardInfo::clear_has_dwaddscore() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PROTO_RotateDailAwardInfo::clear_dwaddscore() {
  dwaddscore_ = GOOGLE_LONGLONG(0);
  clear_has_dwaddscore();
}
inline ::google::protobuf::int64 PROTO_RotateDailAwardInfo::dwaddscore() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RotateDailAwardInfo.dwAddScore)
  return dwaddscore_;
}
inline void PROTO_RotateDailAwardInfo::set_dwaddscore(::google::protobuf::int64 value) {
  set_has_dwaddscore();
  dwaddscore_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RotateDailAwardInfo.dwAddScore)
}

// repeated int64 dwDailInfo = 13;
inline int PROTO_RotateDailAwardInfo::dwdailinfo_size() const {
  return dwdailinfo_.size();
}
inline void PROTO_RotateDailAwardInfo::clear_dwdailinfo() {
  dwdailinfo_.Clear();
}
inline ::google::protobuf::int64 PROTO_RotateDailAwardInfo::dwdailinfo(int index) const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RotateDailAwardInfo.dwDailInfo)
  return dwdailinfo_.Get(index);
}
inline void PROTO_RotateDailAwardInfo::set_dwdailinfo(int index, ::google::protobuf::int64 value) {
  dwdailinfo_.Set(index, value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RotateDailAwardInfo.dwDailInfo)
}
inline void PROTO_RotateDailAwardInfo::add_dwdailinfo(::google::protobuf::int64 value) {
  dwdailinfo_.Add(value);
  // @@protoc_insertion_point(field_add:LogonServer.PROTO_RotateDailAwardInfo.dwDailInfo)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
PROTO_RotateDailAwardInfo::dwdailinfo() const {
  // @@protoc_insertion_point(field_list:LogonServer.PROTO_RotateDailAwardInfo.dwDailInfo)
  return dwdailinfo_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
PROTO_RotateDailAwardInfo::mutable_dwdailinfo() {
  // @@protoc_insertion_point(field_mutable_list:LogonServer.PROTO_RotateDailAwardInfo.dwDailInfo)
  return &dwdailinfo_;
}

// -------------------------------------------------------------------

// PROTO_GetUserSignIn

// required int64 dwUserID = 1;
inline bool PROTO_GetUserSignIn::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_GetUserSignIn::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_GetUserSignIn::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_GetUserSignIn::clear_dwuserid() {
  dwuserid_ = GOOGLE_LONGLONG(0);
  clear_has_dwuserid();
}
inline ::google::protobuf::int64 PROTO_GetUserSignIn::dwuserid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_GetUserSignIn.dwUserID)
  return dwuserid_;
}
inline void PROTO_GetUserSignIn::set_dwuserid(::google::protobuf::int64 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_GetUserSignIn.dwUserID)
}

// -------------------------------------------------------------------

// PROTO_SetUserSignIn

// required int64 dwUserID = 1;
inline bool PROTO_SetUserSignIn::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_SetUserSignIn::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_SetUserSignIn::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_SetUserSignIn::clear_dwuserid() {
  dwuserid_ = GOOGLE_LONGLONG(0);
  clear_has_dwuserid();
}
inline ::google::protobuf::int64 PROTO_SetUserSignIn::dwuserid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_SetUserSignIn.dwUserID)
  return dwuserid_;
}
inline void PROTO_SetUserSignIn::set_dwuserid(::google::protobuf::int64 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_SetUserSignIn.dwUserID)
}

// -------------------------------------------------------------------

// PROTO_GetSignInResult

// required int32 wSignInNum = 1;
inline bool PROTO_GetSignInResult::has_wsigninnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_GetSignInResult::set_has_wsigninnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_GetSignInResult::clear_has_wsigninnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_GetSignInResult::clear_wsigninnum() {
  wsigninnum_ = 0;
  clear_has_wsigninnum();
}
inline ::google::protobuf::int32 PROTO_GetSignInResult::wsigninnum() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_GetSignInResult.wSignInNum)
  return wsigninnum_;
}
inline void PROTO_GetSignInResult::set_wsigninnum(::google::protobuf::int32 value) {
  set_has_wsigninnum();
  wsigninnum_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_GetSignInResult.wSignInNum)
}

// required int32 cbTodayIsSinIn = 2;
inline bool PROTO_GetSignInResult::has_cbtodayissinin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_GetSignInResult::set_has_cbtodayissinin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_GetSignInResult::clear_has_cbtodayissinin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_GetSignInResult::clear_cbtodayissinin() {
  cbtodayissinin_ = 0;
  clear_has_cbtodayissinin();
}
inline ::google::protobuf::int32 PROTO_GetSignInResult::cbtodayissinin() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_GetSignInResult.cbTodayIsSinIn)
  return cbtodayissinin_;
}
inline void PROTO_GetSignInResult::set_cbtodayissinin(::google::protobuf::int32 value) {
  set_has_cbtodayissinin();
  cbtodayissinin_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_GetSignInResult.cbTodayIsSinIn)
}

// required int64 dwResultCode = 3;
inline bool PROTO_GetSignInResult::has_dwresultcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PROTO_GetSignInResult::set_has_dwresultcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PROTO_GetSignInResult::clear_has_dwresultcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PROTO_GetSignInResult::clear_dwresultcode() {
  dwresultcode_ = GOOGLE_LONGLONG(0);
  clear_has_dwresultcode();
}
inline ::google::protobuf::int64 PROTO_GetSignInResult::dwresultcode() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_GetSignInResult.dwResultCode)
  return dwresultcode_;
}
inline void PROTO_GetSignInResult::set_dwresultcode(::google::protobuf::int64 value) {
  set_has_dwresultcode();
  dwresultcode_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_GetSignInResult.dwResultCode)
}

// required string szDescribeString = 4;
inline bool PROTO_GetSignInResult::has_szdescribestring() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PROTO_GetSignInResult::set_has_szdescribestring() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PROTO_GetSignInResult::clear_has_szdescribestring() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PROTO_GetSignInResult::clear_szdescribestring() {
  if (szdescribestring_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_->clear();
  }
  clear_has_szdescribestring();
}
inline const ::std::string& PROTO_GetSignInResult::szdescribestring() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_GetSignInResult.szDescribeString)
  return *szdescribestring_;
}
inline void PROTO_GetSignInResult::set_szdescribestring(const ::std::string& value) {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  szdescribestring_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_GetSignInResult.szDescribeString)
}
inline void PROTO_GetSignInResult::set_szdescribestring(const char* value) {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  szdescribestring_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_GetSignInResult.szDescribeString)
}
inline void PROTO_GetSignInResult::set_szdescribestring(const char* value, size_t size) {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  szdescribestring_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_GetSignInResult.szDescribeString)
}
inline ::std::string* PROTO_GetSignInResult::mutable_szdescribestring() {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_GetSignInResult.szDescribeString)
  return szdescribestring_;
}
inline ::std::string* PROTO_GetSignInResult::release_szdescribestring() {
  clear_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szdescribestring_;
    szdescribestring_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_GetSignInResult::set_allocated_szdescribestring(::std::string* szdescribestring) {
  if (szdescribestring_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szdescribestring_;
  }
  if (szdescribestring) {
    set_has_szdescribestring();
    szdescribestring_ = szdescribestring;
  } else {
    clear_has_szdescribestring();
    szdescribestring_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_GetSignInResult.szDescribeString)
}

// -------------------------------------------------------------------

// PROTO_ChickBindBank

// required int64 dwUserID = 1;
inline bool PROTO_ChickBindBank::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_ChickBindBank::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_ChickBindBank::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_ChickBindBank::clear_dwuserid() {
  dwuserid_ = GOOGLE_LONGLONG(0);
  clear_has_dwuserid();
}
inline ::google::protobuf::int64 PROTO_ChickBindBank::dwuserid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_ChickBindBank.dwUserID)
  return dwuserid_;
}
inline void PROTO_ChickBindBank::set_dwuserid(::google::protobuf::int64 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_ChickBindBank.dwUserID)
}

// -------------------------------------------------------------------

// PROTO_GP_BindBankCard

// required int64 dwUserID = 1;
inline bool PROTO_GP_BindBankCard::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_GP_BindBankCard::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_GP_BindBankCard::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_GP_BindBankCard::clear_dwuserid() {
  dwuserid_ = GOOGLE_LONGLONG(0);
  clear_has_dwuserid();
}
inline ::google::protobuf::int64 PROTO_GP_BindBankCard::dwuserid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_GP_BindBankCard.dwUserID)
  return dwuserid_;
}
inline void PROTO_GP_BindBankCard::set_dwuserid(::google::protobuf::int64 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_GP_BindBankCard.dwUserID)
}

// required string szBankName = 2;
inline bool PROTO_GP_BindBankCard::has_szbankname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_GP_BindBankCard::set_has_szbankname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_GP_BindBankCard::clear_has_szbankname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_GP_BindBankCard::clear_szbankname() {
  if (szbankname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szbankname_->clear();
  }
  clear_has_szbankname();
}
inline const ::std::string& PROTO_GP_BindBankCard::szbankname() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_GP_BindBankCard.szBankName)
  return *szbankname_;
}
inline void PROTO_GP_BindBankCard::set_szbankname(const ::std::string& value) {
  set_has_szbankname();
  if (szbankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szbankname_ = new ::std::string;
  }
  szbankname_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_GP_BindBankCard.szBankName)
}
inline void PROTO_GP_BindBankCard::set_szbankname(const char* value) {
  set_has_szbankname();
  if (szbankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szbankname_ = new ::std::string;
  }
  szbankname_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_GP_BindBankCard.szBankName)
}
inline void PROTO_GP_BindBankCard::set_szbankname(const char* value, size_t size) {
  set_has_szbankname();
  if (szbankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szbankname_ = new ::std::string;
  }
  szbankname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_GP_BindBankCard.szBankName)
}
inline ::std::string* PROTO_GP_BindBankCard::mutable_szbankname() {
  set_has_szbankname();
  if (szbankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szbankname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_GP_BindBankCard.szBankName)
  return szbankname_;
}
inline ::std::string* PROTO_GP_BindBankCard::release_szbankname() {
  clear_has_szbankname();
  if (szbankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szbankname_;
    szbankname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_GP_BindBankCard::set_allocated_szbankname(::std::string* szbankname) {
  if (szbankname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szbankname_;
  }
  if (szbankname) {
    set_has_szbankname();
    szbankname_ = szbankname;
  } else {
    clear_has_szbankname();
    szbankname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_GP_BindBankCard.szBankName)
}

// required string szBankCardNum = 3;
inline bool PROTO_GP_BindBankCard::has_szbankcardnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PROTO_GP_BindBankCard::set_has_szbankcardnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PROTO_GP_BindBankCard::clear_has_szbankcardnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PROTO_GP_BindBankCard::clear_szbankcardnum() {
  if (szbankcardnum_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szbankcardnum_->clear();
  }
  clear_has_szbankcardnum();
}
inline const ::std::string& PROTO_GP_BindBankCard::szbankcardnum() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_GP_BindBankCard.szBankCardNum)
  return *szbankcardnum_;
}
inline void PROTO_GP_BindBankCard::set_szbankcardnum(const ::std::string& value) {
  set_has_szbankcardnum();
  if (szbankcardnum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szbankcardnum_ = new ::std::string;
  }
  szbankcardnum_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_GP_BindBankCard.szBankCardNum)
}
inline void PROTO_GP_BindBankCard::set_szbankcardnum(const char* value) {
  set_has_szbankcardnum();
  if (szbankcardnum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szbankcardnum_ = new ::std::string;
  }
  szbankcardnum_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_GP_BindBankCard.szBankCardNum)
}
inline void PROTO_GP_BindBankCard::set_szbankcardnum(const char* value, size_t size) {
  set_has_szbankcardnum();
  if (szbankcardnum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szbankcardnum_ = new ::std::string;
  }
  szbankcardnum_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_GP_BindBankCard.szBankCardNum)
}
inline ::std::string* PROTO_GP_BindBankCard::mutable_szbankcardnum() {
  set_has_szbankcardnum();
  if (szbankcardnum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szbankcardnum_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_GP_BindBankCard.szBankCardNum)
  return szbankcardnum_;
}
inline ::std::string* PROTO_GP_BindBankCard::release_szbankcardnum() {
  clear_has_szbankcardnum();
  if (szbankcardnum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szbankcardnum_;
    szbankcardnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_GP_BindBankCard::set_allocated_szbankcardnum(::std::string* szbankcardnum) {
  if (szbankcardnum_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szbankcardnum_;
  }
  if (szbankcardnum) {
    set_has_szbankcardnum();
    szbankcardnum_ = szbankcardnum;
  } else {
    clear_has_szbankcardnum();
    szbankcardnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_GP_BindBankCard.szBankCardNum)
}

// required string szAccountHolder = 4;
inline bool PROTO_GP_BindBankCard::has_szaccountholder() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PROTO_GP_BindBankCard::set_has_szaccountholder() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PROTO_GP_BindBankCard::clear_has_szaccountholder() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PROTO_GP_BindBankCard::clear_szaccountholder() {
  if (szaccountholder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccountholder_->clear();
  }
  clear_has_szaccountholder();
}
inline const ::std::string& PROTO_GP_BindBankCard::szaccountholder() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_GP_BindBankCard.szAccountHolder)
  return *szaccountholder_;
}
inline void PROTO_GP_BindBankCard::set_szaccountholder(const ::std::string& value) {
  set_has_szaccountholder();
  if (szaccountholder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccountholder_ = new ::std::string;
  }
  szaccountholder_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_GP_BindBankCard.szAccountHolder)
}
inline void PROTO_GP_BindBankCard::set_szaccountholder(const char* value) {
  set_has_szaccountholder();
  if (szaccountholder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccountholder_ = new ::std::string;
  }
  szaccountholder_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_GP_BindBankCard.szAccountHolder)
}
inline void PROTO_GP_BindBankCard::set_szaccountholder(const char* value, size_t size) {
  set_has_szaccountholder();
  if (szaccountholder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccountholder_ = new ::std::string;
  }
  szaccountholder_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_GP_BindBankCard.szAccountHolder)
}
inline ::std::string* PROTO_GP_BindBankCard::mutable_szaccountholder() {
  set_has_szaccountholder();
  if (szaccountholder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccountholder_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_GP_BindBankCard.szAccountHolder)
  return szaccountholder_;
}
inline ::std::string* PROTO_GP_BindBankCard::release_szaccountholder() {
  clear_has_szaccountholder();
  if (szaccountholder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szaccountholder_;
    szaccountholder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_GP_BindBankCard::set_allocated_szaccountholder(::std::string* szaccountholder) {
  if (szaccountholder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szaccountholder_;
  }
  if (szaccountholder) {
    set_has_szaccountholder();
    szaccountholder_ = szaccountholder;
  } else {
    clear_has_szaccountholder();
    szaccountholder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_GP_BindBankCard.szAccountHolder)
}

// -------------------------------------------------------------------

// PROTO_ChickBindZFB

// required int64 dwUserID = 1;
inline bool PROTO_ChickBindZFB::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_ChickBindZFB::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_ChickBindZFB::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_ChickBindZFB::clear_dwuserid() {
  dwuserid_ = GOOGLE_LONGLONG(0);
  clear_has_dwuserid();
}
inline ::google::protobuf::int64 PROTO_ChickBindZFB::dwuserid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_ChickBindZFB.dwUserID)
  return dwuserid_;
}
inline void PROTO_ChickBindZFB::set_dwuserid(::google::protobuf::int64 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_ChickBindZFB.dwUserID)
}

// -------------------------------------------------------------------

// PROTO_BindZFB

// required int64 dwUserID = 1;
inline bool PROTO_BindZFB::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_BindZFB::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_BindZFB::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_BindZFB::clear_dwuserid() {
  dwuserid_ = GOOGLE_LONGLONG(0);
  clear_has_dwuserid();
}
inline ::google::protobuf::int64 PROTO_BindZFB::dwuserid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_BindZFB.dwUserID)
  return dwuserid_;
}
inline void PROTO_BindZFB::set_dwuserid(::google::protobuf::int64 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_BindZFB.dwUserID)
}

// required string szZFBName = 2;
inline bool PROTO_BindZFB::has_szzfbname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_BindZFB::set_has_szzfbname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_BindZFB::clear_has_szzfbname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_BindZFB::clear_szzfbname() {
  if (szzfbname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szzfbname_->clear();
  }
  clear_has_szzfbname();
}
inline const ::std::string& PROTO_BindZFB::szzfbname() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_BindZFB.szZFBName)
  return *szzfbname_;
}
inline void PROTO_BindZFB::set_szzfbname(const ::std::string& value) {
  set_has_szzfbname();
  if (szzfbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szzfbname_ = new ::std::string;
  }
  szzfbname_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_BindZFB.szZFBName)
}
inline void PROTO_BindZFB::set_szzfbname(const char* value) {
  set_has_szzfbname();
  if (szzfbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szzfbname_ = new ::std::string;
  }
  szzfbname_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_BindZFB.szZFBName)
}
inline void PROTO_BindZFB::set_szzfbname(const char* value, size_t size) {
  set_has_szzfbname();
  if (szzfbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szzfbname_ = new ::std::string;
  }
  szzfbname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_BindZFB.szZFBName)
}
inline ::std::string* PROTO_BindZFB::mutable_szzfbname() {
  set_has_szzfbname();
  if (szzfbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szzfbname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_BindZFB.szZFBName)
  return szzfbname_;
}
inline ::std::string* PROTO_BindZFB::release_szzfbname() {
  clear_has_szzfbname();
  if (szzfbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szzfbname_;
    szzfbname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_BindZFB::set_allocated_szzfbname(::std::string* szzfbname) {
  if (szzfbname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szzfbname_;
  }
  if (szzfbname) {
    set_has_szzfbname();
    szzfbname_ = szzfbname;
  } else {
    clear_has_szzfbname();
    szzfbname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_BindZFB.szZFBName)
}

// required string szNickName = 3;
inline bool PROTO_BindZFB::has_sznickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PROTO_BindZFB::set_has_sznickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PROTO_BindZFB::clear_has_sznickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PROTO_BindZFB::clear_sznickname() {
  if (sznickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_->clear();
  }
  clear_has_sznickname();
}
inline const ::std::string& PROTO_BindZFB::sznickname() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_BindZFB.szNickName)
  return *sznickname_;
}
inline void PROTO_BindZFB::set_sznickname(const ::std::string& value) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_BindZFB.szNickName)
}
inline void PROTO_BindZFB::set_sznickname(const char* value) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_BindZFB.szNickName)
}
inline void PROTO_BindZFB::set_sznickname(const char* value, size_t size) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_BindZFB.szNickName)
}
inline ::std::string* PROTO_BindZFB::mutable_sznickname() {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_BindZFB.szNickName)
  return sznickname_;
}
inline ::std::string* PROTO_BindZFB::release_sznickname() {
  clear_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sznickname_;
    sznickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_BindZFB::set_allocated_sznickname(::std::string* sznickname) {
  if (sznickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sznickname_;
  }
  if (sznickname) {
    set_has_sznickname();
    sznickname_ = sznickname;
  } else {
    clear_has_sznickname();
    sznickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_BindZFB.szNickName)
}

// -------------------------------------------------------------------

// PROTO_BindBankInfo

// required int64 wSubCommandID = 1;
inline bool PROTO_BindBankInfo::has_wsubcommandid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_BindBankInfo::set_has_wsubcommandid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_BindBankInfo::clear_has_wsubcommandid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_BindBankInfo::clear_wsubcommandid() {
  wsubcommandid_ = GOOGLE_LONGLONG(0);
  clear_has_wsubcommandid();
}
inline ::google::protobuf::int64 PROTO_BindBankInfo::wsubcommandid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_BindBankInfo.wSubCommandID)
  return wsubcommandid_;
}
inline void PROTO_BindBankInfo::set_wsubcommandid(::google::protobuf::int64 value) {
  set_has_wsubcommandid();
  wsubcommandid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_BindBankInfo.wSubCommandID)
}

// required int64 dwResultCode = 2;
inline bool PROTO_BindBankInfo::has_dwresultcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_BindBankInfo::set_has_dwresultcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_BindBankInfo::clear_has_dwresultcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_BindBankInfo::clear_dwresultcode() {
  dwresultcode_ = GOOGLE_LONGLONG(0);
  clear_has_dwresultcode();
}
inline ::google::protobuf::int64 PROTO_BindBankInfo::dwresultcode() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_BindBankInfo.dwResultCode)
  return dwresultcode_;
}
inline void PROTO_BindBankInfo::set_dwresultcode(::google::protobuf::int64 value) {
  set_has_dwresultcode();
  dwresultcode_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_BindBankInfo.dwResultCode)
}

// required string szDescribeString = 3;
inline bool PROTO_BindBankInfo::has_szdescribestring() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PROTO_BindBankInfo::set_has_szdescribestring() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PROTO_BindBankInfo::clear_has_szdescribestring() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PROTO_BindBankInfo::clear_szdescribestring() {
  if (szdescribestring_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_->clear();
  }
  clear_has_szdescribestring();
}
inline const ::std::string& PROTO_BindBankInfo::szdescribestring() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_BindBankInfo.szDescribeString)
  return *szdescribestring_;
}
inline void PROTO_BindBankInfo::set_szdescribestring(const ::std::string& value) {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  szdescribestring_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_BindBankInfo.szDescribeString)
}
inline void PROTO_BindBankInfo::set_szdescribestring(const char* value) {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  szdescribestring_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_BindBankInfo.szDescribeString)
}
inline void PROTO_BindBankInfo::set_szdescribestring(const char* value, size_t size) {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  szdescribestring_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_BindBankInfo.szDescribeString)
}
inline ::std::string* PROTO_BindBankInfo::mutable_szdescribestring() {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_BindBankInfo.szDescribeString)
  return szdescribestring_;
}
inline ::std::string* PROTO_BindBankInfo::release_szdescribestring() {
  clear_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szdescribestring_;
    szdescribestring_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_BindBankInfo::set_allocated_szdescribestring(::std::string* szdescribestring) {
  if (szdescribestring_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szdescribestring_;
  }
  if (szdescribestring) {
    set_has_szdescribestring();
    szdescribestring_ = szdescribestring;
  } else {
    clear_has_szdescribestring();
    szdescribestring_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_BindBankInfo.szDescribeString)
}

// required string szBankName = 4;
inline bool PROTO_BindBankInfo::has_szbankname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PROTO_BindBankInfo::set_has_szbankname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PROTO_BindBankInfo::clear_has_szbankname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PROTO_BindBankInfo::clear_szbankname() {
  if (szbankname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szbankname_->clear();
  }
  clear_has_szbankname();
}
inline const ::std::string& PROTO_BindBankInfo::szbankname() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_BindBankInfo.szBankName)
  return *szbankname_;
}
inline void PROTO_BindBankInfo::set_szbankname(const ::std::string& value) {
  set_has_szbankname();
  if (szbankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szbankname_ = new ::std::string;
  }
  szbankname_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_BindBankInfo.szBankName)
}
inline void PROTO_BindBankInfo::set_szbankname(const char* value) {
  set_has_szbankname();
  if (szbankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szbankname_ = new ::std::string;
  }
  szbankname_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_BindBankInfo.szBankName)
}
inline void PROTO_BindBankInfo::set_szbankname(const char* value, size_t size) {
  set_has_szbankname();
  if (szbankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szbankname_ = new ::std::string;
  }
  szbankname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_BindBankInfo.szBankName)
}
inline ::std::string* PROTO_BindBankInfo::mutable_szbankname() {
  set_has_szbankname();
  if (szbankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szbankname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_BindBankInfo.szBankName)
  return szbankname_;
}
inline ::std::string* PROTO_BindBankInfo::release_szbankname() {
  clear_has_szbankname();
  if (szbankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szbankname_;
    szbankname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_BindBankInfo::set_allocated_szbankname(::std::string* szbankname) {
  if (szbankname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szbankname_;
  }
  if (szbankname) {
    set_has_szbankname();
    szbankname_ = szbankname;
  } else {
    clear_has_szbankname();
    szbankname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_BindBankInfo.szBankName)
}

// required string szBankCardNum = 5;
inline bool PROTO_BindBankInfo::has_szbankcardnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PROTO_BindBankInfo::set_has_szbankcardnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PROTO_BindBankInfo::clear_has_szbankcardnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PROTO_BindBankInfo::clear_szbankcardnum() {
  if (szbankcardnum_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szbankcardnum_->clear();
  }
  clear_has_szbankcardnum();
}
inline const ::std::string& PROTO_BindBankInfo::szbankcardnum() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_BindBankInfo.szBankCardNum)
  return *szbankcardnum_;
}
inline void PROTO_BindBankInfo::set_szbankcardnum(const ::std::string& value) {
  set_has_szbankcardnum();
  if (szbankcardnum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szbankcardnum_ = new ::std::string;
  }
  szbankcardnum_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_BindBankInfo.szBankCardNum)
}
inline void PROTO_BindBankInfo::set_szbankcardnum(const char* value) {
  set_has_szbankcardnum();
  if (szbankcardnum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szbankcardnum_ = new ::std::string;
  }
  szbankcardnum_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_BindBankInfo.szBankCardNum)
}
inline void PROTO_BindBankInfo::set_szbankcardnum(const char* value, size_t size) {
  set_has_szbankcardnum();
  if (szbankcardnum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szbankcardnum_ = new ::std::string;
  }
  szbankcardnum_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_BindBankInfo.szBankCardNum)
}
inline ::std::string* PROTO_BindBankInfo::mutable_szbankcardnum() {
  set_has_szbankcardnum();
  if (szbankcardnum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szbankcardnum_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_BindBankInfo.szBankCardNum)
  return szbankcardnum_;
}
inline ::std::string* PROTO_BindBankInfo::release_szbankcardnum() {
  clear_has_szbankcardnum();
  if (szbankcardnum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szbankcardnum_;
    szbankcardnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_BindBankInfo::set_allocated_szbankcardnum(::std::string* szbankcardnum) {
  if (szbankcardnum_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szbankcardnum_;
  }
  if (szbankcardnum) {
    set_has_szbankcardnum();
    szbankcardnum_ = szbankcardnum;
  } else {
    clear_has_szbankcardnum();
    szbankcardnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_BindBankInfo.szBankCardNum)
}

// required string szAccountHolder = 6;
inline bool PROTO_BindBankInfo::has_szaccountholder() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PROTO_BindBankInfo::set_has_szaccountholder() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PROTO_BindBankInfo::clear_has_szaccountholder() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PROTO_BindBankInfo::clear_szaccountholder() {
  if (szaccountholder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccountholder_->clear();
  }
  clear_has_szaccountholder();
}
inline const ::std::string& PROTO_BindBankInfo::szaccountholder() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_BindBankInfo.szAccountHolder)
  return *szaccountholder_;
}
inline void PROTO_BindBankInfo::set_szaccountholder(const ::std::string& value) {
  set_has_szaccountholder();
  if (szaccountholder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccountholder_ = new ::std::string;
  }
  szaccountholder_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_BindBankInfo.szAccountHolder)
}
inline void PROTO_BindBankInfo::set_szaccountholder(const char* value) {
  set_has_szaccountholder();
  if (szaccountholder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccountholder_ = new ::std::string;
  }
  szaccountholder_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_BindBankInfo.szAccountHolder)
}
inline void PROTO_BindBankInfo::set_szaccountholder(const char* value, size_t size) {
  set_has_szaccountholder();
  if (szaccountholder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccountholder_ = new ::std::string;
  }
  szaccountholder_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_BindBankInfo.szAccountHolder)
}
inline ::std::string* PROTO_BindBankInfo::mutable_szaccountholder() {
  set_has_szaccountholder();
  if (szaccountholder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szaccountholder_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_BindBankInfo.szAccountHolder)
  return szaccountholder_;
}
inline ::std::string* PROTO_BindBankInfo::release_szaccountholder() {
  clear_has_szaccountholder();
  if (szaccountholder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szaccountholder_;
    szaccountholder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_BindBankInfo::set_allocated_szaccountholder(::std::string* szaccountholder) {
  if (szaccountholder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szaccountholder_;
  }
  if (szaccountholder) {
    set_has_szaccountholder();
    szaccountholder_ = szaccountholder;
  } else {
    clear_has_szaccountholder();
    szaccountholder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_BindBankInfo.szAccountHolder)
}

// -------------------------------------------------------------------

// PROTO_BindZFBInfo

// required int64 wSubCommandID = 1;
inline bool PROTO_BindZFBInfo::has_wsubcommandid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_BindZFBInfo::set_has_wsubcommandid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_BindZFBInfo::clear_has_wsubcommandid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_BindZFBInfo::clear_wsubcommandid() {
  wsubcommandid_ = GOOGLE_LONGLONG(0);
  clear_has_wsubcommandid();
}
inline ::google::protobuf::int64 PROTO_BindZFBInfo::wsubcommandid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_BindZFBInfo.wSubCommandID)
  return wsubcommandid_;
}
inline void PROTO_BindZFBInfo::set_wsubcommandid(::google::protobuf::int64 value) {
  set_has_wsubcommandid();
  wsubcommandid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_BindZFBInfo.wSubCommandID)
}

// required int64 dwResultCode = 2;
inline bool PROTO_BindZFBInfo::has_dwresultcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_BindZFBInfo::set_has_dwresultcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_BindZFBInfo::clear_has_dwresultcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_BindZFBInfo::clear_dwresultcode() {
  dwresultcode_ = GOOGLE_LONGLONG(0);
  clear_has_dwresultcode();
}
inline ::google::protobuf::int64 PROTO_BindZFBInfo::dwresultcode() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_BindZFBInfo.dwResultCode)
  return dwresultcode_;
}
inline void PROTO_BindZFBInfo::set_dwresultcode(::google::protobuf::int64 value) {
  set_has_dwresultcode();
  dwresultcode_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_BindZFBInfo.dwResultCode)
}

// required string szDescribeString = 3;
inline bool PROTO_BindZFBInfo::has_szdescribestring() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PROTO_BindZFBInfo::set_has_szdescribestring() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PROTO_BindZFBInfo::clear_has_szdescribestring() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PROTO_BindZFBInfo::clear_szdescribestring() {
  if (szdescribestring_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_->clear();
  }
  clear_has_szdescribestring();
}
inline const ::std::string& PROTO_BindZFBInfo::szdescribestring() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_BindZFBInfo.szDescribeString)
  return *szdescribestring_;
}
inline void PROTO_BindZFBInfo::set_szdescribestring(const ::std::string& value) {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  szdescribestring_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_BindZFBInfo.szDescribeString)
}
inline void PROTO_BindZFBInfo::set_szdescribestring(const char* value) {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  szdescribestring_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_BindZFBInfo.szDescribeString)
}
inline void PROTO_BindZFBInfo::set_szdescribestring(const char* value, size_t size) {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  szdescribestring_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_BindZFBInfo.szDescribeString)
}
inline ::std::string* PROTO_BindZFBInfo::mutable_szdescribestring() {
  set_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szdescribestring_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_BindZFBInfo.szDescribeString)
  return szdescribestring_;
}
inline ::std::string* PROTO_BindZFBInfo::release_szdescribestring() {
  clear_has_szdescribestring();
  if (szdescribestring_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szdescribestring_;
    szdescribestring_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_BindZFBInfo::set_allocated_szdescribestring(::std::string* szdescribestring) {
  if (szdescribestring_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szdescribestring_;
  }
  if (szdescribestring) {
    set_has_szdescribestring();
    szdescribestring_ = szdescribestring;
  } else {
    clear_has_szdescribestring();
    szdescribestring_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_BindZFBInfo.szDescribeString)
}

// required string szZFBName = 4;
inline bool PROTO_BindZFBInfo::has_szzfbname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PROTO_BindZFBInfo::set_has_szzfbname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PROTO_BindZFBInfo::clear_has_szzfbname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PROTO_BindZFBInfo::clear_szzfbname() {
  if (szzfbname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szzfbname_->clear();
  }
  clear_has_szzfbname();
}
inline const ::std::string& PROTO_BindZFBInfo::szzfbname() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_BindZFBInfo.szZFBName)
  return *szzfbname_;
}
inline void PROTO_BindZFBInfo::set_szzfbname(const ::std::string& value) {
  set_has_szzfbname();
  if (szzfbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szzfbname_ = new ::std::string;
  }
  szzfbname_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_BindZFBInfo.szZFBName)
}
inline void PROTO_BindZFBInfo::set_szzfbname(const char* value) {
  set_has_szzfbname();
  if (szzfbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szzfbname_ = new ::std::string;
  }
  szzfbname_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_BindZFBInfo.szZFBName)
}
inline void PROTO_BindZFBInfo::set_szzfbname(const char* value, size_t size) {
  set_has_szzfbname();
  if (szzfbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szzfbname_ = new ::std::string;
  }
  szzfbname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_BindZFBInfo.szZFBName)
}
inline ::std::string* PROTO_BindZFBInfo::mutable_szzfbname() {
  set_has_szzfbname();
  if (szzfbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szzfbname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_BindZFBInfo.szZFBName)
  return szzfbname_;
}
inline ::std::string* PROTO_BindZFBInfo::release_szzfbname() {
  clear_has_szzfbname();
  if (szzfbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szzfbname_;
    szzfbname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_BindZFBInfo::set_allocated_szzfbname(::std::string* szzfbname) {
  if (szzfbname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szzfbname_;
  }
  if (szzfbname) {
    set_has_szzfbname();
    szzfbname_ = szzfbname;
  } else {
    clear_has_szzfbname();
    szzfbname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_BindZFBInfo.szZFBName)
}

// required string szNickName = 5;
inline bool PROTO_BindZFBInfo::has_sznickname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PROTO_BindZFBInfo::set_has_sznickname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PROTO_BindZFBInfo::clear_has_sznickname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PROTO_BindZFBInfo::clear_sznickname() {
  if (sznickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_->clear();
  }
  clear_has_sznickname();
}
inline const ::std::string& PROTO_BindZFBInfo::sznickname() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_BindZFBInfo.szNickName)
  return *sznickname_;
}
inline void PROTO_BindZFBInfo::set_sznickname(const ::std::string& value) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_BindZFBInfo.szNickName)
}
inline void PROTO_BindZFBInfo::set_sznickname(const char* value) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.PROTO_BindZFBInfo.szNickName)
}
inline void PROTO_BindZFBInfo::set_sznickname(const char* value, size_t size) {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  sznickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.PROTO_BindZFBInfo.szNickName)
}
inline ::std::string* PROTO_BindZFBInfo::mutable_sznickname() {
  set_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sznickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_BindZFBInfo.szNickName)
  return sznickname_;
}
inline ::std::string* PROTO_BindZFBInfo::release_sznickname() {
  clear_has_sznickname();
  if (sznickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sznickname_;
    sznickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PROTO_BindZFBInfo::set_allocated_sznickname(::std::string* sznickname) {
  if (sznickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sznickname_;
  }
  if (sznickname) {
    set_has_sznickname();
    sznickname_ = sznickname;
  } else {
    clear_has_sznickname();
    sznickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.PROTO_BindZFBInfo.szNickName)
}

// -------------------------------------------------------------------

// PROTO_RequestMail

// required int64 dwUserID = 2;
inline bool PROTO_RequestMail::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_RequestMail::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_RequestMail::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_RequestMail::clear_dwuserid() {
  dwuserid_ = GOOGLE_LONGLONG(0);
  clear_has_dwuserid();
}
inline ::google::protobuf::int64 PROTO_RequestMail::dwuserid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RequestMail.dwUserID)
  return dwuserid_;
}
inline void PROTO_RequestMail::set_dwuserid(::google::protobuf::int64 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RequestMail.dwUserID)
}

// -------------------------------------------------------------------

// PROTO_ReadDeleteMail

// required int64 dwUserID = 2;
inline bool PROTO_ReadDeleteMail::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_ReadDeleteMail::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_ReadDeleteMail::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_ReadDeleteMail::clear_dwuserid() {
  dwuserid_ = GOOGLE_LONGLONG(0);
  clear_has_dwuserid();
}
inline ::google::protobuf::int64 PROTO_ReadDeleteMail::dwuserid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_ReadDeleteMail.dwUserID)
  return dwuserid_;
}
inline void PROTO_ReadDeleteMail::set_dwuserid(::google::protobuf::int64 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_ReadDeleteMail.dwUserID)
}

// required int64 dwOpenType = 3;
inline bool PROTO_ReadDeleteMail::has_dwopentype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_ReadDeleteMail::set_has_dwopentype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_ReadDeleteMail::clear_has_dwopentype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_ReadDeleteMail::clear_dwopentype() {
  dwopentype_ = GOOGLE_LONGLONG(0);
  clear_has_dwopentype();
}
inline ::google::protobuf::int64 PROTO_ReadDeleteMail::dwopentype() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_ReadDeleteMail.dwOpenType)
  return dwopentype_;
}
inline void PROTO_ReadDeleteMail::set_dwopentype(::google::protobuf::int64 value) {
  set_has_dwopentype();
  dwopentype_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_ReadDeleteMail.dwOpenType)
}

// required int64 dwMailIndex = 4;
inline bool PROTO_ReadDeleteMail::has_dwmailindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PROTO_ReadDeleteMail::set_has_dwmailindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PROTO_ReadDeleteMail::clear_has_dwmailindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PROTO_ReadDeleteMail::clear_dwmailindex() {
  dwmailindex_ = GOOGLE_LONGLONG(0);
  clear_has_dwmailindex();
}
inline ::google::protobuf::int64 PROTO_ReadDeleteMail::dwmailindex() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_ReadDeleteMail.dwMailIndex)
  return dwmailindex_;
}
inline void PROTO_ReadDeleteMail::set_dwmailindex(::google::protobuf::int64 value) {
  set_has_dwmailindex();
  dwmailindex_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_ReadDeleteMail.dwMailIndex)
}

// -------------------------------------------------------------------

// ProtoRequestMail

// required int64 dwMailIndex = 1;
inline bool ProtoRequestMail::has_dwmailindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRequestMail::set_has_dwmailindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRequestMail::clear_has_dwmailindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRequestMail::clear_dwmailindex() {
  dwmailindex_ = GOOGLE_LONGLONG(0);
  clear_has_dwmailindex();
}
inline ::google::protobuf::int64 ProtoRequestMail::dwmailindex() const {
  // @@protoc_insertion_point(field_get:LogonServer.ProtoRequestMail.dwMailIndex)
  return dwmailindex_;
}
inline void ProtoRequestMail::set_dwmailindex(::google::protobuf::int64 value) {
  set_has_dwmailindex();
  dwmailindex_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.ProtoRequestMail.dwMailIndex)
}

// required string szMailContent = 2;
inline bool ProtoRequestMail::has_szmailcontent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoRequestMail::set_has_szmailcontent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoRequestMail::clear_has_szmailcontent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoRequestMail::clear_szmailcontent() {
  if (szmailcontent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmailcontent_->clear();
  }
  clear_has_szmailcontent();
}
inline const ::std::string& ProtoRequestMail::szmailcontent() const {
  // @@protoc_insertion_point(field_get:LogonServer.ProtoRequestMail.szMailContent)
  return *szmailcontent_;
}
inline void ProtoRequestMail::set_szmailcontent(const ::std::string& value) {
  set_has_szmailcontent();
  if (szmailcontent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmailcontent_ = new ::std::string;
  }
  szmailcontent_->assign(value);
  // @@protoc_insertion_point(field_set:LogonServer.ProtoRequestMail.szMailContent)
}
inline void ProtoRequestMail::set_szmailcontent(const char* value) {
  set_has_szmailcontent();
  if (szmailcontent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmailcontent_ = new ::std::string;
  }
  szmailcontent_->assign(value);
  // @@protoc_insertion_point(field_set_char:LogonServer.ProtoRequestMail.szMailContent)
}
inline void ProtoRequestMail::set_szmailcontent(const char* value, size_t size) {
  set_has_szmailcontent();
  if (szmailcontent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmailcontent_ = new ::std::string;
  }
  szmailcontent_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LogonServer.ProtoRequestMail.szMailContent)
}
inline ::std::string* ProtoRequestMail::mutable_szmailcontent() {
  set_has_szmailcontent();
  if (szmailcontent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmailcontent_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:LogonServer.ProtoRequestMail.szMailContent)
  return szmailcontent_;
}
inline ::std::string* ProtoRequestMail::release_szmailcontent() {
  clear_has_szmailcontent();
  if (szmailcontent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szmailcontent_;
    szmailcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ProtoRequestMail::set_allocated_szmailcontent(::std::string* szmailcontent) {
  if (szmailcontent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szmailcontent_;
  }
  if (szmailcontent) {
    set_has_szmailcontent();
    szmailcontent_ = szmailcontent;
  } else {
    clear_has_szmailcontent();
    szmailcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:LogonServer.ProtoRequestMail.szMailContent)
}

// -------------------------------------------------------------------

// PROTO_RequestMailToal

// required int64 dwUserID = 1;
inline bool PROTO_RequestMailToal::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_RequestMailToal::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_RequestMailToal::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_RequestMailToal::clear_dwuserid() {
  dwuserid_ = GOOGLE_LONGLONG(0);
  clear_has_dwuserid();
}
inline ::google::protobuf::int64 PROTO_RequestMailToal::dwuserid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RequestMailToal.dwUserID)
  return dwuserid_;
}
inline void PROTO_RequestMailToal::set_dwuserid(::google::protobuf::int64 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_RequestMailToal.dwUserID)
}

// repeated .LogonServer.ProtoRequestMail stRequestMail = 2;
inline int PROTO_RequestMailToal::strequestmail_size() const {
  return strequestmail_.size();
}
inline void PROTO_RequestMailToal::clear_strequestmail() {
  strequestmail_.Clear();
}
inline const ::LogonServer::ProtoRequestMail& PROTO_RequestMailToal::strequestmail(int index) const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_RequestMailToal.stRequestMail)
  return strequestmail_.Get(index);
}
inline ::LogonServer::ProtoRequestMail* PROTO_RequestMailToal::mutable_strequestmail(int index) {
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_RequestMailToal.stRequestMail)
  return strequestmail_.Mutable(index);
}
inline ::LogonServer::ProtoRequestMail* PROTO_RequestMailToal::add_strequestmail() {
  // @@protoc_insertion_point(field_add:LogonServer.PROTO_RequestMailToal.stRequestMail)
  return strequestmail_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::LogonServer::ProtoRequestMail >&
PROTO_RequestMailToal::strequestmail() const {
  // @@protoc_insertion_point(field_list:LogonServer.PROTO_RequestMailToal.stRequestMail)
  return strequestmail_;
}
inline ::google::protobuf::RepeatedPtrField< ::LogonServer::ProtoRequestMail >*
PROTO_RequestMailToal::mutable_strequestmail() {
  // @@protoc_insertion_point(field_mutable_list:LogonServer.PROTO_RequestMailToal.stRequestMail)
  return &strequestmail_;
}

// -------------------------------------------------------------------

// PROTO_ReadDeleteMailToal

// required int64 dwUserID = 1;
inline bool PROTO_ReadDeleteMailToal::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PROTO_ReadDeleteMailToal::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PROTO_ReadDeleteMailToal::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PROTO_ReadDeleteMailToal::clear_dwuserid() {
  dwuserid_ = GOOGLE_LONGLONG(0);
  clear_has_dwuserid();
}
inline ::google::protobuf::int64 PROTO_ReadDeleteMailToal::dwuserid() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_ReadDeleteMailToal.dwUserID)
  return dwuserid_;
}
inline void PROTO_ReadDeleteMailToal::set_dwuserid(::google::protobuf::int64 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_ReadDeleteMailToal.dwUserID)
}

// required int64 dwOpenType = 2;
inline bool PROTO_ReadDeleteMailToal::has_dwopentype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PROTO_ReadDeleteMailToal::set_has_dwopentype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PROTO_ReadDeleteMailToal::clear_has_dwopentype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PROTO_ReadDeleteMailToal::clear_dwopentype() {
  dwopentype_ = GOOGLE_LONGLONG(0);
  clear_has_dwopentype();
}
inline ::google::protobuf::int64 PROTO_ReadDeleteMailToal::dwopentype() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_ReadDeleteMailToal.dwOpenType)
  return dwopentype_;
}
inline void PROTO_ReadDeleteMailToal::set_dwopentype(::google::protobuf::int64 value) {
  set_has_dwopentype();
  dwopentype_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_ReadDeleteMailToal.dwOpenType)
}

// required int64 dwResultCode = 3;
inline bool PROTO_ReadDeleteMailToal::has_dwresultcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PROTO_ReadDeleteMailToal::set_has_dwresultcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PROTO_ReadDeleteMailToal::clear_has_dwresultcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PROTO_ReadDeleteMailToal::clear_dwresultcode() {
  dwresultcode_ = GOOGLE_LONGLONG(0);
  clear_has_dwresultcode();
}
inline ::google::protobuf::int64 PROTO_ReadDeleteMailToal::dwresultcode() const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_ReadDeleteMailToal.dwResultCode)
  return dwresultcode_;
}
inline void PROTO_ReadDeleteMailToal::set_dwresultcode(::google::protobuf::int64 value) {
  set_has_dwresultcode();
  dwresultcode_ = value;
  // @@protoc_insertion_point(field_set:LogonServer.PROTO_ReadDeleteMailToal.dwResultCode)
}

// repeated .LogonServer.ProtoRequestMail stRequestMail = 4;
inline int PROTO_ReadDeleteMailToal::strequestmail_size() const {
  return strequestmail_.size();
}
inline void PROTO_ReadDeleteMailToal::clear_strequestmail() {
  strequestmail_.Clear();
}
inline const ::LogonServer::ProtoRequestMail& PROTO_ReadDeleteMailToal::strequestmail(int index) const {
  // @@protoc_insertion_point(field_get:LogonServer.PROTO_ReadDeleteMailToal.stRequestMail)
  return strequestmail_.Get(index);
}
inline ::LogonServer::ProtoRequestMail* PROTO_ReadDeleteMailToal::mutable_strequestmail(int index) {
  // @@protoc_insertion_point(field_mutable:LogonServer.PROTO_ReadDeleteMailToal.stRequestMail)
  return strequestmail_.Mutable(index);
}
inline ::LogonServer::ProtoRequestMail* PROTO_ReadDeleteMailToal::add_strequestmail() {
  // @@protoc_insertion_point(field_add:LogonServer.PROTO_ReadDeleteMailToal.stRequestMail)
  return strequestmail_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::LogonServer::ProtoRequestMail >&
PROTO_ReadDeleteMailToal::strequestmail() const {
  // @@protoc_insertion_point(field_list:LogonServer.PROTO_ReadDeleteMailToal.stRequestMail)
  return strequestmail_;
}
inline ::google::protobuf::RepeatedPtrField< ::LogonServer::ProtoRequestMail >*
PROTO_ReadDeleteMailToal::mutable_strequestmail() {
  // @@protoc_insertion_point(field_mutable_list:LogonServer.PROTO_ReadDeleteMailToal.stRequestMail)
  return &strequestmail_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace LogonServer

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_LogonServer_2eproto__INCLUDED
