package GameServer;

option optimize_for = LITE_RUNTIME;


enum enumUserStatus
{
  enumUserStatus_US_NULL=0;				//没有状态
  enumUserStatus_US_FREE=1;				//站立状态
  enumUserStatus_US_SIT=2;				//坐下状态
  enumUserStatus_US_READY=3;			//同意状态
  enumUserStatus_US_LOOKON=4;			//旁观状态
  enumUserStatus_US_PLAYING=5;			//游戏状态
  enumUserStatus_US_OFFLINE=6;			//断线状态
}

message tagUserStatus
{
  required int32 tableID=1;						//桌子ID
  required int32 chairID=2;						//椅子ID
  required enumUserStatus userStatus=3;			//用户状态
}

message tagUserScore
{
  required int64 userScore=1;			//用户金币
  optional int32 winCount=2;			//胜局数
  optional int32 lostCount=3;			//败局数
  optional int32 drawCount=4;			//平局数
  optional int32 fleeCount=5;			//逃局数

}
//M_Cmd 主命令
//S_Cmd 次命令

///////////////////登录消息///////////////////
//M_Cmd : 1   S_Cmd : 4
message GSLogonTokenID
{
  required int32 merchantID = 1;		//商户ID
  required int32 userID = 2;			//用户ID
  required string tokenID = 3;			//令牌ID
  required string machineID = 4;		//机器码
  optional string clientIP = 5;			//源IP
  required int32  deviceType =6;		//设备类型
}

///////////////////登录结果///////////////////
//M_Cmd : 1   S_Cmd : 100
message GSLogonSuccess
{
  optional int64 userRight=1;			//用户权限
  optional int64 masterRight=2;			//管理权限
}

//M_Cmd : 1   S_Cmd : 102
message GSLogonFinish
{
  optional int32 resultCode=1;			//登录完成
  optional string resultStr=2;			//登录描述
}

//M_Cmd : 1   S_Cmd : 101
message GSLogonFailure
{
  optional int32 errorCode=1;			//错误代码	
  optional string describeString=2;		//描述消息
}

///////////////////用户消息///////////////////
//坐下
//M_Cmd : 3   S_Cmd : 15
message GSUserSitDown
{
  required int32 userID=1;				//用户ID
  required int32 tableID=2;				//桌子ID
  required int32 chairID=3;				//椅子ID
  optional string tableTokenID=4;  		//桌子密码
}
//起立
//M_Cmd : 3   S_Cmd : 16
message GSUserStandUp
{
  required int32 userID=1;				//用户ID
  required int32 tableID=2;				//桌子ID
  required int32 chairID=3;				//椅子ID
  optional bool forceLeave=4;			//是否强行离开
}
//换桌
//M_Cmd : 3   S_Cmd : 17
message GSUserChangeTable
{
	required int32 userID=1;				//用户ID
}
// 请求失败
//M_Cmd : 3   S_Cmd : 103
message GSUserRequestFailure
{
  optional int32 errorCode=1;			//错误代码	
  optional string describeString=2;		//描述消息
}
// 用户进入
//M_Cmd : 3   S_Cmd : 100
message GSUserEnter
{
  required int32 userID=1;
  optional int32 faceID=2;
  optional int32 gender=3;
  required tagUserStatus userStatus=4;
  required int64 score=5;
  optional string nickName=6;
}
//用户离开
//M_Cmd : 3   S_Cmd : 104
message GSUserLeave
{
  optional int32 userID=1;
}

//M_Cmd : 3   S_Cmd : 102
message GSUserStatus
{
  required int32 userID=1;
  required tagUserStatus userStatus=2;						//用户状态
}

//M_Cmd : 3   S_Cmd : 101
message GSUserScore
{
  required int32 userID=1;
  required tagUserScore userScore=2;				//用户分数
}

///////////////////框架消息///////////////////
//M_Cmd : 100   S_Cmd : 21
message GSGameOption
{
  required int32 userID=1;
  optional bool allowLookon=2;			//旁观标志
}

//M_Cmd : 100   S_Cmd : 22
message GSUserReady
{
  required int32 userID=1;
}

// //M_Cmd : 100   S_Cmd : 100  								// 游戏状态
//游戏环境
message Proto_GameStatus
{
	required int32							cbGameStatus=1;						//游戏状态
};

// //M_Cmd : 100   S_Cmd : 205  								// SQL滚动消息
message SQL_S_Scroll_Message
{
	required int32				bMessageType=1;						// 滚动消息类型 0 直接滚动 1 组合滚动
	repeated string 			sScrollMsg=2;						// 消息数据
};
///////////////////系统消息///////////////////
//M_Cmd: 1000    S_Cmd: 1
message GSSystemMessage
{
  required int32 messageType=1;			//消息类型
  required string messageString=2;		//消息内容
}

///////////////////心跳消息///////////////////
//M_Cmd : 65535   S_Cmd : 65535
message GSUserHeart
{
  optional int32 userID=1;				//
}
///////////////////游戏消息(子游戏定义)///////////////////

